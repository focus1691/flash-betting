{"version":3,"sources":["reducers/sportReducer.js","reducers/marketReducer.js","reducers/accountReducer.js","reducers/settingsReducer.js","reducers/orderReducer.js","reducers/stopLossReducer.js","reducers/stopEntryReducer.js","reducers/backReducer.js","reducers/layReducer.js","reducers/graphReducer.js","reducers/fillOrKillReducer.js","reducers/tickOffsetReducer.js","utils/Reducers.js","actions/account.js","components/Login.js","components/Logout.js","actions/settings.js","actions/market.js","actions/stopLoss.js","actions/tickOffset.js","actions/stopEntry.js","components/Sidebar/FlagIcon.js","components/Sidebar/Clock.js","utils/NumberFormat.js","components/Sidebar/Account.js","components/Sidebar/Toolbar.js","components/Styles/Styles.js","utils/PriceCalculator.js","utils/Bets/getOppositeSide.js","utils/TradingStategy/HedingCalculator.js","actions/order.js","actions/lay.js","actions/back.js","actions/fillOrKill.js","utils/TradingStategy/BackLay.js","components/Sidebar/Countdown.js","components/Sidebar/Event.js","components/Sidebar/Menu/SportsFilterList.js","components/Sidebar/Menu/SelectSport.js","components/Sidebar/Menu/SportsClickList.js","components/Sidebar/Menu/SelectCompetition.js","components/Sidebar/Menu/SelectEvent.js","components/Sidebar/Menu/SelectMarket.js","components/Sidebar/Menu/MyMarkets.js","components/Sidebar/Menu/AllSports.js","actions/sport.js","components/Sidebar/Menu/ActiveBets.js","components/Sidebar/Menu/index.js","components/Sidebar/Market/Ladders.js","components/MaterialUI/StyledMenuItem.js","components/MaterialUI/StyledMenu.js","utils/ladder/CreateFullLadder.js","components/Sidebar/Market/OrderTools/StopEntry.js","components/Sidebar/Market/OrderTools/StopLoss.js","components/Sidebar/Market/OrderTools/TickOffset.js","components/Sidebar/Market/OrderTools/Back.js","components/Sidebar/Market/OrderTools/Lay.js","components/Sidebar/Market/OrderTools/FillOrKill.js","components/Sidebar/Market/OrderTools/index.js","utils/combineUnmatchedOrders.js","components/Sidebar/Market/UnmatchedBets.js","components/Sidebar/Market/MatchedBets.js","components/Sidebar/Market/Graphs.js","actions/graph.js","components/Sidebar/Market/MarketInfo.js","components/Sidebar/Market/Rules.js","components/Sidebar/Market/index.js","components/Sidebar/Settings/TrainingBank.js","components/Sidebar/Settings/index.js","components/Sidebar/index.js","SocketContext.js","components/HomeView/Header.js","components/HomeView/index.js","components/LadderView/LadderContainer.js","utils/EventIcons.js","components/LadderView/LadderHeader.js","components/LadderView/PercentageRow.js","utils/ColorManipulator.js","components/LadderView/PriceRow.js","components/LadderView/OrderRow.js","utils/TradingStategy/TickOffset.js","components/LadderView/LadderOrderCell.js","utils/TradingStategy/StopLoss.js","components/LadderView/LadderRow.js","utils/Bets/getProfitAndLoss.js","components/LadderView/Ladder.js","components/LadderView/index.js","components/GridView/RaceStatus.js","utils/Video.js","components/GridView/GridHeader.js","components/GridView/GridDetailCell.js","utils/Bets/SelectionHasBets.js","components/GridView/EmptyCell.js","utils/ladder/DeconstructLadder.js","utils/DeconstructRunner.js","components/GridView/GridDetailSuspCell.js","components/GridView/NonRunner.js","components/GridView/SuspendedGrid.js","components/GridView/GridOrderRow.js","components/GridView/SuspendedWarning.js","components/GridView/index.js","utils/Bets/Validator.js","utils/Bets/GetMarketCashout.js","utils/GetQueryVariable.js","utils/ladder/AddRunner.js","utils/Algorithms/Sort.js","utils/Algorithms/SearchInsert.js","utils/ladder/UpdateRunner.js","utils/DateCalculator.js","components/PremiumPopup.js","utils/ExchangeStreaming/OCMHelper.js","components/DraggableGraph.js","utils/TradingStategy/StopEntry.js","utils/ExchangeStreaming/MCMHelper.js","components/App.js","components/ClosedMarketView/MarketSettlement.js","components/ClosedMarketView/ClosedMarketReport.js","components/ClosedMarketView/BetsPlaced.js","components/GetClosedMarketStats.js","components/Authentication.js","components/OAuthRedirect.js","index.js"],"names":["initialState","sports","currentSport","currentSportId","undefined","sportCountries","currentCountry","countryCompetitions","currentCompetition","competitionEvents","currentEvent","eventMarkets","currentMarket","reducer","state","arguments","length","action","type","Object","objectSpread","payload","marketOpen","inPlay","status","currentMarketVolume","runnerSelection","nonRunners","runners","ladder","excludedLadders","ladderOrder","oneClickOn","priceType","myMarkets","defineProperty","id","order","backLay","stake","price","visible","stakeLiability","name","countryCode","currencyCode","localeCode","balance","time","Date","toLocaleString","loggedIn","toLowerCase","view","isLoading","premiumMember","premiumPopupOpen","fullscreen","trainingBalance","sounds","tools","open","unmatchedBets","matchedBets","graphs","marketInfo","winMarketsOnly","rules","trainingLadderAutoCenter","ladderUnmatched","stakeBtns","layBtns","update","$set","value","newStake","assign","selectionId","bets","matched","unmatched","selected","offset","units","trailing","hedged","list","selections","text","concat","operator","ticks","side","hours","minutes","seconds","executionTime","transparent","percentTrigger","Reducers","account","accountReducer","sportReducer","market","marketReducer","settings","settingsReducer","orderReducer","stopLoss","stopLossReducer","tickOffset","tickOffsetReducer","back","backReducer","lay","layReducer","fillOrKill","fillOrKillReducer","stopEntry","stopEntryReducer","graph","graphReducer","setLoggedIn","useStyles","makeStyles","theme","@global","body","backgroundColor","paper","marginTop","spacing","display","flexDirection","alignItems","borderRadius","border","avatar","margin","form","width","padding","submit","connect","dispatch","onLogin","actions","props","_useCookies","useCookies","_useCookies2","slicedToArray","cookies","setCookie","removeCookie","_useState","useState","rememberMe","_useState2","setRememberMe","classes","react_default","a","createElement","Fragment","sessionKey","react_router","to","Container","component","maxWidth","CssBaseline","className","src","window","location","origin","alt","Typography","variant","noValidate","TextField","required","fullWidth","label","username","onChange","e","target","autoComplete","autoFocus","password","FormControlLabel","control","Checkbox","color","checked","Button","onClick","fetch","then","res","json","error","onLogout","useEffect","logout","openPremiumDialog","setPremiumStatus","isPremium","toggleSound","isSelected","toggleTools","toggleUnmatchedBets","toggleMatchedBets","toggleGraph","toggleMarketInformation","setWinMarketsOnly","isChecked","toggleRules","toggleLadderUnmatched","unmatchedColumn","setStakeInOneClick","loadRunners","updateExcludedLadders","ladders","setRunner","runner","loadMyMarkets","markets","updateStopLossList","updateTickOffsetList","updateStopEntryList","FlagIcon","FlagIconFactory","React","useCssModules","Clock","setTime","useInterval","formatCurrency","number","Intl","NumberFormat","toUpperCase","style","currency","format","onReceiveAccountDetails","details","onReceiveBalance","onUpdateTime","catch","err","Sidebar_FlagIcon","code","Sidebar_Clock","onViewChange","onToggleFullscreen","fullscreenSelected","handleClick","background","appBar","fontWeight","title","textAlign","group","calcPercentDifference","size","matchedPrice","currentPrice","initialPL","Math","round","currPL","percentDifference","abs","floor","twoDecimalPlaces","num","parseFloat","toFixed","calcBackProfit","profit","colorForBack","pl","getOppositeSide","calcBackBet","odds","calcHedgeStake","exitPrice","PL","calcHedgedPL2","backPrice","getHedgedBetsToMake","marketId","ltps","betsToMake","ltp","map","reduce","_ref","_ref2","buyPrice","prices","getHedgedBets","values","acc","cur","indexOf","selection","isHedgingOnSelectionAvailable","filter","bet","counter","updateOrders","placeOrder","backStake","layOdds","backersStake","liability","calcLayBet","headers","Accept","Content-Type","method","JSON","stringify","asyncToGenerator","regenerator_default","mark","_callee","betId","adjustedOrder","newUnmatchedBets","newBets","wrap","_context","prev","next","errorCode","abrupt","instructionReports","rfs","customerStrategyRef","strategy","orderCompleteCallBack","stop","_x","apply","this","cancelOrder","key","updateLayList","updateBackList","updateFillOrKillList","checkTimeListsBefore","marketStartTime","onPlaceOrder","newList","ordersToRemove","keys","newSelectionArray","indexesToRemove","index","remainingTime","valueOf","timeOffset","parseInt","item","_x2","_x3","_x4","_x5","_x6","_x7","checkTimeListAfter","_callee2","_context2","timePassed","_x8","_x9","_x10","_x11","_x12","_x13","_x14","_x15","marketStatus","layList","backList","fillOrKillList","tickOffsetList","onCancelOrder","onUpdateLayList","onUpdateBackList","onUpdateFillOrKillList","onUpdateTickOffsetList","onChangeOrders","orders","timeRemaining","setTimeRemaining","newBackList","newLayList","newFillOrKillList","adjustedTickOffsetList","adjustedUnmatchedBets","sent","now","startTime","sizeReduction","tickOffsetOrder","padZeroes","str","toString","ms","msToHMS","Sidebar_Countdown","AppBar","position","toLocaleTimeString","marketName","event","venue","SportsFilterList","itemSelector","clickHandler","idSelector","updateMyMarkets","marketItemSaved","find","sportId","height","paddingBottom","marginLeft","ListItemIcon","minWidth","cursor","alignSelf","ListItem","button","Divider","SelectSport","countries","sortByTime","b","parse","selectSportClick","sport","test","eventType","replace","data","currentDay","getDay","marketStartDay","dateSettings","timeZone","hour12","marketStartDate","getNewName","sort","ListItemText","localeCompare","competition","SportsClickList","currentItem","newArray","currentItemName","newArrayName","listSelector","reverseClickHandler","currentItemFull","SelectCompetition","competitions","SelectEvent","result","SelectMarket","onReceiveMyMarkets","selectedMarket","setSelectedMarket","_useState3","_useState4","setCurrentSport","handleMarketClick","marketSelection","marketList","api","country","mapMarkets","sortMarkets","_newSport","response","newSport","_args","handleSelectMyMarket","List","openDate","onReceiveAllSports","onUpdateCurrentSport","onUpdateMyMarkets","push","nameA","nameB","_props$sports$current","ActiveBets","events","setEvents","ExpansionPanel","withStyles","root","boxShadow","&:not(:last-child)","borderBottom","fontSize","expanded","MultiExpansionPanel","ExpansionPanelSummary","zIndex","MultiExpansionPanelSummary","Menu","setExpanded","handleChange","tab","newExpanded","createExpansionPanelSummary","Menu_ExpansionPanelSummary","aria-controls","createTitle","Menu_ExpansionPanel","Menu_MyMarkets","Menu_AllSports","Menu_ActiveBets","onChangeExcluded","_deconstructLadder","atb","atl","deconstructLadder","runnerName","marginRight","marginBottom","&:focus","& .MuiListItemIcon-root, & .MuiListItemText-primary","palette","common","white","MenuItem","esm_Menu_Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","ALL_PRICES","Array","fill","l","formatPriceKey","formatPrice","calcBackLayPercentages","i","indices","slice","s","v","getFiveDeviationBackLayPrices","backMatched","layMatched","total","backPercent","layPercent","createDataPoints","backProfit","layProfit","flexWrap","formControl","formControlLabel","& label","textField","backPriceTextFields","select","stopEntryList","onReceiveOperator","onReceiveTicks","onReceiveStake","onReceivePrice","onRecieveSide","onUpdateStopEntryList","onSelection","_React$useState","_React$useState2","anchorEl","setAnchorEl","_React$useState3","_React$useState4","handleMenuItemClick","newStopEntryList","Promise","all","referenceStrategyId","convertedSelection","addedOrder","crypto","randomBytes","substring","targetLTP","stopEntryCondition","react","aria-label","aria-haspopup","currentTarget","primary","secondary","StyledMenu","keepMounted","Boolean","onClose","StyledMenuItem","FormControl","InputLabel","Select","native","input","OutlinedInput","inputProps","min","max","onTextUpdate","onReceiveOffset","onReceiveUnit","unit","onToggleTrailing","onToggleHedged","box1Val","box2Val","RadioGroup","Radio","onReceivePercentTrigger","percent","onReceiveHedged","container","textField2","onReceiveHours","onReceiveMinutes","onReceiveSeconds","onToggleExecutionTime","onReceiveFillOrKill","StyledTableCell","head","black","TableCell","StyledTableRow","&:nth-of-type(odd)","default","TableRow","createData","abbreviation","description","isOpen","toggleExpand","toggleSelected","table","stopLossText","stopLossSelected","tickOffsetText","tickOffsetSelected","backText","backSelected","layText","laySelected","fillKillText","fillKillSelected","stopEntrySelected","onStopEntrySelection","onStopLossSelection","onTickOffsetSelection","onBackSelection","onLaySelection","onFillOrKillSelection","toggleStopLoss","toggleTickOffset","_useState5","_useState6","toggleBack","_useState7","_useState8","toggleLay","_useState9","_useState10","toggleFillOrKill","_useState11","_useState12","toggleStopEntry","rows","OrderTools_StopLoss","OrderTools_TickOffset","OrderTools_Back","OrderTools_Lay","OrderTools_FillOrKill","setFillOrKillSelected","OrderTools_StopEntry","setStopEntrySelected","Paper","Table","TableBody","row","scope","colSpan","align","Collapse","hidden","in","combineUnmatchedOrders","stopLossList","unmatchedList","allOrders","selectionKeyCombinations","nonSelectionKeyCombinations","newAllOrders","objectsToAdd","selectionInAllOrders","onChangeStopLossList","onChangeTickOffsetList","onChangeStopEntryList","onChangeLayList","onChangeBackList","onChangeFillOrKillList","newTickOffsetList","newStopLossList","newFillOrKill","visibility","pointerEvents","selectionObject","remainingMinutes","remainingSeconds","suffix","filteredOrders","onOpenGraph","setGraph","URI","onDoubleClick","metadata","CLOTH_NUMBER","runnerId","COLOURS_FILENAME","TRAINER_NAME","AGE","WEIGHT_VALUE","WEIGHT_UNITS","FORM","DAYS_SINCE_LAST_RUN","JOCKEY_CLAIM","COLOURS_DESCRIPTION","STALL_DRAW","OWNER_NAME","JOCKEY_NAME","COLOUR_TYPE","SEX_TYPE","FORECASTPRICE_NUMERATOR","FORECASTPRICE_DENOMINATOR","OFFICIAL_RATING","setRules","profitAndLoss","Market_Ladders","Market_OrderTools","Market_UnmatchedBets","Market_MatchedBets","Graphs","Market_MarketInfo","Market_Rules","TrainingBank","receiveTrainingBalance","styles","val","onReceiveTrainingBalance","onToggleSounds","onToggleTools","onToggleUnmatchedBets","onToggleMatchedBets","onToggleGraph","onToggleMarketInformation","onUpdateWinMarketsOnly","onToggleRules","onToggleTrainingLadderAutoCenter","onToggleLadderUnmatched","onUpdateStakeBtn","onUpdateLayBtn","saveSetting","setting","settings.sounds","settings.tools","settings.unmatchedBets","settings.matchedBets","settings.graphs","settings.marketInfo","settings.winMarketsOnly","settings.rules","settings.trainingLadderAutoCenter","settings.ladderUnmatched","labelPlacement","settings.stakeBtns","settings.layBtns","BootstrapButton","textTransform","lineHeight","borderColor","fontFamily","join","&:hover","&:active","createMuiTheme","green","openTab","setOpenTab","createToggleButton","ThemeProvider","Drawer","anchor","Sidebar_Account","Sidebar_Toolbar","Sidebar_Event","Sidebar_Menu","Sidebar_Market","Sidebar_Settings","renderActiveTab","SocketContext","createContext","Header","Grid_Grid","xs","gutterBottom","lg","Chip","subscription","textMargin","subscribed","subheading","premiumStatus","textDecoration","divider","HomeView","styleProps","setData","information","section2","whiteSpace","href","src_SocketContext","Consumer","socket","HomeView_HomeView","LadderContainer","isReferenceSet","containerRef","isMoving","isLadderDown","setIsReferenceSet","ladderOrderList","swapLadders","setIsMoving","setLadderDown","children","left","current","clientWidth","opacity","ref","onLoad","onMouseMove","moveLadder","movementX","clientX","onMouseUp","returnToOrderedPos","onMouseLeave","offsetPos","cursorPosition","otherNodes","parentNode","childNodes","relativeCursorPosition","offsetParent","scrollLeft","offsetLeft","_loop","midPoint","thisLadderIndex","findIndex","trim","thisLadderId","thisLadderOrder","otherLadderIndex","otherLadderId","otherLadderOrder","iconForEvent","sportID","LadderHeader","runnerClick","ladderLTPHedge","oddsHovered","ordersOnMarket","oddsHoveredCalc","onMouseDown","onError","onerror","PercentageRow","tv","LightenDarkenColor","col","amt","usePound","r","g","getOrderBtnBG","buttonType","oneClickStake","colorContrast","bg","stakeVal","onSetStake","buttons","castedPrices","isArray","colspan","onChangePriceType","changePriceType","allUnmatchedBets","unmatchedBetsArr","rowSpan","verticalAlign","specialSuffix","minHeight","findTickOffset","arr","computedPrice","closestToComputed","priceReached","stopLossUnits","stopLossHedged","tickOffsetTicks","tickOffsetUnits","tickOffsetTrigger","tickOffsetHedged","fillOrKillSelected","fillOrKillSeconds","cell","isStopLoss","stopLossData","changeStopLossList","hedgeSize","onHover","onLeave","onMouseEnter","_orderCompleteCallBack","newTickOffset","addedFillOrKillOrder","custom","assignedIsOrderMatched","percentageTrigger","minFillSize","onContextMenu","_ref3","_callee3","_context3","preventDefault","findStopPosition","findStopPositionForPercent","LadderRow","_ref$data","ltpList","setOddsHovered","volume","indexInLTPList","tick","volumeVal","class","right","LadderView_LadderOrderCell","getPLForRunner","Ladder","onSelectRunner","selectionMatchedBets","_ref$volume","useRef","listRef","listRefSet","setlistRefSet","interval","setInterval","ltpIndex","fullLadder","scrollToItem","clearInterval","filteredLTPs","pos","coloredLTPList","placeStopLossOrder","customStopLoss","parsedVolume","vol","fullLadderWithProfit","index_esm","dist_index_esm","itemCount","itemSize","paddingRight","offsetWidth","itemData","LadderView_PriceRow","LadderView_OrderRow","marketVolume","stopLossOffset","stopLossTrailing","onChangeLadderOrder","newOrderList","newMatchedBets","fromIndex","toIndex","LadderView_Ladder","newStopLoss","adjustedNewStopLoss","renderContent","img","openLiveStream","GridHeader","oneClickRef","toggleOneClick","setStakeOneClick","marketCashout","renderRaceStatus","sum","sumMatchedBets","hedgedBets","recursivePlaceHedge","logo","hedge","selectionBets","selectionHasBets","EmptyCell","DeconstructLadder","batb","batl","DeconstructRunner","GridDetailSuspCell","NonRunner","selectRunner","SuspendedGrid","eventId","_DeconstructRunner","GridOrderRow","orderProps","toggleStakeAndLiabilityButtons","toggleBackAndLay","updateOrderSize","updateOrderPrice","toggleOrderRowVisibility","text2","SuspendedWarning","onUpdateRunners","onUpdateOrder","onUpdateOrderValue","onUpdateOrderPrice","onUpdateOrderVisibility","onToggleStakeAndLiability","onToggleBackAndLay","onToggleOneClick","active","rowHovered","setRowHovered","activeOrder","setActiveOrder","ordersVisible","setOrdersVisible","createRef","handlePriceClick","handlePriceHover","$","one","renderRow","betOdds","bestOdds","createCell","renderProfitAndLossAndHedge","renderRunners","_DeconstructLadder","GridView_GridDetailCell","reverse","ltpSelectionIdObject","tot","getMarketCashout","node","blur","focus","GetQueryVariable","variable","vars","search","split","pair","AddRunner","k","Ladders","priceKey","createFullLadder","sortAsc","splice","SearchInsert","nums","reversed","start","end","UpdateRunner","rawData","toConsumableArray","newAtb","j","newAtl","isPremiumActive","timeDiff","flex","paypal","Transition","forwardRef","Slide","direction","Dialog","TransitionComponent","esm_Toolbar_Toolbar","IconButton","edge","Close_default","DialogContent","DialogContentText","react_paypal_express_checkout_default","env","client","sandbox","production","onSuccess","payment","expiresIn","getMonth","getFullYear","getDate","getDate30DaysAhead","onCancel","checkStopLossForMatch","previousCheckForMatchArray","checkForMatchInStopLoss","sr","checkTickOffsetForMatch","previousTickOffsetOrdersToRemove","previousCheckForMatchInTickOffset","tickOffsetItem","tickOffsetOrdersToRemove","checkForMatchInTickOffset","sm","console","log","stopEntryCheck","currentLTP","stopEntryArray","testing","stopEntryListChange","previousNewStopEntryList","t0","stopLossTrailingChange","oldMaxLadderLTP","adjustedStopLoss","stopLossCheck","stopLossOrdersToRemove","previousAdjustedStopLossList","tickOffsetStrategy","newStopLossOrdersToRemove","adjustedStopLossList","targetMet","stopPrice","App","loadSession","encodeURIComponent","loadSettings","onReceiveStakeBtns","onReceiveLayBtns","expiryDate","isActive","loadMarket","_callee7","loadedBackOrders","loadedLayOrders","loadedStopEntryOrders","loadedTickOffsetOrders","loadedFillOrKillOrders","loadedStopLossOrders","loadedUnmatchedOrders","loadedMatchedOrders","_context7","getQueryVariable","onReceiveMarket","emit","_ref4","_callee6","loadOrders","_context6","_ref5","_callee5","currentOrders","currentOrdersObject","_context5","averagePriceMatched","_ref6","_ref7","_callee4","orderData","_context4","sizeMatched","priceSize","loadData","_ref8","_callee8","_context8","setLoading","customerStrategyRefs","on","_ref9","_callee10","adjustedBackList","adjustedLayList","marketBook","_data","_context10","marketDefinition","onMarketStatusChange","setInPlay","rc","_ref10","_callee9","_marketId","adjustedBackOrderArray","adjustedLayOrderArray","maxLTP","combinedSize","profitArray","stopLossMatched","_context9","off","onReceiverLadders","onReceiveNonRunners","onChangeExcludedLadders","ex","tradedVolume","onSetMarketVolume","_ref11","_callee11","_context11","oc","changes","orc","uo","tickOffsetCheck","react_loader_spinner_default","Helmet","components_Sidebar","react_draggable_min_default","bounds","top","components_DraggableGraph","components_HomeView","LadderView","GridView","renderView","PremiumPopup","premiumPopup","actions2","App_App","MarketSettlement","paddingLeft","justifyContent","borderTop","tableWrapper","maxHeight","overflowX","columns","ClosedMarketReport","selectionWithBets","stickyHeader","TableHead","column","hover","role","tabIndex","BetsPlaced","_ref$runners","runnersObject","matchedBetsAdjustments","placedDate","getStatus","getRunner","calculateNewPlacedDate","isSideBack","win","betPlacedDate","currentDate","newPlacedDate","completedOrders","setCompletedOrders","setMarketInfo","getMarketInfo","isSubscribed","setSubscribed","tokenGranted","setTokenGranted","accessToken","refreshToken","openSocket","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","es6","Provider","react_router_dom","path","exact","Login","GetClosedMarketStats","Authentication","OAuthRedirect","Logout","document","getElementById"],"mappings":"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","file":"static/js/main.dbdbe2e9.chunk.js","sourcesContent":["const initialState = {\r\n    sports: [],\r\n    currentSport: {\r\n        currentSportId: undefined,\r\n        sportCountries: [], \r\n        currentCountry: undefined,\r\n        countryCompetitions: [],\r\n        currentCompetition: undefined,\r\n        competitionEvents: [],\r\n        currentEvent: undefined,\r\n        eventMarkets: [],\r\n    },\r\n    currentMarket: undefined\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case \"SPORTS_LIST\":\r\n            return { ...state, sports: action.payload };\r\n        case \"SPORTS_CURRENT\":\r\n            return { ...state, currentSport: action.payload };\r\n        case \"CURRENT_MARKET\":\r\n            return { ...state, currentMarket: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","const initialState = {\r\n  marketOpen: false,\r\n  inPlay: false,\r\n  status: 'OPEN',\r\n  currentMarket: {},\r\n  currentMarketVolume: {},\r\n  runnerSelection: 0,\r\n  nonRunners: {},\r\n  runners: {},\r\n  ladder: {},\r\n  excludedLadders: [], \r\n  ladderOrder: {},\r\n  oneClickOn: false,\r\n  priceType: \"STAKE\",\r\n  myMarkets: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"NEW_MARKET_STATUS\":\r\n      return { ...state, status: action.payload };\r\n    case \"SET_IN_PLAY\":\r\n      return { ...state, inPlay: action.payload };\r\n    case \"LOAD_MARKET\":\r\n      return { ...state, currentMarket: action.payload };\r\n    case \"SET_MARKET_VOLUME\":\r\n      return { ...state, currentMarketVolume: action.payload };\r\n    case \"LOAD_LADDER\":\r\n      return { ...state, marketOpen: true, ladder: action.payload };\r\n    case \"LOAD_NON_RUNNERS\":\r\n      return { ...state, nonRunners: action.payload };\r\n    case \"LOAD_RUNNERS\":\r\n      return { ...state, runners: action.payload };\r\n    case \"EXCLUDE_LADDERS\":\r\n      return { ...state, excludedLadders: action.payload };\r\n    case \"UPDATE_LADDER_ORDER\": \r\n      return { ...state, ladderOrder: action.payload };\r\n    case \"SELECT_RUNNER\":\r\n      return { ...state, runnerSelection: action.payload };\r\n    case \"TOGGLE_ONE_CLICK\":\r\n        return { ...state, oneClickOn: action.payload };\r\n    case \"LOAD_MY_MARKETS\":\r\n        return { ...state, myMarkets: action.payload };\r\n    case \"UPDATE_ORDER\":\r\n      return {\r\n        ...state,\r\n        runners: {\r\n          ...state.runners,\r\n          [action.payload.id]: {\r\n            ...state.runners[action.payload.id],\r\n            order: {\r\n              ...state.runners[action.payload.id].order,\r\n              backLay: action.payload.backLay,\r\n              stake: action.payload.stake,\r\n              price: action.payload.price,\r\n              visible: action.payload.visible\r\n            }\r\n          }\r\n        }\r\n      };\r\n      case \"UPDATE_ORDER_VALUE\":\r\n      return {\r\n        ...state,\r\n        runners: {\r\n          ...state.runners,\r\n          [action.payload.id]: {\r\n            ...state.runners[action.payload.id],\r\n            order: {\r\n              ...state.runners[action.payload.id].order,\r\n              stake: action.payload.stake\r\n            }\r\n          }\r\n        }\r\n      };\r\n    case \"UPDATE_ORDER_PRICE\":\r\n      return {\r\n        ...state,\r\n        runners: {\r\n          ...state.runners,\r\n          [action.payload.id]: {\r\n            ...state.runners[action.payload.id],\r\n            order: {\r\n              ...state.runners[action.payload.id].order,\r\n              price: action.payload.price\r\n            }\r\n          }\r\n        }\r\n      };\r\n    case \"TOGGLE_STAKE_AND_LIABILITY\":\r\n      return {\r\n        ...state,\r\n        runners: {\r\n          ...state.runners,\r\n          [action.payload.id]: {\r\n            ...state.runners[action.payload.id],\r\n            order: {\r\n              ...state.runners[action.payload.id].order,\r\n              stakeLiability: state.runners[action.payload.id].order.stakeLiability ^ 1\r\n            }\r\n          }\r\n        }\r\n      };\r\n      case \"TOGGLE_BACK_AND_LAY\":\r\n      return {\r\n        ...state,\r\n        runners: {\r\n          ...state.runners,\r\n          [action.payload.id]: {\r\n            ...state.runners[action.payload.id],\r\n            order: {\r\n              ...state.runners[action.payload.id].order,\r\n              backLay: state.runners[action.payload.id].order.backLay ^ 1\r\n            }\r\n          }\r\n        }\r\n      };\r\n    case \"TOGGLE_ORDER_VISIBILITY\":\r\n      return {\r\n        ...state,\r\n        runners: {\r\n          ...state.runners,\r\n          [action.payload.id]: {\r\n            ...state.runners[action.payload.id],\r\n            order: {\r\n              ...state.runners[action.payload.id].order,\r\n              visible: action.payload.visible\r\n            }\r\n          }\r\n        }\r\n      };\r\n    case \"SWITCH_PRICE_TYPE\":\r\n      return { ...state, priceType: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  name: \"\",\r\n  countryCode: \"\",\r\n  currencyCode: \"\",\r\n  localeCode: \"\",\r\n  balance: \"\",\r\n  time: new Date().toLocaleString(),\r\n  loggedIn: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ACCOUNT_DETAILS\":\r\n      return {\r\n        ...state,\r\n        name: action.payload.name,\r\n        countryCode: action.payload.countryCode.toLowerCase(),\r\n        currencyCode: action.payload.currencyCode,\r\n        localeCode: action.payload.localeCode\r\n      };\r\n    case \"LAST_NAME\":\r\n      return action.payload;\r\n    case \"ACCOUNT_BALANCE\":\r\n      return { ...state, balance: action.payload };\r\n    case \"UPDATE_TIME\":\r\n      return { ...state, time: action.payload };\r\n    case \"LOG_IN\":\r\n      return { ...state, loggedIn: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import update from 'immutability-helper';\r\n\r\nconst initialState = {\r\n  view: \"HomeView\",\r\n  isLoading: true,\r\n  premiumMember: false,\r\n  premiumPopupOpen: false,\r\n  fullscreen: false,\r\n  trainingBalance: 1000,\r\n  sounds: false,\r\n  tools: {\r\n    visible: true,\r\n    open: false\r\n  },\r\n  unmatchedBets: {\r\n    visible: false,\r\n    open: false\r\n  },\r\n  matchedBets: {\r\n    visible: false,\r\n    open: false\r\n  },\r\n  graphs: {\r\n    visible: false,\r\n    open: false\r\n  },\r\n  marketInfo: {\r\n    visible: false,\r\n    open: false\r\n  },\r\n  winMarketsOnly: true,\r\n  rules: {\r\n    visible: false,\r\n    open: false\r\n  },\r\n  trainingLadderAutoCenter: false,\r\n  ladderUnmatched: \"hedged\",\r\n  stakeBtns: [2, 4, 6, 8, 10, 12, 14],\r\n  layBtns: [2.5, 5, 7.5, 10, 12.5, 15, 17.5],\r\n  stake: {}\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ACTIVE_VIEW\":\r\n      return { ...state, view: action.payload };\r\n    case \"SET_LOADING\":\r\n      return { ...state, isLoading: action.payload };\r\n    case \"SET_PREMIUM_STATUS\":\r\n      return { ...state, premiumMember: action.payload };\r\n    case \"TOGGLE_POPUP\":\r\n      return { ...state, premiumPopupOpen: action.payload };\r\n    case \"FULL_SCREEN\":\r\n      return { ...state, fullscreen: action.payload };\r\n    case \"SET_TRAINING_BALANCE\":\r\n      return { ...state, trainingBalance: action.payload };\r\n    case \"TOGGLE_SOUNDS\":\r\n      return { ...state, sounds: action.payload };\r\n    case \"TOGGLE_TOOLS\":\r\n      return { ...state, tools: action.payload };\r\n    case \"TOGGLE_UNMATCHED_BETS\":\r\n      return { ...state, unmatchedBets: action.payload };\r\n    case \"TOGGLE_MATCHED_BETS\":\r\n      return { ...state, matchedBets: action.payload };\r\n    case \"TOGGLE_GRAPH\":\r\n      return { ...state, graphs: action.payload };\r\n    case \"TOGGLE_MARKET_INFORMATION\":\r\n      return { ...state, marketInfo: action.payload };\r\n    case \"SET_WIN_MARKETS\":\r\n      return { ...state, winMarketsOnly: action.payload };\r\n    case \"TOGGLE_RULES\":\r\n      return { ...state, rules: action.payload };\r\n    case \"TOGGLE_TRAINING_LADDER_AUTO_CENTER\":\r\n      return { ...state, trainingLadderAutoCenter: action.payload };\r\n    case \"TOGGLE_LADDER_UNMATCHED_COLUMN\":\r\n      return { ...state, ladderUnmatched: action.payload };\r\n    case \"SET_STAKE_BUTTONS\":\r\n      return { ...state, stakeBtns: action.payload };\r\n    case \"SET_LAY_BUTTONS\":\r\n      return { ...state, layBtns: action.payload };\r\n    case \"UPDATE_STAKE_BUTTON\":\r\n      return update(state, { stakeBtns: { [action.payload.id]: { $set: action.payload.value } } });\r\n    case \"UPDATE_LAY_BUTTON\":\r\n      return update(state, { layBtns: { [action.payload.id]: { $set: action.payload.value } } });\r\n    case \"SET_STAKE_IN_ONE_CLICK_MODE\":\r\n      const newStake = Object.assign({}, state.stake);\r\n      newStake[action.payload.selectionId] = action.payload.price\r\n      return { ...state, stake: newStake };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  bets: {\r\n    matched: {}, // betId: {}\r\n    unmatched: {}\r\n  }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case \"PLACE_ORDER\":\r\n      return { ...state, bets: action.payload };\r\n    case \"UPDATE_BET\":\r\n      return { ...state, bets: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  selected: false,\r\n  offset: 5,\r\n  units: \"Ticks\",\r\n  trailing: true,\r\n  hedged: true,\r\n  list: {}, // {marketId: , selectionId: , price(matchedPrice): , side: , size: , tickOffset: , trailing: , units: , rfs(reference strategy): , assignedIsOrderMatched: false}\r\n  selections: null\r\n};\r\ninitialState.text = `${initialState.offset} ${initialState.units} [${\r\n  initialState.trailing ? \"x\" : \"-\"\r\n}][${initialState.hedged ? \"x\" : \"-\"}]`;\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_STOP_LOSS_SELECTED\":\r\n      return { ...state, selected: !state.selected };\r\n    case \"SET_STOP_LOSS_TEXT\":\r\n      return { ...state, text: action.payload };\r\n    case \"SET_STOP_LOSS_OFFSET\":\r\n      return { ...state, offset: action.payload };\r\n    case \"SET_STOP_LOSS_UNITS\":\r\n      return { ...state, units: action.payload };\r\n    case \"TOGGLE_STOP_LOSS_TRAILING\":\r\n      return { ...state, trailing: action.payload };\r\n    case \"TOGGLE_STOP_LOSS_HEDGED\":\r\n      return { ...state, hedged: action.payload };\r\n    case \"UPDATE_STOP_LOSS_LIST\": \r\n      return { ...state, list: action.payload };\r\n    case \"SET_STOP_LOSS_SELECTIONS\":\r\n      return { ...state, selections: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  selected: false,\r\n  operator: \"<\",\r\n  ticks: 3,\r\n  stake: 2,\r\n  price: 750,\r\n  side: 'BACK',\r\n  list: {}, // {selectionId(parameter): [{targetLTP: , stopEntryCondition: , side: , size: , price: },]  }\r\n  selections: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_STOP_ENTRY_SELECTED\":\r\n      return { ...state, selected: !state.selected };\r\n    case \"SET_STOP_ENTRY_OPERATOR\":\r\n      return { ...state, operator: action.payload };\r\n    case \"SET_STOP_ENTRY_TICKS\":\r\n      return { ...state, ticks: action.payload };\r\n    case \"SET_STOP_ENTRY_STAKE\":\r\n      return { ...state, stake: action.payload };\r\n    case \"SET_STOP_ENTRY_PRICE\":\r\n      return { ...state, price: action.payload };\r\n    case \"SET_STOP_ENTRY_SIDE\":\r\n      return { ...state, side: action.payload };\r\n    case \"UPDATE_STOP_ENTRY_LIST\":\r\n      return { ...state, list: action.payload };\r\n    case \"SET_STOP_ENTRY_SELECTIONS\":\r\n      return { ...state, selections: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  selected: false,\r\n  stake: 2,\r\n  price: 750,\r\n  offset: {\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0\r\n  },\r\n  executionTime: \"Before\",\r\n  selections: null,\r\n  list: {} // {selectionId(parameter): [{executionTime: Before, timeOffset: (seconds) , size: (2) , price: (750) }, rfs: ]  }\r\n};\r\ninitialState.text = `${initialState.stake} @ ${initialState.price}`;\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_BACK_SELECTED\":\r\n      return { ...state, selected: !state.selected };\r\n    case \"SET_BACK_TEXT\":\r\n      return { ...state, text: action.payload };\r\n    case \"SET_BACK_STAKE\":\r\n      return { ...state, stake: action.payload };\r\n    case \"SET_BACK_PRICE\":\r\n      return { ...state, price: action.payload };\r\n    case \"SET_BACK_HOURS\":\r\n      return {\r\n        ...state,\r\n        offset: {\r\n          hours: action.payload,\r\n          minutes: state.offset.minutes,\r\n          seconds: state.offset.seconds\r\n        }\r\n      };\r\n    case \"SET_BACK_MINUTES\":\r\n      return {\r\n        ...state,\r\n        offset: {\r\n          hours: state.offset.hours,\r\n          minutes: action.payload,\r\n          seconds: state.offset.seconds\r\n        }\r\n      };\r\n    case \"SET_BACK_SECONDS\":\r\n      return {\r\n        ...state,\r\n        offset: {\r\n          hours: state.offset.hours,\r\n          minutes: state.offset.minutes,\r\n          seconds: action.payload\r\n        }\r\n      };\r\n    case \"TOGGLE_BACK_EXECUTION_BEFORE_OR_AFTER\":\r\n      return { ...state, executionTime: action.payload };\r\n    case \"SET_BACK_SELECTIONS\":\r\n      return { ...state, selections: action.payload };\r\n    case \"UPDATE_BACK_LIST\":\r\n      return { ...state, list: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  selected: false,\r\n  stake: 2,\r\n  price: 750,\r\n  offset: {\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0\r\n  },\r\n  executionTime: \"Before\",\r\n  selections: null,\r\n  list: {} // {selectionId(parameter): [{executionTime: Before, timeOffset: (seconds) , size: (2) , price: (750) },]  }\r\n};\r\ninitialState.text = `${initialState.stake} @ ${initialState.price}`;\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LAY_SELECTED\":\r\n      return { ...state, selected: !state.selected };\r\n    case \"SET_LAY_TEXT\":\r\n      return { ...state, text: action.payload };\r\n    case \"SET_LAY_STAKE\":\r\n      return { ...state, stake: action.payload };\r\n    case \"SET_LAY_PRICE\":\r\n      return { ...state, price: action.payload };\r\n    case \"SET_LAY_HOURS\":\r\n      return {\r\n        ...state,\r\n        offset: {\r\n          hours: action.payload,\r\n          minutes: state.offset.minutes,\r\n          seconds: state.offset.seconds\r\n        }\r\n      };\r\n    case \"SET_LAY_MINUTES\":\r\n      return {\r\n        ...state,\r\n        offset: {\r\n          hours: state.offset.hours,\r\n          minutes: action.payload,\r\n          seconds: state.offset.seconds\r\n        }\r\n      };\r\n    case \"SET_LAY_SECONDS\":\r\n      return {\r\n        ...state,\r\n        offset: {\r\n          hours: state.offset.hours,\r\n          minutes: state.offset.minutes,\r\n          seconds: action.payload\r\n        }\r\n      };\r\n    case \"TOGGLE_LAY_EXECUTION_BEFORE_OR_AFTER\":\r\n      return { ...state, executionTime: action.payload };\r\n    case \"SET_LAY_SELECTIONS\":\r\n      return { ...state, selections: action.payload };\r\n    case \"UPDATE_LAY_LIST\":\r\n        return { ...state, list: action.payload };  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  transparent: false,\r\n  open: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_GRAPH_TRANSPARENCY\":\r\n      return { ...state, transparent: action.payload };\r\n    case \"OPEN_GRAPH\":\r\n      return { ...state, open: !state.open };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","const initialState = {\r\n  selected: false,\r\n  seconds: 10,\r\n  list: {} // {betId(parameter): {seconds: , startTime: }   }\r\n};\r\ninitialState.text = `${initialState.seconds} seconds`;\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FILL_OR_KILL_SELECTED\":\r\n      return { ...state, selected: !state.selected };\r\n    case \"SET_FILL_OR_KILL_TEXT\":\r\n      return { ...state, text: action.payload };\r\n    case \"SET_FILL_OR_KILL_TIME\":\r\n      return { ...state, seconds: action.payload };\r\n    case \"UPDATE_FILL_OR_KILL_LIST\":\r\n      return { ...state, list: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const initialState = {\r\n  selected: false,\r\n  ticks: 2,\r\n  units: \"Ticks\",\r\n  percentTrigger: 2,\r\n  hedged: false,\r\n  list: {} // rfs: {marketId: , selectionId: , price: , size: , side: , percentageTrigger: , rfs:}\r\n};\r\ninitialState.text = `${initialState.ticks} ${initialState.units} [${\r\n  initialState.hedged ? \"x\" : \"-\"\r\n}]`;\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TICK_OFFSET_SELECTED\":\r\n      return { ...state, selected: !state.selected };\r\n    case \"SET_TICK_OFFSET_TEXT\":\r\n      return { ...state, text: action.payload };\r\n    case \"SET_TICK_OFFSET_TICKS\":\r\n      return { ...state, ticks: action.payload };\r\n    case \"SET_TICK_OFFSET_UNIT\":\r\n      return { ...state, units: action.payload };\r\n    case \"SET_TICK_OFFSET_PERCENT_TRIGGER\":\r\n      return { ...state, percentTrigger: action.payload };\r\n    case \"TOGGLE_TICK_OFFSET_HEDGED\":\r\n      return { ...state, hedged: action.payload };\r\n    case \"UPDATE_TICK_OFFSET_LIST\":\r\n      return { ...state, list: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import sportReducer from \"../reducers/sportReducer\";\r\nimport marketReducer from \"../reducers/marketReducer\";\r\nimport accountReducer from \"../reducers/accountReducer\";\r\nimport settingsReducer from \"../reducers/settingsReducer\";\r\nimport orderReducer from \"../reducers/orderReducer\";\r\nimport stopLossReducer from \"../reducers/stopLossReducer\";\r\nimport stopEntryReducer from \"../reducers/stopEntryReducer\";\r\nimport backReducer from \"../reducers/backReducer\";\r\nimport layReducer from \"../reducers/layReducer\";\r\nimport graphReducer from \"../reducers/graphReducer\";\r\nimport fillOrKillReducer from \"../reducers/fillOrKillReducer\";\r\nimport tickOffsetReducer from \"../reducers/tickOffsetReducer\";\r\n\r\nexport default {\r\n  account: accountReducer,\r\n  sports: sportReducer,\r\n  market: marketReducer,\r\n  settings: settingsReducer,\r\n  order: orderReducer,\r\n  stopLoss: stopLossReducer,\r\n  tickOffset: tickOffsetReducer,\r\n  back: backReducer,\r\n  lay: layReducer,\r\n  fillOrKill: fillOrKillReducer,\r\n  stopEntry: stopEntryReducer,\r\n  graph: graphReducer\r\n};\r\n","\r\nexport const setAccountDetails = details => {\r\n    return {\r\n        type: \"ACCOUNT_DETAILS\",\r\n        payload: details\r\n    }\r\n};\r\n\r\nexport const setBalance = balance => {\r\n    return {\r\n        type: \"ACCOUNT_BALANCE\",\r\n        payload: balance\r\n    }\r\n};\r\n\r\nexport const setTime = time => {\r\n    return {\r\n        type: \"UPDATE_TIME\",\r\n        payload: time\r\n    }\r\n};\r\n\r\nexport const setLoggedIn = loggedIn => {\r\n    return {\r\n        type: \"LOG_IN\",\r\n        payload: loggedIn\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/account\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: \"theme.palette.common.white\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FFB80C\",\r\n    borderRadius: \"25px\",\r\n    border: \"5px solid #000\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    margin: theme.spacing(5),\r\n    padding: \"25px\"\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nconst Login = props => {\r\n  const [cookies, setCookie, removeCookie] = useCookies(['sessionKey', 'username', 'password', 'rememberMe']);\r\n\r\n  const [rememberMe, setRememberMe] = useState(cookies.rememberMe && cookies.rememberMe === 'yes' ? true : false );\r\n\r\n  const classes = useStyles();\r\n\r\n  props.onLogin(false);\r\n\r\n  const handleSubmit = e => {\r\n    fetch(`/api/login?user=${cookies.username}&pass=${cookies.password}`)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          removeCookie('sessionKey');\r\n          removeCookie('username');\r\n          removeCookie('password');\r\n          setCookie('rememberMe', 'no');\r\n\r\n          setRememberMe(false);\r\n        } else {\r\n          setCookie('sessionKey', res.sessionKey);\r\n          setCookie('username', cookies.username);\r\n          setCookie('password', cookies.password);\r\n          setCookie('rememberMe', 'yes');\r\n\r\n          setRememberMe(true);\r\n\r\n          props.onLogin(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.loggedIn && cookies.sessionKey ? <Redirect to=\"/authentication\" /> : null}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <img\r\n            src={window.location.origin + \"/images/Webp.net-resizeimage.png\"}\r\n            alt=\"Betfair\"\r\n            className={classes.avatar}\r\n          />\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              value={cookies.username}\r\n              onChange={e => {\r\n                setCookie('username', e.target.value);\r\n              }}\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              value={cookies.password}\r\n              onChange={e => {\r\n                setCookie('password', e.target.value);\r\n              }}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n              checked={rememberMe}\r\n              onChange={(e, checked) => setRememberMe(checked)}\r\n            />\r\n            <Button\r\n              onClick={e => handleSubmit(e)}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.account.loggedIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogin: loggedIn => dispatch(actions.setLoggedIn(loggedIn))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/account\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst Logout = props => {\r\n  const [cookies, setCookie, removeCookie] = useCookies(['sessionKey', 'accessToken', 'refreshToken', 'expiresIn']);\r\n  useEffect(() => {\r\n    fetch(\"/api/logout\")\r\n      .then(res => res.json())\r\n      .then(logout => {\r\n        removeCookie('sessionKey');\r\n        removeCookie('accessToken');\r\n        removeCookie('refreshToken');\r\n        removeCookie('expiresIn');\r\n\r\n        props.onLogout(false);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {props.loggedIn ? null : <Redirect to=\"/\" />}\r\n      <section>Logging out...</section>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedIn: state.account.loggedIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: loggedIn => dispatch(actions.setLoggedIn(loggedIn))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Logout);\r\n","export const setActiveView = view => {\r\n    return {\r\n        type: \"ACTIVE_VIEW\",\r\n        payload: view\r\n    }\r\n};\r\n\r\nexport const setIsLoading = isLoading => {\r\n    return {\r\n        type: \"SET_LOADING\",\r\n        payload: isLoading\r\n    }\r\n};\r\n\r\nexport const openPremiumDialog = open => {\r\n    return {\r\n        type: \"TOGGLE_POPUP\",\r\n        payload: open\r\n    }\r\n};\r\n\r\nexport const setPremiumStatus = isPremium => {\r\n    return {\r\n        type: \"SET_PREMIUM_STATUS\",\r\n        payload: isPremium\r\n    }\r\n};\r\n\r\nexport const setFullscreen = fullscreenSelected => {\r\n    return {\r\n        type: \"FULL_SCREEN\",\r\n        payload: fullscreenSelected\r\n    }\r\n};\r\n\r\nexport const setTrainingBalance = balance => {\r\n    return {\r\n        type: \"SET_TRAINING_BALANCE\",\r\n        payload: balance\r\n    }\r\n};\r\n\r\nexport const toggleLadderColourContrast = isSelected => {\r\n    return {\r\n        type: \"TOGGLE_LADDER_COLOUR_CONTRAST\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const toggleSound = isSelected => {\r\n    return {\r\n        type: \"TOGGLE_SOUNDS\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const toggleTools = settings => {\r\n    return {\r\n        type: \"TOGGLE_TOOLS\",\r\n        payload: settings\r\n    }\r\n};\r\n\r\nexport const toggleUnmatchedBets = settings => {\r\n    return {\r\n        type: \"TOGGLE_UNMATCHED_BETS\",\r\n        payload: settings\r\n    }\r\n};\r\n\r\nexport const toggleMatchedBets = settings => {\r\n    return {\r\n        type: \"TOGGLE_MATCHED_BETS\",\r\n        payload: settings\r\n    }\r\n};\r\n\r\nexport const toggleProfitAndLoss = settings => {\r\n    return {\r\n        type: \"TOGGLE_PROFIT_AND_LOSS\",\r\n        payload: settings\r\n    }\r\n};\r\n\r\nexport const toggleProjectedSP = settings => {\r\n    return {\r\n        type: \"TOGGLE_PROJECTED_SP\",\r\n        payload: settings\r\n    }\r\n};\r\n\r\nexport const toggleGraph = settings => {\r\n    return {\r\n        type: \"TOGGLE_GRAPH\",\r\n        payload: settings\r\n    }\r\n};\r\n\r\nexport const toggleMarketInformation = settings => {\r\n    return {\r\n        type: \"TOGGLE_MARKET_INFORMATION\",\r\n        payload: settings\r\n    }\r\n};\r\n\r\nexport const setWinMarketsOnly = isChecked => {\r\n    return {\r\n        type: \"SET_WIN_MARKETS\",\r\n        payload: isChecked\r\n    }\r\n};\r\n\r\nexport const toggleRules = settings => {\r\n    return {\r\n        type: \"TOGGLE_RULES\",\r\n        payload: settings\r\n    }\r\n};\r\n\r\nexport const toggleTrainingLadderAutoCenter = isSelected => {\r\n    return {\r\n        type: \"TOGGLE_TRAINING_LADDER_AUTO_CENTER\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const toggleLadderUnmatched = unmatchedColumn => {\r\n    return {\r\n        type: \"TOGGLE_LADDER_UNMATCHED_COLUMN\",\r\n        payload: unmatchedColumn\r\n    }\r\n};\r\n\r\nexport const setStakeBtns = buttons => {\r\n    return {\r\n        type: \"SET_STAKE_BUTTONS\",\r\n        payload: buttons\r\n    }\r\n};\r\n\r\nexport const setLayBtns = buttons => {\r\n    return {\r\n        type: \"SET_LAY_BUTTONS\",\r\n        payload: buttons\r\n    }\r\n};\r\n\r\nexport const updateStakeBtn = data => {\r\n    return {\r\n        type: \"UPDATE_STAKE_BUTTON\",\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const updateLayBtn = data => {\r\n    return {\r\n        type: \"UPDATE_LAY_BUTTON\",\r\n        payload: data\r\n    }\r\n};\r\n\r\nexport const setStakeInOneClick = stake => {\r\n    return {\r\n        type: \"SET_STAKE_IN_ONE_CLICK_MODE\",\r\n        payload: stake\r\n    }\r\n};","export const setInPlay = inPlay => {\r\n  return {\r\n    type: \"SET_IN_PLAY\",\r\n    payload: inPlay\r\n  }\r\n}\r\n\r\nexport const setMarketStatus = status => {\r\n  return {\r\n    type: \"NEW_MARKET_STATUS\",\r\n    payload: status\r\n  }\r\n}\r\n\r\nexport const loadMarket = market => {\r\n  return {\r\n    type: \"LOAD_MARKET\",\r\n    payload: market\r\n  };\r\n};\r\n\r\nexport const setMarketVolume = volume => {\r\n  return {\r\n    type: \"SET_MARKET_VOLUME\",\r\n    payload: volume\r\n  };\r\n};\r\n\r\nexport const loadLadder = ladder => {\r\n  return {\r\n    type: \"LOAD_LADDER\",\r\n    payload: ladder\r\n  };\r\n};\r\n\r\nexport const loadRunners = runners => {\r\n  return {\r\n    type: \"LOAD_RUNNERS\",\r\n    payload: runners\r\n  };\r\n};\r\n\r\nexport const loadNonRunners = nonRunners => {\r\n  return {\r\n    type: \"LOAD_NON_RUNNERS\",\r\n    payload: nonRunners\r\n  }\r\n};\r\n\r\nexport const updateExcludedLadders = ladders => {\r\n  return {\r\n    type: \"EXCLUDE_LADDERS\",\r\n    payload: ladders\r\n  };\r\n};\r\n\r\nexport const updateLadderOrder = orderList => {\r\n  return {\r\n    type: \"UPDATE_LADDER_ORDER\",\r\n    payload: orderList\r\n  };\r\n};\r\n\r\nexport const setRunner = runner => {\r\n  return {\r\n    type: \"SELECT_RUNNER\",\r\n    payload: runner\r\n  };\r\n};\r\n\r\nexport const toggleOneClick = active => {\r\n    return {\r\n        type: \"TOGGLE_ONE_CLICK\",\r\n        payload: active\r\n    }\r\n}\r\n\r\nexport const loadMyMarkets = markets => {\r\n  return {\r\n    type: \"LOAD_MY_MARKETS\",\r\n    payload: markets\r\n  }\r\n};\r\n\r\nexport const updateOrder = order => {\r\n  return {\r\n    type: \"UPDATE_ORDER\",\r\n    payload: order\r\n  };\r\n};\r\n\r\nexport const updateOrderValue = val => {\r\n    return {\r\n        type: \"UPDATE_ORDER_VALUE\",\r\n        payload: val\r\n    }\r\n};\r\n\r\nexport const updateOrderPrice = ({price, id}) => {\r\n  return {\r\n    type: \"UPDATE_ORDER_PRICE\",\r\n    payload: {price, id}\r\n  };\r\n};\r\n\r\nexport const toggleStakeAndLiability = ({val, id}) => {\r\n  return {\r\n    type: \"TOGGLE_STAKE_AND_LIABILITY\",\r\n    payload: {stakeLiability: val, id}\r\n  };\r\n};\r\n\r\nexport const toggleBackAndLay = ({val, id}) => {\r\n    return {\r\n        type: \"TOGGLE_BACK_AND_LAY\",\r\n        payload: {backLay: val, id}\r\n    }\r\n};\r\n\r\nexport const toggleVisibility = settings => {\r\n  return {\r\n    type: \"TOGGLE_ORDER_VISIBILITY\",\r\n    payload: settings\r\n  };\r\n};\r\n\r\nexport const changePriceType = priceType => { // stake and liability\r\n  return {\r\n    type: \"SWITCH_PRICE_TYPE\",\r\n    payload: priceType\r\n  };\r\n};\r\n\r\n","export const setStopLossSelected = isSelected => {\r\n    return {\r\n        type: \"SET_STOP_LOSS_SELECTED\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const setStopLossOffset = offset => {\r\n    return {\r\n        type: \"SET_STOP_LOSS_OFFSET\",\r\n        payload: offset\r\n    }\r\n};\r\n\r\nexport const setStopLossUnit = unit => {\r\n    return {\r\n        type: \"SET_STOP_LOSS_UNITS\",\r\n        payload: unit\r\n    }\r\n};\r\n\r\nexport const toggleStopLossTrailing = selected => {\r\n    return {\r\n        type: \"TOGGLE_STOP_LOSS_TRAILING\",\r\n        payload: selected\r\n    }\r\n};\r\nexport const toggleStopLossHedged = selected => {\r\n    return {\r\n        type: \"TOGGLE_STOP_LOSS_HEDGED\",\r\n        payload: selected\r\n    }\r\n};\r\n\r\nexport const setDisplayText = text => {\r\n    return {\r\n        type: \"SET_STOP_LOSS_TEXT\",\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const updateStopLossList = list => {\r\n    return {\r\n        type: \"UPDATE_STOP_LOSS_LIST\",\r\n        payload: list\r\n    }\r\n};\r\n\r\nexport const setSelections = selections => {\r\n    return {\r\n        type: \"SET_STOP_LOSS_SELECTIONS\",\r\n        payload: selections\r\n    }\r\n}","export const setTickOffsetSelected = isSelected => {\r\n    return {\r\n        type: \"SET_TICK_OFFSET_SELECTED\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const setTicks = ticks => {\r\n    return {\r\n        type: \"SET_TICK_OFFSET_TICKS\",\r\n        payload: ticks\r\n    }\r\n};\r\n\r\nexport const setUnit = unit => {\r\n    return {\r\n        type: \"SET_TICK_OFFSET_UNIT\",\r\n        payload: unit\r\n    }\r\n};\r\n\r\nexport const setPercentTrigger = percent => {\r\n    return {\r\n        type: \"SET_TICK_OFFSET_PERCENT_TRIGGER\",\r\n        payload: percent\r\n    }\r\n};\r\n\r\nexport const setHedged = selected => {\r\n    return {\r\n        type: \"TOGGLE_TICK_OFFSET_HEDGED\",\r\n        payload: selected\r\n    }\r\n};\r\n\r\nexport const setDisplayText = text => {\r\n    return {\r\n        type: \"SET_TICK_OFFSET_TEXT\",\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const updateTickOffsetList = list => {\r\n    return {\r\n        type: \"UPDATE_TICK_OFFSET_LIST\",\r\n        payload: list\r\n    }\r\n};","export const setStopEntrySelected = isSelected => {\r\n    return {\r\n        type: \"SET_STOP_ENTRY_SELECTED\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const setLTPOperator = operator => {\r\n    return {\r\n        type: \"SET_STOP_ENTRY_OPERATOR\",\r\n        payload: operator\r\n    }\r\n};\r\n\r\nexport const setTicks = ticks => {\r\n    return {\r\n        type: \"SET_STOP_ENTRY_TICKS\",\r\n        payload: ticks\r\n    }\r\n};\r\n\r\nexport const setStake = stake => {\r\n    return {\r\n        type: \"SET_STOP_ENTRY_STAKE\",\r\n        payload: stake\r\n    }\r\n};\r\n\r\nexport const setPrice = price => {\r\n    return {\r\n        type: \"SET_STOP_ENTRY_PRICE\",\r\n        payload: price\r\n    }\r\n};\r\n\r\nexport const setSide = side => {\r\n    return {\r\n        type: \"SET_STOP_ENTRY_SIDE\",\r\n        payload: side\r\n    }\r\n};\r\n\r\nexport const updateStopEntryList = list => {\r\n    return {\r\n        type: \"UPDATE_STOP_ENTRY_LIST\",\r\n        payload: list\r\n    }\r\n};\r\n\r\nexport const setSelections = selections => {\r\n    return {\r\n        type: \"SET_STOP_ENTRY_SELECTIONS\",\r\n        payload: selections\r\n    }\r\n}","/* your-app/your-components-directory/FlagIcon.js */\r\n// @flow\r\nimport * as React from 'react';\r\nimport FlagIconFactory from 'react-flag-icon-css';\r\n \r\n// Please only use `FlagIconFactory` one time in your application, there is no\r\n// need to use it multiple times (it would slow down your app). You may place the\r\n// line below in a `FlagIcon.js` file in your 'components' directory, then\r\n// write `export default FlagIcon` as shown below and import it elsewhere in your app.\r\nconst FlagIcon = FlagIconFactory(React, {useCssModules: false});\r\n// If you are not using css modules, write the following:\r\n// const FlagIcon = FlagIconFactory(React, { useCssModules: false })\r\n \r\nexport default FlagIcon;","import React, {useState} from 'react';\r\nimport useInterval from 'react-useinterval';\r\n\r\nconst Clock = () => {\r\n    const ONE_SECOND = 1000;\r\n    const [time, setTime] = useState(new Date().toLocaleString());\r\n\r\n\tuseInterval(() => {\r\n\t\tsetTime(new Date().toLocaleString());\r\n    }, ONE_SECOND);\r\n    \r\n\treturn (\r\n        <div className={\"box\"}>\r\n            <img src={window.location.origin + '/icons/calendar-with-alarm-clock.png'} alt={\"Time\"} />\r\n            <span>{time}</span>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Clock;","const formatCurrency = (localeCode, currencyCode, number) => {\r\n  return new Intl.NumberFormat(\r\n    localeCode\r\n      ? `${localeCode}-${localeCode.toUpperCase()}`\r\n      : \"gb-GB\",\r\n    {\r\n      style: \"currency\",\r\n      currency: currencyCode || \"GBP\"\r\n    }\r\n  ).format(number);\r\n};\r\n\r\nexport { formatCurrency };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/account\";\r\nimport FlagIcon from \"./FlagIcon\";\r\nimport Clock from \"./Clock\";\r\nimport { formatCurrency } from \"./../../utils/NumberFormat\";\r\n\r\nconst Account = props => {\r\n  const [loggedIn, setLoggedIn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/get-account-details`)\r\n      .then(res => res.json())\r\n      .then(details => props.onReceiveAccountDetails(details))\r\n      .catch(err => setLoggedIn(false));\r\n\r\n    fetch(`/api/get-account-balance`)\r\n      .then(res => res.json())\r\n      .then(account => props.onReceiveBalance(account.balance))\r\n      .catch(err => setLoggedIn(false));\r\n  }, []);\r\n\r\n  if (!loggedIn) {\r\n    return <Redirect to=\"/logout\" />;\r\n  } else {\r\n    return (\r\n      <div id=\"sidebar-header\">\r\n        <p id=\"flag-name\">\r\n          {props.name}\r\n          <button id=\"logout\" onClick={e => setLoggedIn(false)}>\r\n            <img\r\n              alt={\"Logout\"}\r\n              src={window.location.origin + \"/icons/logout.png\"}\r\n            />\r\n          </button>\r\n        </p>\r\n        <p>\r\n          <FlagIcon code={props.countryCode || \"gb\"} />{\" \"}\r\n          {formatCurrency(props.localeCode, props.currencyCode, props.balance)}\r\n        </p>\r\n        <Clock />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    name: state.account.name,\r\n    countryCode: state.account.countryCode,\r\n    currencyCode: state.account.currencyCode,\r\n    localeCode: state.account.localeCode,\r\n    balance: state.account.balance,\r\n    time: state.account.time\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onReceiveAccountDetails: details =>\r\n      dispatch(actions.setAccountDetails(details)),\r\n    onReceiveBalance: balance => dispatch(actions.setBalance(balance)),\r\n    onUpdateTime: time => dispatch(actions.setTime(time))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Account);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions/settings';\r\n\r\nconst Toolbar = props => {\r\n\t\r\n\tconst handleClick = (view) => {\r\n\t\tprops.onViewChange(view);\r\n\t};\r\n\r\n\tconst toggleFullScreen = (view) => {\r\n\t\tprops.onToggleFullscreen(!props.fullscreen);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"toolbar\">\r\n\t\t\t<button onClick={e => handleClick(\"TrainingView\")} style={props.view === 'TrainingView' ? {background: '#389C41'} : {}}>\r\n\t\t\t\t<img alt={\"Training\"} src={window.location.origin + '/icons/graduated.png'}/>\r\n\t\t\t</button>\r\n\t\t\t<button onClick={e => toggleFullScreen()} style={props.fullscreen ? {background: '#389C41'} : {} }>\r\n\t\t\t\t<img alt={\"Hide\"} src={window.location.origin + '/icons/sort-up.png'}/>\r\n\t\t\t</button>\r\n\t\t\t<button onClick={e => handleClick(\"HomeView\")} style={props.view === 'HomeView' ? {background: '#389C41'} : {}}>\r\n\t\t\t\t<img alt={\"Home\"} src={window.location.origin + '/icons/homepage.png'}/>\r\n\t\t\t</button>\r\n\t\t\t<button onClick={e => props.premiumMember ? handleClick(\"LadderView\") : props.openPremiumDialog(true) } style={props.view === 'LadderView' ? {background: '#389C41'} : {}}>\r\n\t\t\t\t<img alt={\"Ladder\"} src={window.location.origin + '/icons/menu-button-of-three-vertical-lines.png'}/>\r\n\t\t\t</button>\r\n\t\t\t<button onClick={e => handleClick(\"GridView\")} style={props.view === 'GridView' ? {background: '#389C41'} : {}}>\r\n\t\t\t\t<img alt={\"Grid\"} src={window.location.origin + '/icons/menu-button-of-three-horizontal-lines.png'}/>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tview: state.settings.view,\r\n\t\tfullscreen: state.settings.fullscreen,\r\n\t\tpremiumMember: state.settings.premiumMember\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonViewChange: view => dispatch(actions.setActiveView(view)),\r\n\t\tonToggleFullscreen: fullscreenSelected => dispatch(actions.setFullscreen(fullscreenSelected)),\r\n\t\topenPremiumDialog: open => dispatch(actions.openPremiumDialog(open))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toolbar);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    background: \"#303030\",\r\n    color: \"orange\",\r\n    fontWeight: \"900\",\r\n    border: \"2px solid #fff\"\r\n  },\r\n  title: {\r\n  \ttextAlign: \"center\",\r\n  \tfontWeight: \"bold\"\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  }\r\n}));\r\n\r\nexport default useStyles;","/**\r\n * This function sums all matched bets to find the total.\r\n * @param {object} ladder - The ladder containing the price data for a runner.\r\n * @return {number} The total matched bets for the runner.\r\n */\r\nconst sumMatchedBets = ladder => {\r\n  const sum = Object.keys(ladder).reduce(\r\n    (sum, key) => sum + parseFloat(ladder[key].tv[0] || 0),\r\n    0\r\n  );\r\n  return sum ? Math.floor(sum) : \"\";\r\n};\r\n\r\n/**\r\n * This function calculates the percent difference between matched and current prices.\r\n * @param {number} size - The ladder containing the price data for a runner.\r\n * @param {number} matchedPrice - The price the bet was placed at for runner.\r\n * @param {number} currentPrice - The current trading price of the runner\r\n * @return {percentDifference} The percent increase or decrease.\r\n */\r\nconst calcPercentDifference = (size, matchedPrice, currentPrice) => {\r\n  let initialPL = Math.round((size * matchedPrice - size) * 100) / 100;\r\n  let currPL = Math.round((size * currentPrice - size) * 100) / 100;\r\n\r\n  // Round to remove the decimals and absolute to remove negatives\r\n  let percentDifference = Math.abs(Math.round((currPL - initialPL) * 100) /100) / currPL * 100;\r\n  percentDifference = Math.floor(percentDifference);\r\n\r\n  return percentDifference;\r\n};\r\n\r\nconst twoDecimalPlaces = num => {\r\n  return parseFloat((Math.round(num * 100) / 100).toFixed(2));\r\n};\r\n\r\nconst calcBackProfit = (stake, price, side) => {\r\n  const profit = parseFloat((stake * price - stake).toFixed(2));\r\n  if (side === 0) return profit || 0;\r\n  else if (side === 1) return -profit || 0;\r\n};\r\n\r\nconst calcLiability = (stake, side) => {\r\n  if (side === 0) return -stake;\r\n  return Math.abs(stake);\r\n};\r\n\r\nconst colorForBack = (side, pl = 0) => {\r\n  if (side === 0 && pl > 0) return \"#01CC41\";\r\n  else return 'red';\r\n};\r\n\r\nconst colorForLay = side => {\r\n  return side === 0 ? \"red\" : \"#01CC41\";\r\n};\r\n\r\nexport { sumMatchedBets, calcPercentDifference, calcBackProfit, calcLiability, colorForBack, colorForLay, twoDecimalPlaces };\r\n","const getOppositeSide = side => {\r\n    switch (side) {\r\n      case \"BACK\":\r\n        return \"LAY\";\r\n      case \"LAY\":\r\n        return \"BACK\";\r\n    }\r\n  }\r\n\r\n  export { getOppositeSide };","\r\nimport { twoDecimalPlaces } from \"../PriceCalculator\";\r\nimport { getOppositeSide } from \"../Bets/getOppositeSide\";\r\n\r\n/**\r\n * This function is used to calculate liability of a bet.\r\n * Source: https://help.smarkets.com/hc/en-gb/articles/115003381865-How-to-calculate-the-liability-of-a-lay-bet\r\n * @param {string} side - The side i.e. BACK or LAY\r\n * @param {number} backStake - The stake\r\n * @param {string} layOdds - Current lay odds\r\n * @return {number} This amount will be deducted from your balance should your bet lose\r\n */\r\nconst calcLiability = (side, backStake, layOdds) => {\r\n    // When backing an outcome, the liability is your stake\r\n    if (side === 'BACK') return backStake;\r\n\r\n    // Calculate the lay liability\r\n    return parseFloat(backStake * (layOdds - 1).toFixed(2));\r\n};\r\n\r\nconst calcBackBet = (odds, stake) => {\r\n    return stake * odds - stake;\r\n}\r\n\r\nconst calcLayBet = (odds, stake) => {\r\n    const backersStake = parseFloat((stake / (odds - 1)).toFixed(2));\r\n    return {\r\n        backersStake: backersStake,\r\n        liability: calcLiability(\"LAY\", backersStake, odds).toFixed(2)\r\n    }\r\n}\r\n\r\nconst calcHedgeStake = (size, price, exitPrice, side) => {\r\n    const PL = twoDecimalPlaces((size * price) / exitPrice);\r\n    return side === \"BACK\" ? PL : -PL\r\n};\r\n\r\nconst calcHedge = (size, price, side, ltp, exitPrice) => {\r\n    return {\r\n        hedgePL: calcHedgedPL2(size, price, ltp),\r\n        hedgeStake: calcHedgeStake(size, price, exitPrice, side)\r\n    }\r\n};\r\n\r\n/**\r\n * Another function to calculate the profit/loss from a hedged position using the back price instead of liability.\r\n * @param {string} stake - The amount the bet was placed at.\r\n * @param {number} backPrice - The odds the bet was placed at.\r\n * @param {string} exitPrice - The odds the bet will be exited at.\r\n * @return {number} The Profit or loss.\r\n */\r\nconst calcHedgedPL2 = (stake, backPrice, exitPrice) => {\r\n    return twoDecimalPlaces(((stake * backPrice) / exitPrice - stake));\r\n};\r\n\r\nconst getHedgedBets = (betsToMake, ltp) => {\r\n    return betsToMake.map(bets =>\r\n        bets.reduce(({ stake }, { price, size, side, selectionId }) => ({\r\n            buyPrice: ltp[selectionId],\r\n            stake: twoDecimalPlaces(stake + calcHedgeStake(size, price, ltp[selectionId], side)),\r\n            side: getOppositeSide(side),\r\n            selectionId: selectionId\r\n        }), { prices: [], stake: [] }))\r\n};\r\n\r\nconst getHedgedBetsToMake = (marketId, bets, ltps) => {\r\n\r\n    const selections = Object.values(bets.matched).reduce((acc, cur) =>\r\n        acc.indexOf(cur.selectionId) === -1 ? acc.concat(cur.selectionId) : acc, []);\r\n\r\n    var betsToMake = selections.map(selection => {\r\n        if (isHedgingOnSelectionAvailable(marketId, selection, bets)) {\r\n\r\n            return Object.values(bets.matched)\r\n                .filter(bet => bet.marketId === marketId && bet.selectionId == selection)\r\n        }\r\n    }).filter(selection => selection !== undefined);\r\n\r\n\r\n    return getHedgedBets(betsToMake, ltps);\r\n};\r\n\r\nconst isHedgingOnSelectionAvailable = (marketId, selectionId, bets) => {\r\n    const counter = [0, 0];\r\n\r\n    Object.values(bets.matched)\r\n        .filter(bet => bet.marketId === marketId && bet.selectionId == selectionId)\r\n        .map(bet => {\r\n            switch (bet.side) {\r\n                case \"BACK\":\r\n                    counter[0]++;\r\n                    break;\r\n                case \"LAY\":\r\n                    counter[1]++;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n    return counter[0] > 0 && counter[1] === 0 || counter[0] === 0 && counter[1] > 0;\r\n};\r\n\r\nexport { calcLiability, calcHedge, calcHedgedPL2, calcBackBet, calcLayBet, isHedgingOnSelectionAvailable, getHedgedBetsToMake, getHedgedBets };","import { calcLayBet } from '../utils/TradingStategy/HedingCalculator'\r\n\r\nexport const updateOrders = order => {\r\n  return {\r\n    type: \"UPDATE_BET\",\r\n    payload: order\r\n  };\r\n};\r\n\r\nexport const placeOrder = order => {\r\n\r\n  if (order.unmatchedBets === undefined || order.matchedBets === undefined) {\r\n    return\r\n  }\r\n\r\n  order.size = order.size === \"LAY\" ? calcLayBet(order.price, order.size).liability : parseFloat(order.size)\r\n  order.price = parseFloat(order.price)\r\n\r\n  return dispatch => {\r\n    return fetch('/api/place-order', {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(order)\r\n    })\r\n      .then(res => res.json())\r\n      .then(async json => {\r\n\r\n        if (json.errorCode == \"BET_ACTION_ERROR\") return;\r\n        const betId = json.instructionReports[0].betId;\r\n        \r\n\r\n        const adjustedOrder = Object.assign({}, order);\r\n        adjustedOrder.rfs = order.customerStrategyRef;\r\n        adjustedOrder.betId = betId;\r\n        adjustedOrder.strategy = \"None\";\r\n        if (betId === undefined) {\r\n          return;\r\n        }\r\n        \r\n        const newUnmatchedBets = Object.assign({}, order.unmatchedBets)\r\n        newUnmatchedBets[betId] = adjustedOrder;\r\n        \r\n        const newBets = {\r\n          unmatched: newUnmatchedBets,\r\n          matched: order.matchedBets == undefined ? {} : order.matchedBets\r\n        }\r\n        await fetch('/api/save-order', {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify(adjustedOrder)\r\n        })\r\n\r\n        if (order.orderCompleteCallBack !== undefined)\r\n          await order.orderCompleteCallBack(betId, newUnmatchedBets);\r\n\r\n        dispatch(updateOrders(newBets));\r\n        \r\n      });\r\n  };\r\n\r\n};\r\n\r\nexport const cancelOrder = order => {\r\n\r\n  if (order.unmatchedBets === undefined || order.matchedBets === undefined) {\r\n    return\r\n  }\r\n\r\n  return dispatch => {\r\n    return fetch('/api/cancel-order', {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(order)\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        const newUnmatchedBets = {};\r\n        for (const key in order.unmatchedBets) {\r\n          if (key !== order.betId) {\r\n            newUnmatchedBets[key] = order.unmatchedBets[key] \r\n          }\r\n        }\r\n\r\n        const newBets = {\r\n          unmatched: newUnmatchedBets,\r\n          matched: order.matchedBets == undefined ? {} : order.matchedBets\r\n        }\r\n\r\n        dispatch(updateOrders(newBets));\r\n      });\r\n  };\r\n};\r\n\r\n","export const setLaySelected = isSelected => {\r\n    return {\r\n        type: \"SET_LAY_SELECTED\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const setStake = stake => {\r\n    return {\r\n        type: \"SET_LAY_STAKE\",\r\n        payload: stake\r\n    }\r\n};\r\n\r\nexport const setPrice = price => {\r\n    return {\r\n        type: \"SET_LAY_PRICE\",\r\n        payload: price\r\n    }\r\n};\r\n\r\nexport const setHours = hours => {\r\n    return {\r\n        type: \"SET_LAY_HOURS\",\r\n        payload: hours\r\n    }\r\n};\r\n\r\nexport const setMinutes = minutes => {\r\n    return {\r\n        type: \"SET_LAY_MINUTES\",\r\n        payload: minutes\r\n    }\r\n};\r\n\r\nexport const setSeconds = seconds => {\r\n    return {\r\n        type: \"SET_LAY_SECONDS\",\r\n        payload: seconds\r\n    }\r\n};\r\n\r\nexport const toggleExecutionTime = executionTime => {\r\n    return {\r\n        type: \"TOGGLE_LAY_EXECUTION_BEFORE_OR_AFTER\",\r\n        payload: executionTime\r\n    }\r\n};\r\n\r\nexport const setDisplayText = text => {\r\n    return {\r\n        type: \"SET_LAY_TEXT\",\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const setSelections = selections => {\r\n    return {\r\n        type: \"SET_LAY_SELECTIONS\",\r\n        payload: selections\r\n    }\r\n}\r\n\r\nexport const updateLayList = list => {\r\n    return {\r\n        type: \"UPDATE_LAY_LIST\",\r\n        payload: list\r\n    }\r\n}","export const setBackSelected = isSelected => {\r\n    return {\r\n        type: \"SET_BACK_SELECTED\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const setStake = stake => {\r\n    return {\r\n        type: \"SET_BACK_STAKE\",\r\n        payload: stake\r\n    }\r\n};\r\n\r\nexport const setPrice = price => {\r\n    return {\r\n        type: \"SET_BACK_PRICE\",\r\n        payload: price\r\n    }\r\n};\r\n\r\nexport const setHours = hours => {\r\n    return {\r\n        type: \"SET_BACK_HOURS\",\r\n        payload: hours\r\n    }\r\n};\r\n\r\nexport const setMinutes = minutes => {\r\n    return {\r\n        type: \"SET_BACK_MINUTES\",\r\n        payload: minutes\r\n    }\r\n};\r\n\r\nexport const setSeconds = seconds => {\r\n    return {\r\n        type: \"SET_BACK_SECONDS\",\r\n        payload: seconds\r\n    }\r\n};\r\n\r\nexport const toggleExecutionTime = executionTime => {\r\n    return {\r\n        type: \"TOGGLE_BACK_EXECUTION_BEFORE_OR_AFTER\",\r\n        payload: executionTime\r\n    }\r\n};\r\n\r\nexport const setDisplayText = text => {\r\n    return {\r\n        type: \"SET_BACK_TEXT\",\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const setSelections = selections => {\r\n    return {\r\n        type: \"SET_BACK_SELECTIONS\",\r\n        payload: selections\r\n    }\r\n}\r\n\r\nexport const updateBackList = list => {\r\n    return {\r\n        type: \"UPDATE_BACK_LIST\",\r\n        payload: list\r\n    }\r\n};","export const setFillOrKillSelected = isSelected => {\r\n    return {\r\n        type: \"SET_FILL_OR_KILL_SELECTED\",\r\n        payload: isSelected\r\n    }\r\n};\r\n\r\nexport const setFillOrKill = seconds => {\r\n    return {\r\n        type: \"SET_FILL_OR_KILL_TIME\",\r\n        payload: seconds\r\n    }\r\n};\r\n\r\nexport const setDisplayText = text => {\r\n    return {\r\n        type: \"SET_FILL_OR_KILL_TEXT\",\r\n        payload: text\r\n    }\r\n};\r\n\r\nexport const updateFillOrKillList = list => {\r\n    return {\r\n        type: \"UPDATE_FILL_OR_KILL_LIST\",\r\n        payload: list\r\n    }\r\n};","const checkTimeListsBefore = async (list, marketStartTime, onPlaceOrder, marketId, side, matchedBets, unmatchedBets) => {\r\n\r\n    const newList = Object.assign({}, list)\r\n    let ordersToRemove = []\r\n\r\n    Object.keys(list).map(selectionId => {\r\n      const newSelectionArray = newList[selectionId];\r\n      let indexesToRemove = []\r\n       // this is for the remove orders\r\n      list[selectionId].map((order, index) => {\r\n        const remainingTime = (new Date(marketStartTime).valueOf() / 1000) - (new Date().valueOf() / 1000) \r\n  \r\n        const isReady = order.executionTime === \"Before\" && remainingTime - order.timeOffset <= 0;\r\n  \r\n        if (isReady) {\r\n          onPlaceOrder({\r\n            marketId: marketId,\r\n            selectionId: parseInt(selectionId),\r\n            side: side,\r\n            size: order.size,\r\n            price: order.price,\r\n            matchedBets: matchedBets,\r\n            unmatchedBets: unmatchedBets\r\n          })\r\n\r\n          \r\n          indexesToRemove = indexesToRemove.concat(index)\r\n          ordersToRemove = ordersToRemove.concat(order)\r\n        }\r\n      })\r\n  \r\n      newList[selectionId] = newSelectionArray.filter((item, index) => indexesToRemove.indexOf(index) === -1)\r\n      if (newList[selectionId].length === 0) {\r\n        delete newList[selectionId]\r\n      }\r\n  \r\n    })\r\n\r\n    if (ordersToRemove.length > 0) {\r\n      await fetch('/api/remove-orders', {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(ordersToRemove)\r\n      })\r\n    }\r\n  \r\n    return newList\r\n}\r\n\r\nconst checkTimeListAfter = async (list, selectionId, marketStartTime, onPlaceOrder, marketId, side, matchedBets, unmatchedBets) => {\r\n\r\n  const newSelectionArray = list;\r\n  let ordersToRemove = []\r\n  let indexesToRemove = []\r\n  \r\n  newSelectionArray.map((order, index) => {\r\n\r\n    // it can be abs because we know the market already started\r\n    const timePassed = Math.abs((new Date(marketStartTime).valueOf() / 1000) - (new Date().valueOf() / 1000))\r\n\r\n    const isReady = order.executionTime === \"After\" && timePassed >= order.timeOffset;\r\n\r\n    if (isReady) {\r\n      onPlaceOrder({\r\n        marketId: marketId,\r\n        selectionId: parseInt(selectionId),\r\n        side: side,\r\n        size: order.size,\r\n        price: order.price,\r\n        matchedBets: matchedBets,\r\n        unmatchedBets: unmatchedBets\r\n      })\r\n      \r\n      indexesToRemove = indexesToRemove.concat(index)\r\n      ordersToRemove = ordersToRemove.concat(order)\r\n    }\r\n  })\r\n  \r\n  if (ordersToRemove.length > 0) {\r\n    await fetch('/api/remove-orders', {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(ordersToRemove)\r\n    })\r\n  }\r\n\r\n  return newSelectionArray.filter((item, index) => indexesToRemove.indexOf(index) === -1)\r\n\r\n}\r\n\r\nexport { checkTimeListsBefore, checkTimeListAfter };","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { placeOrder, cancelOrder, updateOrders } from \"../../actions/order\";\r\nimport { updateLayList } from \"../../actions/lay\";\r\nimport { updateBackList } from \"../../actions/back\";\r\nimport { updateFillOrKillList } from \"../../actions/fillOrKill\";\r\nimport { updateTickOffsetList } from \"../../actions/tickOffset\";\r\nimport { checkTimeListsBefore } from '../../utils/TradingStategy/BackLay'\r\n\r\n\r\nconst Countdown = props => {\r\n  const ONE_SECOND = 1000;\r\n  const [timeRemaining, setTimeRemaining] = useState(\"--\");\r\n\r\n  const calculateTime = () => {\r\n    if (!props.market) {\r\n      return \"--\";\r\n    }\r\n    if (new Date() < new Date(props.market.marketStartTime)) {\r\n      return new Date(props.market.marketStartTime) - new Date();\r\n    }\r\n    else if (new Date() > new Date(props.market.marketStartTime)) {;\r\n      return Math.abs(new Date(props.market.marketStartTime) - new Date());\r\n    } else {\r\n      return \"--\";\r\n    }\r\n  }\r\n\r\n  useInterval(async () => {\r\n    setTimeRemaining(calculateTime());\r\n\r\n    const newBackList = await checkTimeListsBefore(props.backList, props.market.marketStartTime, props.onPlaceOrder, props.market.marketId, \"BACK\", props.bets.matched, props.bets.unmatched)\r\n    props.onUpdateBackList(newBackList)\r\n\r\n    const newLayList = await checkTimeListsBefore(props.layList, props.market.marketStartTime, props.onPlaceOrder, props.market.marketId, \"LAY\", props.bets.matched, props.bets.unmatched)\r\n    props.onUpdateLayList(newLayList)\r\n\r\n\r\n    const newFillOrKillList = {};\r\n    const adjustedTickOffsetList = Object.assign({}, props.tickOffsetList);\r\n    const adjustedUnmatchedBets = Object.assign({}, props.bets.unmatched);\r\n    let ordersToRemove = [];\r\n\r\n    Object.keys(props.fillOrKillList).map((betId, index) => {\r\n      const order = props.fillOrKillList[betId];\r\n      if ((Date.now() / 1000) - (order.startTime / 1000) >= order.seconds) {\r\n        props.onCancelOrder({\r\n          marketId: props.market.marketId,\r\n          betId: betId,\r\n          sizeReduction: null,\r\n          matchedBets: props.bets.matched,\r\n          unmatchedBets: props.bets.unmatched\r\n        })\r\n\r\n        ordersToRemove = ordersToRemove.concat(order);\r\n\r\n        if (adjustedUnmatchedBets[betId] !== undefined) {\r\n          ordersToRemove = ordersToRemove.concat(adjustedUnmatchedBets[betId])\r\n          delete adjustedUnmatchedBets[betId];\r\n        }\r\n\r\n        Object.values(props.tickOffsetList).map(tickOffsetOrder => {\r\n          if (tickOffsetOrder.rfs === order.rfs) {\r\n            ordersToRemove = ordersToRemove.concat(adjustedTickOffsetList[tickOffsetOrder.rfs]);\r\n            delete adjustedTickOffsetList[tickOffsetOrder.rfs];\r\n          }\r\n        })\r\n\r\n\r\n\r\n      } else {\r\n        newFillOrKillList[betId] = props.fillOrKillList[betId]\r\n      }\r\n    })\r\n\r\n    if (ordersToRemove.length > 0) {\r\n      await fetch('/api/remove-orders', {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(ordersToRemove)\r\n      })\r\n    }\r\n\r\n    if (Object.values(adjustedUnmatchedBets).length !== Object.values(props.bets.unmatched).length) {\r\n      props.onChangeOrders({\r\n        unmatched: adjustedUnmatchedBets,\r\n        matched: props.bets.matched\r\n      })\r\n    }\r\n    props.onUpdateTickOffsetList(adjustedTickOffsetList)\r\n    props.onUpdateFillOrKillList(newFillOrKillList);\r\n\r\n  }, ONE_SECOND);\r\n\r\n  const padZeroes = num => {\r\n    var str = num.toString();\r\n\r\n    while (str.length < 2) {\r\n      str = \"0\".concat(str);\r\n    }\r\n    return str;\r\n  };\r\n\r\n  const msToHMS = ms => {\r\n    if (typeof ms !== \"number\") return \"--\";\r\n\r\n    // 1- Convert to seconds:\r\n    var seconds = ms / 1000;\r\n    // 2- Extract hours:\r\n    var hours = Math.floor(parseInt(seconds / 3600)); // 3,600 seconds in 1 hour\r\n    seconds = seconds % 3600; // seconds remaining after extracting hours\r\n    // 3- Extract minutes:\r\n    var minutes = Math.floor(parseInt(seconds / 60)); // 60 seconds in 1 minute\r\n    // 4- Keep only seconds not extracted to minutes:\r\n    seconds = Math.floor(seconds % 60);\r\n\r\n    return Math.abs(hours) <= 0 && minutes <= 0 && seconds <= 0\r\n      ? \"00:00:00\"\r\n      : `${hours}:${padZeroes(minutes)}:${padZeroes(seconds)}`;\r\n  };\r\n  return (\r\n    <div>\r\n      {props.marketOpen\r\n        ? props.marketStatus === \"OPEN\"\r\n          ? msToHMS(timeRemaining)\r\n          : props.marketStatus === \"SUSPENDED\" ||\r\n            props.marketStatus === \"CLOSED\"\r\n            ? props.marketStatus\r\n            : \"00:00:00\"\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    marketOpen: state.market.marketOpen,\r\n    marketStatus: state.market.status,\r\n    inPlay: state.market.inPlay,\r\n    market: state.market.currentMarket,\r\n    layList: state.lay.list,\r\n    backList: state.back.list,\r\n    fillOrKillList: state.fillOrKill.list,\r\n    tickOffsetList: state.tickOffset.list,\r\n    bets: state.order.bets\r\n  };\r\n};\r\n\r\nconst matchDispatchToProps = dispatch => {\r\n  return {\r\n    onPlaceOrder: order => dispatch(placeOrder(order)),\r\n    onCancelOrder: order => dispatch(cancelOrder(order)),\r\n    onUpdateLayList: list => dispatch(updateLayList(list)),\r\n    onUpdateBackList: list => dispatch(updateBackList(list)),\r\n    onUpdateFillOrKillList: list => dispatch(updateFillOrKillList(list)),\r\n    onUpdateTickOffsetList: list => dispatch(updateTickOffsetList(list)),\r\n    onChangeOrders: orders => dispatch(updateOrders(orders))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Countdown);\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useStyles from \"../Styles/Styles\";\r\nimport CountDown from \"./Countdown\";\r\n\r\nconst Event = props => {\r\n  const classes = useStyles();\r\n\r\n  const renderTitle = () => {\r\n    if (props.marketOpen) return new Date(\r\n      props.market.marketStartTime\r\n    ).toLocaleTimeString() + \" \" + props.market.marketName + (props.market.event.venue ? ` ${props.market.event.venue}` : '');\r\n    return \"No Event Selected\";\r\n  }\r\n\r\n  return (\r\n    <div id=\"sidebar-event\">\r\n      <div id=\"sidebar-event-section-1\">\r\n        <div id=\"sidebar-event-section-2\">\r\n          <span>\r\n            <CountDown />\r\n          </span>\r\n        </div>\r\n        <Typography>\r\n          Price: <b>5</b>\r\n        </Typography>\r\n        <Typography>\r\n          API: <b>33.87</b>\r\n        </Typography>\r\n      </div>\r\n      <AppBar className={classes.AppBar} position=\"static\">\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {renderTitle()}\r\n        </Typography>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentEvent: state.sports.currentSport.currentEvent,\r\n    market: state.market.currentMarket,\r\n    marketOpen: state.market.marketOpen\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Event);\r\n","import React from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default ({ list, itemSelector, clickHandler, myMarkets, idSelector, currentSportId, updateMyMarkets }) => {\r\n    return (   \r\n        list.map((item, index) => {\r\n            const marketItemSaved = myMarkets.find(market => market.id == item[idSelector] && market.sportId == currentSportId) !== undefined\r\n                return (\r\n                    <tr style={{display: 'flex', flexDirection: 'row', height: \"3em\", paddingBottom: \"2px\", marginTop: '0.5em', marginLeft: '2rem'}}>\r\n                        <ListItemIcon style={{minWidth: 'auto', cursor: 'pointer'}} onClick={() => updateMyMarkets(marketItemSaved, item[idSelector], item[itemSelector], currentSportId)}>\r\n                            <img\r\n                                src={window.location.origin + (marketItemSaved ? \"/icons/rounded-remove-button.png\" : \"/icons/add-button-inside-black-circle.png\")}\r\n                                alt={\"Add\"}\r\n                                style = {{height: '16px', width: 'auto', alignSelf: 'center', \r\n                                          filter: marketItemSaved ? 'invert(22%) sepia(92%) saturate(6689%) hue-rotate(358deg) brightness(91%) contrast(121%)' : 'none'}}\r\n                            />\r\n                        </ListItemIcon>\r\n                        <ListItem button style={{ }} onClick={(e) => clickHandler(item)}>\r\n                            \r\n                            <p style={{minWidth: `13em`}}>{item[itemSelector]}</p>\r\n\r\n                        </ListItem>\r\n                        {/* If last one don't make divider */}\r\n                        {index === list.length - 1 ? null : <Divider style={{ marginLeft: '4rem', width: \"100%\" }} />}\r\n                    </tr>\r\n                )\r\n            }\r\n        )\r\n    )\r\n};","import React from \"react\";\r\nimport SportsFilterList from \"./SportsFilterList\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nexport default ({ sports, currentSportId, countries, handleClick, myMarkets, updateMyMarkets }) => {\r\n\r\n    const getNewName = item => {\r\n        const marketStartTime = new Date(item.marketStartTime)\r\n        const currentDay = new Date(Date.now()).getDay()\r\n        const marketStartDay = marketStartTime.getDay()\r\n        const marketStartOnDiffDay = marketStartDay > currentDay || marketStartDay < currentDay\r\n\r\n        const dateSettings = { timeZone: 'UTC', hour12: false };\r\n        if (marketStartOnDiffDay) {\r\n            dateSettings['weekday'] = 'short';\r\n        }\r\n        const marketStartDate = marketStartTime.toLocaleTimeString('en-us', dateSettings)\r\n        return Object.assign(item, {marketName: marketStartDate + ' ' + item.event.venue + ' ' + item.marketName})\r\n    }\r\n\r\n    const sortByTime = (a, b) => {\r\n        return Date.parse(a.marketStartTime) - Date.parse(b.marketStartTime)\r\n    }\r\n\r\n    const selectSportClick = (sport) =>{\r\n\r\n        // check if its a todays card\r\n        if (/TC-/gm.test(sport.eventType.id)) {\r\n            handleClick(\r\n                sport.eventType,\r\n                \"currentEvent\",\r\n                \"eventMarkets\",\r\n                \"list-todays-card\",\r\n                sport.eventType.id.replace(/TC-/, ''),\r\n                '',\r\n                '',\r\n                '',\r\n                data => data.map(item => getNewName(item)),\r\n                data => data.sort(sortByTime)\r\n            )\r\n        }  \r\n        else {\r\n            handleClick(\r\n                sport.eventType.id,\r\n                \"currentSportId\",\r\n                \"sportCountries\",\r\n                \"list-countries\",\r\n                sport.eventType.id\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        // Used for selecting sport and country\r\n        sports.sports.map(sport => {\r\n            // if we have a sport selected\r\n            if (\r\n                currentSportId !== undefined &&\r\n                sport.eventType.id !== currentSportId\r\n            ) {\r\n                return null;\r\n            }\r\n            const marketItemSaved = myMarkets.find(item => item.type === \"Sport\" && item.id == sport.eventType.id) !== undefined\r\n            const updateMyMarketSports = () => updateMyMarkets(marketItemSaved ? 'sub' : 'add', sport.eventType.id, sport.eventType.name, sport.eventType.id, \"Sport\")\r\n            const updateMyMarketCountry = (marketItemSaved, id, name, sportId) => updateMyMarkets(marketItemSaved ? 'sub' : 'add', id, name, sportId, \"Country\")\r\n            return (\r\n                <React.Fragment>\r\n                    <tr style={Object.assign({ paddingBottom: \"2px\", marginTop: '0.5em'}, \r\n                                 currentSportId === undefined ? {display: 'flex', flexDirection: 'row', height: \"3em\", marginLeft: '1rem', width: '100%'} : \r\n                                                                { display: 'flex', flexDirection: 'column'})}>\r\n                        {currentSportId === undefined ?\r\n                            <ListItemIcon style={{minWidth: '0px'}} onClick={updateMyMarketSports}>\r\n                                <img\r\n                                    src={window.location.origin + (marketItemSaved ? \"/icons/rounded-remove-button.png\" : \"/icons/add-button-inside-black-circle.png\") }\r\n                                    alt={\"Add\"}\r\n                                    style = {{height: '16px', width: 'auto', alignSelf: 'center', cursor: 'pointer',\r\n                                              filter: marketItemSaved ? 'invert(22%) sepia(92%) saturate(6689%) hue-rotate(358deg) brightness(91%) contrast(121%)' : 'none'}}\r\n                                />\r\n                            </ListItemIcon>\r\n                            : null\r\n                        }\r\n                        <ListItem\r\n                            button\r\n                            onClick={e => selectSportClick(sport)}\r\n                        >\r\n                        \r\n                        <ListItemText style={{marginLeft: 0}}>{sport.eventType.name}</ListItemText>\r\n                        </ListItem>\r\n                        \r\n                            {currentSportId !== undefined &&\r\n                                sport.eventType.id === currentSportId ? (\r\n                                   \r\n                                        <SportsFilterList\r\n                                            list={countries.sort((a, b) => a.countryCode.localeCompare(b.countryCode))}\r\n                                            itemSelector={\"countryCode\"}\r\n                                            clickHandler={async data => {\r\n                                                const competitions = await handleClick(\r\n                                                    data.countryCode,\r\n                                                    \"currentCountry\",\r\n                                                    \"countryCompetitions\",\r\n                                                    \"list-competitions\",\r\n                                                    currentSportId,\r\n                                                    data.countryCode,\r\n                                                    \"\",\r\n                                                    \"\",\r\n                                                    data => data.map(item => item.competition)\r\n                                                );\r\n\r\n                                                if (competitions.length === 0) {\r\n                                                    await handleClick(\r\n                                                        data.countryCode,\r\n                                                        \"currentCountry\",\r\n                                                        \"competitionEvents\",\r\n                                                        \"list-events\",\r\n                                                        currentSportId,\r\n                                                        data.countryCode,\r\n                                                        \"\",\r\n                                                        \"\",\r\n                                                        data => data.map(item => item.event)\r\n                                                    );\r\n                                                }\r\n                                            }}\r\n                                            currentSportId={currentSportId}\r\n                                            myMarkets={myMarkets}\r\n                                            idSelector={'countryCode'}\r\n                                            updateMyMarkets={updateMyMarketCountry}\r\n                                        />\r\n                                    \r\n                                ) : null}\r\n                        </tr>\r\n                    \r\n                    <Divider style = {{marginTop: '0.5em'}}/>\r\n                </React.Fragment>\r\n            );\r\n        })\r\n    );\r\n};","import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SportsFilterList from \"./SportsFilterList\";\r\n\r\n/*\r\n    currentItem - Item at the shown\r\n    newArray - The List of Items we can pick from\r\n    currentItemName - the name of the currentItem\r\n    newArrayName - The name of the List of items\r\n    listSelector - what we use to select from objects : obj[listSelector]\r\n    reverseClickHandler - function for what happens on the click of the currentItem\r\n    clickHandler - function for what happens on item in list click,\r\n    currentItemFull - full item for comparison in reverse click handler\r\n    idSelector - what we use to try and get the Id from the list\r\n*/\r\n\r\nexport default ({\r\n  currentItem,\r\n  newArray,\r\n  currentItemName,\r\n  newArrayName,\r\n  listSelector,\r\n  reverseClickHandler,\r\n  clickHandler,\r\n  currentItemFull,\r\n  myMarkets,\r\n  idSelector,\r\n  currentSportId,\r\n  updateMyMarkets\r\n}) => {\r\n  if (currentItemFull === undefined) {\r\n    currentItemFull = currentItem;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n        <ListItem\r\n          button\r\n          onClick={e =>\r\n            reverseClickHandler(currentItemFull, currentItemName, newArrayName)\r\n          }\r\n        >\r\n          <ListItemText>{currentItem}</ListItemText>\r\n        </ListItem>\r\n      </React.Fragment>\r\n        <SportsFilterList\r\n          list={newArray}\r\n          itemSelector={listSelector}\r\n          clickHandler={data => clickHandler(data)}\r\n          myMarkets={myMarkets}\r\n          idSelector={idSelector}\r\n          currentSportId={currentSportId}\r\n          updateMyMarkets={updateMyMarkets}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport SportsClickList from \"./SportsClickList\";\r\n\r\nexport default ({ currentCountry, competitions, handleClick, currentSportId, myMarkets, updateMyMarkets}) => {\r\n  const updateMyMarketCompetitions = (marketItemSaved, id, name, sportId) => updateMyMarkets(marketItemSaved ? 'sub' : 'add', id, name, sportId, \"Competition\")\r\n  return (\r\n    <SportsClickList\r\n      currentItem={currentCountry}\r\n      newArray={competitions}\r\n      currentItemName={\"currentCountry\"}\r\n      newArrayName={\"countryCompetitions\"}\r\n      listSelector={\"name\"}\r\n      reverseClickHandler={handleClick}\r\n      myMarkets={myMarkets}\r\n      idSelector={\"id\"}\r\n      currentSportId={currentSportId}\r\n      clickHandler={data =>\r\n        handleClick(\r\n          data,\r\n          \"currentCompetition\",\r\n          \"competitionEvents\",\r\n          \"list-competition-events\",\r\n          currentSportId,\r\n          currentCountry,\r\n          data.id,\r\n          \"\",\r\n          data => data.map(item => item.event)\r\n        )\r\n      }\r\n      updateMyMarkets = {updateMyMarketCompetitions}\r\n    />\r\n  )\r\n};","import React from \"react\";\r\nimport SportsClickList from \"./SportsClickList\";\r\n\r\nexport default ({ currentCompetition, currentCountry, competitionEvents, handleClick, myMarkets, currentSportId, updateMyMarkets }) => {\r\n    const updateMyMarketEvents = (marketItemSaved, id, name, sportId) => updateMyMarkets(marketItemSaved ? 'sub' : 'add', id, name, sportId, \"Event\", currentCountry)\r\n    return (\r\n        <SportsClickList\r\n            currentItem={\r\n                currentCompetition !== undefined\r\n                    ? currentCompetition.name\r\n                    : currentCountry\r\n            }\r\n            newArray={competitionEvents}\r\n            currentItemName={\r\n                currentCompetition !== undefined\r\n                    ? \"currentCompetition\"\r\n                    : \"currentCountry\"\r\n            }\r\n            newArrayName={\"competitionEvents\"}\r\n            listSelector={\"name\"}\r\n            reverseClickHandler={handleClick}\r\n            clickHandler={data =>\r\n                handleClick(\r\n                    data,\r\n                    \"currentEvent\",\r\n                    \"eventMarkets\",\r\n                    \"list-markets\",\r\n                    \"\",\r\n                    \"\",\r\n                    \"\",\r\n                    data.id,\r\n                    data => data.result\r\n                )\r\n            }\r\n            myMarkets={myMarkets}\r\n            idSelector={\"id\"}\r\n            currentSportId={currentSportId}\r\n            currentItemFull={\r\n                currentCompetition !== undefined\r\n                    ? currentCompetition\r\n                    : currentCountry\r\n            }\r\n            updateMyMarkets = {updateMyMarketEvents}\r\n        />\r\n    )\r\n};","import React from \"react\";\r\nimport SportsClickList from \"./SportsClickList\";\r\n\r\nexport default ({name, markets, handleClick, event, myMarkets, currentSportId, updateMyMarkets}) => {\r\n  const updateMyMarketMarkets = (marketItemSaved, id, name, sportId) => updateMyMarkets(marketItemSaved ? 'sub' : 'add', id, name, sportId, \"Market\")\r\n  return (\r\n    <SportsClickList\r\n      currentItem={name}\r\n      newArray={markets}\r\n      currentItemName={\"currentEvent\"}\r\n      newArrayName={\"eventMarkets\"}\r\n      listSelector={\"marketName\"}\r\n      reverseClickHandler={handleClick}\r\n      clickHandler={market => window.open(`/dashboard?marketId=${market.marketId}`)}\r\n      currentItemFull={event}\r\n      myMarkets={myMarkets}\r\n      idSelector={\"marketId\"}\r\n      currentSportId={currentSportId}\r\n      updateMyMarkets = {updateMyMarketMarkets}\r\n    />\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions/market\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport SelectSport from \"./SelectSport\";\r\nimport SelectCompetition from \"./SelectCompetition\";\r\nimport SelectEvent from \"./SelectEvent\";\r\nimport SelectMarket from \"./SelectMarket\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst MyMarkets = props => {\r\n\r\n\tconst [selectedMarket, setSelectedMarket] = useState({})\r\n\r\n\tconst [currentSport, setCurrentSport] = useState({});\r\n\tconst {\r\n\t\tcurrentSportId,\r\n\t\tsportCountries,\r\n\t\tcurrentCountry,\r\n\t\tcountryCompetitions,\r\n\t\tcurrentCompetition,\r\n\t\tcompetitionEvents,\r\n\t\tcurrentEvent,\r\n\t\teventMarkets\r\n\t} = currentSport;\r\n\r\n\tconst handleMarketClick = async (\r\n\t\tmarketSelection,\r\n\t\tcurrentMarket,\r\n\t\tmarketList,\r\n\t\tapi,\r\n\t\tsportId = \"\",\r\n\t\tcountry = \"\",\r\n\t\tcompetition = \"\",\r\n\t\tevent = \"\",\r\n\t\tmapMarkets = data => data,\r\n\t\tsortMarkets = data => data\r\n\t  ) => {\r\n\t\t/*\r\n\t\t\tmarketSelection - button click\r\n\t\t\tcurrentMarket - key for the market that is currently selected\r\n\t\t\tmarketList - key for array that is associated with the market (we can also use this to reset an array associated with the marketSelection)\r\n\t\t\tapi - where we should fetch\r\n\t\t\tsports, country, competition, event - api information,\r\n\t\t\tmapMarkets - map the data we get from the api call\r\n\t\t*/\r\n\t\r\n\t\t// if the button we pressed matches the selectedMarket, we want to go back to myMarkets\r\n\t\tif (marketSelection === selectedMarket.id || marketSelection.id === selectedMarket.id) {\r\n\t\t\tsetSelectedMarket({});\r\n\t\t\tsetCurrentSport({});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// set back to undefined if they don't want to see the menu anymore, click on the same button another time\r\n\t\tif (currentSport[currentMarket] === marketSelection) {\r\n\t\t  const newSport = Object.assign({}, currentSport);\r\n\t\r\n\t\t  newSport[currentMarket] = undefined;\r\n\t\t  newSport[marketList] = undefined;\r\n\t\r\n\t\t  setCurrentSport(newSport);\r\n\t\t  return;\r\n\t\t}\r\n\t\r\n\t\tconst response = await fetch(\r\n\t\t  `/api/${api}?sportId=${sportId}&&winMarketsOnly=${props.winMarketsOnly}&&country=${country}&&competitionId=${competition}&&eventId=${event}`\r\n\t\t);\r\n\t\tconst data = await response.json();\r\n\t\t\r\n\t\tconst newSport = Object.assign({}, currentSport);\r\n\r\n\t\tnewSport[currentMarket] = marketSelection;\r\n\t\tnewSport[marketList] = sortMarkets(mapMarkets(data));\r\n\t\tif (newSport.currentSportId === undefined) newSport.currentSportId = sportId;\r\n\t\tif (newSport.currentCountry === undefined) newSport.currentCountry = country;\r\n\r\n\t\tsetCurrentSport(newSport);\r\n\t\r\n\t\treturn data;\r\n\t};\r\n\r\n\tconst getNewName = item => {\r\n        const marketStartTime = new Date(item.marketStartTime)\r\n        const currentDay = new Date(Date.now()).getDay()\r\n        const marketStartDay = marketStartTime.getDay()\r\n        const marketStartOnDiffDay = marketStartDay > currentDay || marketStartDay < currentDay\r\n\r\n        const dateSettings = { timeZone: 'UTC', hour12: false };\r\n        if (marketStartOnDiffDay) {\r\n            dateSettings['weekday'] = 'short';\r\n        }\r\n        const marketStartDate = marketStartTime.toLocaleTimeString('en-us', dateSettings)\r\n        return Object.assign(item, {marketName: marketStartDate + ' ' + item.event.venue + ' ' + item.marketName})\r\n    }\r\n\r\n    const sortByTime = (a, b) => {\r\n        return Date.parse(a.marketStartTime) - Date.parse(b.marketStartTime)\r\n    }\r\n\r\n\tconst handleSelectMyMarket = (id, name, sportId, type, country) => {\r\n\t\t/*\r\n\t\t\tid - id for the selection\r\n\t\t\tname - name displayed on myMarkets\r\n\t\t\tsportId - the sport that the selection is associated with\r\n\t\t\ttype - the type of the selection (sport, country, competition, event, market)\r\n\t\t*/\r\n\t\r\n\t\tsetSelectedMarket({id, name, sportId, type, country})\r\n\t\t\r\n\t\tswitch (type) {\r\n\t\t\tcase \"Sport\":\r\n\t\t\t\t// its a today's card\r\n\t\t\t\tif (/TC-/gm.test(id)) {\r\n\t\t\t\t\thandleMarketClick({id, name}, 'currentEvent', 'eventMarkets', 'list-todays-card', id.replace(/TC-/, ''), '', '', '', data => data.map(item => getNewName(item)), data => data.sort(sortByTime))\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\thandleMarketClick({id}, 'currentSportId', 'sportCountries', 'list-countries', sportId)\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Country\":\r\n\t\t\t\thandleMarketClick({id}, 'currentCountry', 'countryCompetitions', 'list-competitions', sportId, id, '', '', data => data.map(item => item.competition))\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Competition\":\r\n\t\t\t\thandleMarketClick({id, name}, 'currentCompetition', 'competitionEvents', 'list-competition-events', sportId, country, id, '', data => data.map(item => item.event))\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Event\":\r\n\t\t\t\thandleMarketClick({id, name}, 'currentEvent', 'eventMarkets', 'list-markets', '', '', '', id, data => data.result)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/api/get-my-markets')\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(markets => props.onReceiveMyMarkets(markets));\r\n\t}, []);\r\n\r\n\tconst updateMyMarkets = (action, id, name, sportId, type, country) => {\r\n\t\t/*\r\n\t\t\tmyMarkets - myMarkets that will be edited\r\n\t\t\taction - add to my markets, or remove\r\n\t\t\tid - id for the selection\r\n\t\t\tname - name displayed on myMarkets\r\n\t\t\tsportId - the sport that the selection is associated with\r\n\t\t\ttype - the type of the selection (sport, country, competition, event, market)\r\n\t\t\tcurrentCountry - the currentCountry, only applies to (country, competition, event) for lookup purposes\r\n\t\t*/\r\n\t\tconst marketSelection = {id, name, sportId, type, country};\r\n\r\n\t\tfetch(`/api/${action == \"add\" ? 'save-market' : 'remove-market'}`, {\r\n\t\t  headers: {\r\n\t\t\tAccept: \"application/json\",\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t  },\r\n\t\t  method: \"POST\",\r\n\t\t  body: JSON.stringify(marketSelection)\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(res => {\r\n\t\t  props.onReceiveMyMarkets(res)\r\n\t\t})\r\n\t\t.catch(res => {})\r\n\t}\r\n\r\n\tconst renderMarkets = () => {\r\n\t\treturn props.myMarkets.map((market, index) => {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<tr style={{display: 'flex', flexDirection: 'row', height: \"3em\", paddingBottom: \"2px\", marginTop: '0.5em', marginLeft: '1rem'}}>\r\n\t\t\t\t\t\t<ListItemIcon \r\n\t\t\t\t\t\t\tstyle={{minWidth: 'auto', cursor: 'pointer'}}\r\n\t\t\t\t\t\t\tonClick={() => updateMyMarkets('sub', market.id, market.name, market.sportId, market.type, market.country)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={window.location.origin + \"/icons/rounded-remove-button.png\"}\r\n\t\t\t\t\t\t\t\talt={\"Remove\"}\r\n\t\t\t\t\t\t\t\tstyle = {{height: '16px', width: 'auto', alignSelf: 'center', \r\n\t\t\t\t\t\t\t\t\t\tfilter: 'invert(22%) sepia(92%) saturate(6689%) hue-rotate(358deg) brightness(91%) contrast(121%)'}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t<ListItem \r\n\t\t\t\t\t\t\tonClick={() => market.type === \"Market\" ? window.open(`/dashboard?marketId=${market.id}`) : handleSelectMyMarket(market.id, market.name, market.sportId, market.type, market.country)} button>\r\n\r\n\t\t\t\t\t\t\t<ListItemText style={{minWidth: `13em`}}>{market.name}</ListItemText>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t{/* If last one don't make divider */}\r\n\t\t\t\t{index === props.myMarkets.length - 1 ? null : <Divider style={{ width: \"100%\" }} />}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t{!selectedMarket.type ? \r\n\t\t\t\t// Selecting myMarkets\r\n\t\t\t\trenderMarkets()\r\n\t\t\t\t:\r\n\t\t\t\t// Selecting Market\r\n\t\t\t\tcurrentEvent !== undefined &&\r\n\t\t\t\t\teventMarkets !== undefined &&\r\n\t\t\t\t\teventMarkets.length > 0 ?\r\n\t\t\t\t\t<SelectMarket\r\n\t\t\t\t\tcurrentSportId={currentSportId}\r\n\t\t\t\t\tname={currentEvent.name}\r\n\t\t\t\t\tmarkets={eventMarkets.sort((a, b) => a.marketName.localeCompare(b.marketName))}\r\n\t\t\t\t\thandleClick={handleMarketClick}\r\n\t\t\t\t\tevent={currentEvent}\r\n\t\t\t\t\tmyMarkets = {props.myMarkets}\r\n\t\t\t\t\tupdateMyMarkets = {updateMyMarkets}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t: // Selecting Event\r\n\t\t\t\t\tcurrentCountry !== undefined &&\r\n\t\t\t\t\tcompetitionEvents !== undefined &&\r\n\t\t\t\t\tcompetitionEvents.length > 0 &&\r\n\t\t\t\t\tcurrentEvent === undefined ?\r\n\t\t\t\t\t<SelectEvent\r\n\t\t\t\t\t\tcurrentSportId={currentSportId}\r\n\t\t\t\t\t\tcurrentCompetition={currentCompetition}\r\n\t\t\t\t\t\tcurrentCountry={currentCountry}\r\n\t\t\t\t\t\tcompetitionEvents={competitionEvents.sort((a, b) => Date.parse(a.openDate) - Date.parse(b.openDate) || a.name.localeCompare(b.name))}\r\n\t\t\t\t\t\thandleClick={handleMarketClick}\r\n\t\t\t\t\t\tmyMarkets = {props.myMarkets}\r\n\t\t\t\t\t\tupdateMyMarkets = {updateMyMarkets}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t: // Selecting Competition\r\n\t\t\t\t\tcurrentCountry !== undefined &&\r\n                    countryCompetitions !== undefined &&\r\n                    countryCompetitions.length > 0 &&\r\n                    currentEvent === undefined ?\r\n\t\t\t\t\t<SelectCompetition\r\n\t\t\t\t\t  currentCountry={currentCountry.id}\r\n                      competitions={countryCompetitions === undefined ? [] : countryCompetitions}\r\n                      handleClick={handleMarketClick}\r\n                      currentSportId={currentSportId}\r\n                      myMarkets = {props.myMarkets}\r\n                      updateMyMarkets = {updateMyMarkets}\r\n                    />\r\n                    : // Selecting Sport\r\n\t\t\t\t\t<SelectSport\r\n\t\t\t\t\t\tsports={props.sports}\r\n\t\t\t\t\t\tcurrentSportId={selectedMarket.id}\r\n\t\t\t\t\t\tcountries={sportCountries === undefined ? [] : sportCountries}\r\n\t\t\t\t\t\thandleClick={handleMarketClick}\r\n\t\t\t\t\t\tmyMarkets = {props.myMarkets}\r\n\t\t\t\t\t\tupdateMyMarkets = {updateMyMarkets}\r\n\t\t\t\t\t/>\r\n            }\r\n\t\t</List>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tmyMarkets: state.market.myMarkets,\r\n\t\tsports: state.sports,\r\n\t\twinMarketsOnly: state.settings.winMarketsOnly\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonReceiveMyMarkets: markets => dispatch(actions.loadMyMarkets(markets)),\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(MyMarkets);","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions/sport\";\r\nimport { loadMyMarkets } from \"../../../actions/market\";\r\nimport List from \"@material-ui/core/List\";\r\nimport SelectSport from \"./SelectSport\";\r\nimport SelectCompetition from \"./SelectCompetition\";\r\nimport SelectEvent from \"./SelectEvent\";\r\nimport SelectMarket from \"./SelectMarket\";\r\n\r\nconst AllSports = props => {\r\n  useEffect(() => {\r\n    fetch(`/api/get-all-sports`)\r\n      .then(res => res.json())\r\n      .then(sports => {\r\n        sports.push({eventType: {id: \"TC-7\", name: \"Horse Racing - Today's Card\"}})\r\n        sports.push({eventType: {id: \"TC-4339\", name: \"Greyhound Racing - Today's Card\"}})\r\n        \r\n        sports.sort((a, b) => {\r\n          var nameA = a.eventType.name.toLowerCase(), nameB = b.eventType.name.toLowerCase()\r\n          if (nameA < nameB) //sort string ascending\r\n            return -1\r\n          if (nameA > nameB)\r\n            return 1\r\n          return 0 //default return value (no sorting)\r\n        });\r\n\r\n        props.onReceiveAllSports(sports);\r\n      });\r\n  }, []);\r\n\r\n  const handleClick = async (\r\n    marketSelection,\r\n    currentMarket,\r\n    marketList,\r\n    api,\r\n    sportId = \"\",\r\n    country = \"\",\r\n    competition = \"\",\r\n    event = \"\",\r\n    mapMarkets = data => data,\r\n    sortMarkets = data => data\r\n  ) => {\r\n    /*\r\n\t\t\tmarketSelection - button click\r\n\t\t\tcurrentMarket - key for the market that is currently selected\r\n\t\t\tmarketList - key for array that is associated with the market (we can also use this to reset an array associated with the marketSelection)\r\n\t\t\tapi - where we should fetch\r\n\t\t\tsports, country, competition, event - api information,\r\n\t\t\tmapMarkets - map the data we get from the api call\r\n    */\r\n\r\n    // set back to undefined if they don't want to see the menu anymore, click on the same button another time\r\n    if (props.sports.currentSport[currentMarket] === marketSelection) {\r\n      const newSport = Object.assign({}, props.sports.currentSport);\r\n\r\n      newSport[currentMarket] = undefined;\r\n      newSport[marketList] = undefined;\r\n\r\n      props.onUpdateCurrentSport(newSport);\r\n      return;\r\n    }\r\n\r\n    \r\n\r\n    const response = await fetch(\r\n      `/api/${api}?sportId=${sportId}&&winMarketsOnly=${props.winMarketsOnly}&&country=${country}&&competitionId=${competition}&&eventId=${event}`\r\n    );\r\n    const data = await response.json();\r\n    const newSport = Object.assign({}, props.sports.currentSport);\r\n    \r\n    newSport[currentMarket] = marketSelection;\r\n    newSport[marketList] = sortMarkets(mapMarkets(data));\r\n    props.onUpdateCurrentSport(newSport);\r\n\r\n    return data;\r\n  };\r\n\r\n\r\n  const updateMyMarkets = (action, id, name, sportId, type, country) => {\r\n    /*\r\n\t\t\tmyMarkets - myMarkets that will be edited\r\n\t\t\taction - add to my markets, or remove\r\n\t\t\tid - id for the selection\r\n\t\t\tname - name displayed on myMarkets\r\n\t\t\tsportId - the sport that the selection is associated with\r\n      type - the type of the selection (sport, country, competition, event, market)\r\n      currentCountry - the currentCountry, only applies to (country, competition, event) for lookup purposes\r\n    */\r\n    const marketSelection = {id, name, sportId, type, country};\r\n    \r\n    fetch(`/api/${action == \"add\" ? 'save-market' : 'remove-market'}`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(marketSelection)\r\n    })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      props.onUpdateMyMarkets(res)\r\n    })\r\n    .catch(res => {})\r\n    \r\n  }\r\n\r\n  const {\r\n    currentSportId,\r\n    sportCountries,\r\n    currentCountry,\r\n    countryCompetitions,\r\n    currentCompetition,\r\n    competitionEvents,\r\n    currentEvent,\r\n    eventMarkets\r\n  } = props.sports.currentSport;\r\n  \r\n  return (\r\n    <div>\r\n      <table id=\"all-sports\">\r\n        <tbody>\r\n          <List>\r\n            {// Selecting Market\r\n              currentEvent !== undefined &&\r\n                eventMarkets !== undefined &&\r\n                eventMarkets.length > 0 ?\r\n                <SelectMarket\r\n                  currentSportId={currentSportId}\r\n                  name={currentEvent.name}\r\n                  markets={eventMarkets.sort((a, b) => a.marketName.localeCompare(b.marketName))}\r\n                  handleClick={handleClick}\r\n                  event={currentEvent}\r\n                  myMarkets = {props.myMarkets}\r\n                  updateMyMarkets = {updateMyMarkets}\r\n                />\r\n                : // Selecting Event\r\n                currentCountry !== undefined &&\r\n                  competitionEvents !== undefined &&\r\n                  competitionEvents.length > 0 &&\r\n                  currentEvent === undefined ?\r\n                  <SelectEvent\r\n                    currentSportId={currentSportId}\r\n                    currentCompetition={currentCompetition}\r\n                    currentCountry={currentCountry}\r\n                    competitionEvents={competitionEvents.sort((a, b) => Date.parse(a.openDate) - Date.parse(b.openDate) || a.name.localeCompare(b.name))}\r\n                    handleClick={handleClick}\r\n                    myMarkets = {props.myMarkets}\r\n                    updateMyMarkets = {updateMyMarkets}\r\n                  />\r\n                  : // Selecting Competition\r\n                  currentCountry !== undefined &&\r\n                    countryCompetitions !== undefined &&\r\n                    countryCompetitions.length > 0 &&\r\n                    currentEvent === undefined ?\r\n                    <SelectCompetition\r\n                      currentCountry={currentCountry}\r\n                      competitions={countryCompetitions}\r\n                      handleClick={handleClick}\r\n                      currentSportId={currentSportId}\r\n                      myMarkets = {props.myMarkets}\r\n                      updateMyMarkets = {updateMyMarkets}\r\n                    />\r\n                    : // Selecting Sport\r\n                    <SelectSport\r\n                      sports={props.sports}\r\n                      currentSportId={currentSportId}\r\n                      countries={sportCountries}\r\n                      handleClick={handleClick}\r\n                      myMarkets = {props.myMarkets}\r\n                      updateMyMarkets = {updateMyMarkets}\r\n                    />\r\n            }\r\n          </List>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    sports: state.sports,\r\n    currentSport: state.currentSport,\r\n    myMarkets: state.market.myMarkets,\r\n    winMarketsOnly: state.settings.winMarketsOnly\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onReceiveAllSports: sports => dispatch(actions.setAllSports(sports)),\r\n    onUpdateCurrentSport: sport => dispatch(actions.setCurrentSport(sport)),\r\n    onUpdateMyMarkets: markets => dispatch(loadMyMarkets(markets))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AllSports);","export const setAllSports = sports => {\r\n    return {\r\n        type: \"SPORTS_LIST\",\r\n        payload: sports\r\n    }\r\n};\r\n\r\nexport const setCurrentSport = sport => {\r\n    return {\r\n        type: \"SPORTS_CURRENT\",\r\n        payload: sport\r\n    }\r\n};\r\n\r\nexport const setCurrentMarket = market => {\r\n    return {\r\n        type: \"CURRENT_MARKET\",\r\n        payload: market\r\n    }\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst ActiveBets = () => {\r\n\r\n\tconst [events, setEvents] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/api/get-events-with-active-bets')\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetEvents(data);\r\n\t\t\t})\r\n\t}, []);\r\n\r\n\tconst renderEvents = () => {\r\n\t\treturn events.map(event => {\r\n\t\t\treturn (\r\n\t\t\t\t<ListItem\r\n\t\t\t\t\tbutton\r\n\t\t\t\t\tonClick={e => window.open(`/dashboard?marketId=${event.marketId}`)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItemText>{event.marketName}</ListItemText>\r\n\t\t\t\t</ListItem>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<List>\r\n\t\t\t{renderEvents()}\r\n\t\t</List>\r\n\t);\r\n}\r\n\r\nexport default ActiveBets;","import React, { useState } from \"react\";\r\nimport MyMarkets from \"./MyMarkets\";\r\nimport AllSports from \"./AllSports\";\r\nimport ActiveBets from \"./ActiveBets\";\r\nimport MultiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MultiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport useStyles from \"../../Styles/Styles\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n      border: \"1px solid #fff\",\r\n      boxShadow: \"none\",\r\n      \"&:not(:last-child)\": {\r\n        borderBottom: 0\r\n      },\r\n      backgroundColor: \"#fff\",\r\n      color: \"orange\",\r\n      fontWeight: \"900\",\r\n      fontSize: \"0.8em\",\r\n      display: \"block\",\r\n    },\r\n    expanded: {}\r\n  })(MultiExpansionPanel);\r\n  \r\n  const ExpansionPanelSummary = withStyles({\r\n    root: {\r\n      zIndex: \"1\",\r\n    },\r\n    expanded: {}\r\n  })(MultiExpansionPanelSummary);\r\n\r\nconst Menu = () => {\r\n\r\n    const [expanded, setExpanded] = useState(\"my_markets\");\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleChange = tab => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? tab : false);\r\n      };\r\n\r\n      const createExpansionPanelSummary = name => {\r\n        return (\r\n          <ExpansionPanelSummary\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n                {createTitle(name)}\r\n          </ExpansionPanelSummary>\r\n        );\r\n        };\r\n        \r\n        const createTitle = (name, position) => {\r\n            return (\r\n                <AppBar className={classes.appBar} position={position || \"absolute\"}>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {name}\r\n                    </Typography>\r\n                </AppBar>\r\n            );\r\n        };\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <ExpansionPanel\r\n            expanded={expanded === \"my_markets\"}\r\n            onChange={handleChange(\"my_markets\")}\r\n          >\r\n            {createExpansionPanelSummary(\"My Markets\")}\r\n            <MyMarkets />\r\n          </ExpansionPanel>\r\n\r\n          <ExpansionPanel\r\n            expanded={expanded === \"all_sports\"}\r\n            onChange={handleChange(\"all_sports\")}\r\n          >\r\n            {createExpansionPanelSummary(\"All Sports\")}\r\n            <AllSports />\r\n          </ExpansionPanel>\r\n\r\n          <ExpansionPanel\r\n            expanded={expanded === \"active_bets\"}\r\n            onChange={handleChange(\"active_bets\")}\r\n          >\r\n            {createExpansionPanelSummary(\"Active Bets\")}\r\n            <ActiveBets />\r\n          </ExpansionPanel>\r\n        </React.Fragment>\r\n      );\r\n};\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateExcludedLadders } from \"../../../actions/market\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    background: \"#303030\",\r\n    color: \"orange\",\r\n    fontWeight: \"900\",\r\n    border: \"2px solid #fff\"\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  }\r\n}));\r\n\r\nconst Ladder = props => {\r\n  const classes = useStyles();\r\n\r\n  const deconstructLadder = ladder => {\r\n\r\n    if (ladder === undefined) {\r\n      return {}\r\n    }\r\n\r\n    const data = {\r\n      ltp: null,\r\n      color: \"#FFFFFF\"\r\n    };\r\n\r\n    if (ladder.ltp && ladder.ltp[0]) {\r\n      data.ltp = ladder.ltp[0];\r\n      data.color = ladder.ltp[0] < ladder.ltp[1] ? \"#0AFD03\" : ladder.ltp[0] > ladder.ltp[1] ? \"#FC0700\" : \"#FFFF00\";\r\n    }\r\n\r\n    data.atb = ladder.atb && ladder.atb[0] ? ladder.atb[0][0] : null;\r\n    data.atl = ladder.atl && ladder.atl[0] ? ladder.atl[0][0] : null;\r\n\r\n    return data;\r\n  };\r\n\r\n  const renderRunners = () => {\r\n    // values of ladder order are the keys of props.ladder\r\n    return Object.values(props.ladderOrder).map(value => {\r\n      \r\n      const { atb, atl, ltp, color } = deconstructLadder(props.ladder[value]);\r\n\r\n      return (\r\n        <tr>\r\n          <td>{props.runners[value].runnerName}</td>\r\n          <td>{atl}</td>\r\n          <td style={{ background: color }}>{ltp}</td>\r\n          <td>{atb}</td>\r\n          <td>\r\n            <input \r\n              type=\"checkbox\" \r\n              checked={props.excludedLadders.indexOf(value) === -1} // false automatically omits attribute\r\n              onClick={() => {\r\n                if (props.excludedLadders.indexOf(value) === -1) {\r\n                  props.onChangeExcluded(props.excludedLadders.concat(value))\r\n                } else {\r\n                  props.onChangeExcluded(props.excludedLadders.filter(item => item !== value))\r\n                }\r\n              }} />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.appBar} position=\"static\">\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Ladders\r\n        </Typography>\r\n      </AppBar>\r\n      {props.marketOpen ?\r\n      <table id=\"menu-ladder\">\r\n        <tbody>{renderRunners()}</tbody>\r\n      </table>\r\n      : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    marketOpen: state.market.marketOpen,\r\n    market: state.market.currentMarket,\r\n    ladder: state.market.ladder,\r\n    runners: state.market.runners,\r\n    excludedLadders: state.market.excludedLadders,\r\n    ladderOrder: state.market.ladderOrder,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChangeExcluded: excludedLadders => dispatch(updateExcludedLadders(excludedLadders))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ladder);\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default withStyles(theme => ({\r\n  root: {\r\n    fontSize: \"x-small\",\r\n    display: 'flex',\r\n    marginRight: '-4px',\r\n    marginTop: '-15%',\r\n    marginBottom: '-15%',\r\n    \"&:focus\": {\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: theme.palette.common.white\r\n      }\r\n    }\r\n  }\r\n}))(MenuItem);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nexport default withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\"\r\n  }\r\n})(props => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\"\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\"\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n","/** An array of all BetFair values between 1.01 to 1000\r\n * Used in the stop loss check function below\r\n */\r\nconst ALL_PRICES = Array(100).fill()\r\n  .map((a, l) => parseFloat((l / 100 + 1.01).toFixed(2)))\r\n  .concat(Array(50).fill().map((a, l) => parseFloat((l / 50 + 2.02).toFixed(2))))\r\n  .concat(Array(20).fill().map((a, l) => parseFloat((l / 20 + 3.05).toFixed(2))))\r\n  .concat(Array(20).fill().map((a, l) => parseFloat((l / 10 + 4.1).toFixed(1))))\r\n  .concat(Array(20).fill().map((a, l) => parseFloat((l / 5 + 6.2).toFixed(1))))\r\n  .concat(Array(19).fill().map((a, l) => parseFloat((l / 2 + 10.5).toFixed(1))))\r\n  .concat(Array(11).fill().map((a, l) => parseFloat((l + 20).toFixed(0))))\r\n  .concat(Array(10).fill().map((a, l) => parseFloat((2 * l + 32).toFixed(0))))\r\n  .concat(Array(10).fill().map((a, l) => parseFloat((5 * l + 55).toFixed(0))))\r\n  .concat(Array(90).fill().map((a, l) => parseFloat((10 * l + 110).toFixed(0))));\r\n\r\nconst createFullLadder = () => {\r\n  const Ladders = {};\r\n  var k;\r\n\r\n  // 100 - 1000\r\n  for (k = 1000; k >= 100; k -= 10) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 50 - 100\r\n  for (k = 95; k >= 50; k -= 5) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 30 - 50\r\n  for (k = 50; k >= 30; k -= 2) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 20 - 30\r\n  for (k = 30; k >= 20; k -= 1) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 10 - 20\r\n  for (k = 20; k >= 10; k -= 0.5) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 6 - 10\r\n  for (k = 10; k >= 6; k -= 0.2) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 4 - 6\r\n  for (k = 6; k >= 4; k -= 0.1) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 3 - 4\r\n  for (k = 4; k >= 3; k -= 0.05) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 2 - 3\r\n  for (k = 3; k >= 2; k -= 0.02) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n\r\n  // 1 - 2\r\n  for (k = 2; k >= 1; k -= 0.01) {\r\n    let priceKey = formatPriceKey(k);\r\n    Ladders[priceKey] = createDataPoints(priceKey);\r\n  }\r\n  return Ladders;\r\n};\r\n\r\n/**\r\n * This function formats the price key used for the full ladder\r\n * @param {number} key - The price (1.01 - 1000)\r\n * @return {string} The formatted price\r\n */\r\nconst formatPriceKey = key => {\r\n  return (Math.round(key * 100) / 100).toFixed(2);\r\n};\r\n\r\n\r\nconst formatPrice = odds => {\r\n  odds = parseFloat(odds);\r\n\r\n  switch (true) {\r\n    case odds < 4:\r\n      return odds.toFixed(2);\r\n    case odds < 20:\r\n      return odds.toFixed(1);\r\n    case odds >= 20:\r\n      return odds.toFixed(0);\r\n    default:\r\n      return odds.toFixed(2);\r\n  }\r\n};\r\n\r\n/**\r\n * This function finds keys of back/lay price objects 5 places either side of the LTP\r\n * Used to calculate the back/lay percentages for the Ladder View\r\n * @param {number} ltp - The Last Traded Price\r\n * @return {object} The keys of back/lay price objects 5 places either side of the LTP\r\n */\r\nconst getFiveDeviationBackLayPrices = ltp => {\r\n  var index = ALL_PRICES.indexOf(ltp);\r\n\r\n  return {\r\n    lay: ALL_PRICES.slice(index + 1, index + 6).map((s, v) => formatPriceKey(s)),\r\n    back: ALL_PRICES.slice(index - 5, index).map((s, v) => formatPriceKey(s))\r\n  };\r\n};\r\n\r\n/**\r\n * This function calculates the back/lay percentage of matched bets 5 prices away from the LTP\r\n * @param {object} ladder - The ladder for the runner\r\n * @param {object} ltp - The Last Traded Price\r\n * @return {object} The back/lay percentages\r\n */\r\nconst calcBackLayPercentages = (ladder, ltp) => {\r\n  if (!ltp) {\r\n    return { back: 0, lay: 0 };\r\n  }\r\n\r\n  // Get the prices for both back/lay trading 5 places either side of the LTP\r\n  const indices = getFiveDeviationBackLayPrices(ltp);\r\n\r\n  var backMatched = 0, layMatched = 0;\r\n  var i;\r\n\r\n  // Add the back total\r\n  for (i = 0; i < indices.back.length; i++) {\r\n    let data = ladder[indices.back[i]];\r\n    backMatched += ((data) && data.backMatched) ? data.backMatched : 0;\r\n  }\r\n\r\n  // Add the lay total\r\n  for (i = 0; i < indices.lay.length; i++) {\r\n    let data = ladder[indices.lay[i]];\r\n    layMatched += ((data) && data.layMatched) ? data.layMatched : 0;\r\n  }\r\n\r\n  const total = backMatched + layMatched;\r\n\r\n  const backPercent = Math.round((backMatched / total) * 100);\r\n  const layPercent = Math.round((layMatched / total) * 100);\r\n\r\n  return { back: backPercent ? backPercent : 0 , lay: layPercent ? layPercent : 0 };\r\n};\r\n\r\n\r\nconst createDataPoints = odds => {\r\n  return {\r\n    backProfit: null,\r\n    backMatched: null,\r\n    odds: odds,\r\n    layMatched: null,\r\n    layProfit: null\r\n  };\r\n};\r\n\r\nexport {\r\n  createFullLadder,\r\n  formatPriceKey,\r\n  formatPrice,\r\n  ALL_PRICES,\r\n  calcBackLayPercentages\r\n};\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../actions/stopEntry\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport StyledMenuItem from \"../../../MaterialUI/StyledMenuItem\";\r\nimport StyledMenu from \"../../../MaterialUI/StyledMenu\";\r\nimport { formatPrice } from \"../../../../utils/ladder/CreateFullLadder\";\r\nimport crypto from 'crypto';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 75\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  },\r\n  formControlLabel: {\r\n    fontSize: \"0.6rem\",\r\n    \"& label\": {\r\n      fontSize: \"0.6rem\"\r\n    }\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  backPriceTextFields: {\r\n    width: 75,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  select: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst StopEntry = props => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  // Load all the runners / set All / The Field as the default\r\n  React.useEffect(() => {\r\n    props.onSelection(\r\n      Object.keys(props.runners).map(key => [props.runners[key].selectionId])\r\n    );\r\n  }, []);\r\n\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    props.onSelection(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // Handle Submit click to place an order\r\n  const placeOrder = async () => {\r\n    const selections = typeof props.selections == \"string\" ? [props.selections] : props.selections\r\n\r\n    const newStopEntryList = Object.assign({}, props.stopEntryList)\r\n\r\n    await Promise.all(selections.map(async selection => {\r\n      const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n      const convertedSelection = parseInt(selection);\r\n      const addedOrder = {\r\n          strategy: \"Stop Entry\",\r\n          marketId: props.market.marketId, \r\n          selectionId: convertedSelection,\r\n          targetLTP: props.ticks,\r\n          stopEntryCondition: props.operator,\r\n          side: props.side,\r\n          size: props.stake,\r\n          price: formatPrice(props.price),\r\n          rfs: referenceStrategyId\r\n      };\r\n\r\n      await fetch('/api/save-order', {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(addedOrder)\r\n      }).then(() => {\r\n        if (newStopEntryList[convertedSelection] === undefined) {\r\n          newStopEntryList[convertedSelection] = [addedOrder]\r\n        } else {\r\n          newStopEntryList[convertedSelection] = newStopEntryList[convertedSelection].concat(addedOrder)\r\n        }\r\n      })\r\n    }))\r\n\r\n    props.onUpdateStopEntryList(newStopEntryList);\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"Device settings\">\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"Selections\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText\r\n            primary=\"Runners\"\r\n            secondary={\r\n              props.selections\r\n                ? typeof props.selections === \"string\"\r\n                  ? props.runners[props.selections].runnerName\r\n                  : \"All / The Field\"\r\n                : \"\"\r\n            }\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <StyledMenu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {/* The Menu Item for All / the Field */}\r\n        {props.runners ? (\r\n          <StyledMenuItem\r\n            key={`stop-loss-order-all/field`}\r\n            className={classes.root}\r\n            selected={typeof props.selections != \"string\"}\r\n            onClick={event =>\r\n              handleMenuItemClick(\r\n                event,\r\n                Object.keys(props.runners).map(key => [\r\n                  props.runners[key].selectionId\r\n                ])\r\n              )\r\n            }\r\n          >\r\n            All / The Field\r\n          </StyledMenuItem>\r\n        ) : null}\r\n        {/* Create Menu Items for all the runners and display their names\r\n         * Store their selectionId to be used to place bets for event clicks\r\n         */}\r\n        {Object.keys(props.runners).map(key => (\r\n          <StyledMenuItem\r\n            key={`stop-entry-order-${props.runners[key].runnerName}`}\r\n            className={classes.root}\r\n            selected={key === props.selections}\r\n            onClick={event => handleMenuItemClick(event, key)}\r\n          >\r\n            {props.runners[key].runnerName}\r\n          </StyledMenuItem>\r\n        ))}\r\n      </StyledMenu>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel>LTP</InputLabel>\r\n          <Select\r\n            native\r\n            className={classes.select}\r\n            value={props.operator}\r\n            onChange={e => props.onReceiveOperator(e.target.value)}\r\n            input={<OutlinedInput name=\"age\" />}\r\n          >\r\n            <option value=\"\" />\r\n            <option value={\"<\"}>{\"<\"}</option>\r\n            <option value={\"=\"}>{\"=\"}</option>\r\n            <option value={\">\"}>{\">\"}</option>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField}\r\n          type=\"number\"\r\n          label=\"Ticks\"\r\n          value={props.ticks}\r\n          inputProps={{ min: \"1\", max: \"100\" }}\r\n          onChange={e => props.onReceiveTicks(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.backPriceTextFields}\r\n          type=\"number\"\r\n          label=\"Back\"\r\n          value={props.stake}\r\n          inputProps={{ min: \"1\" }}\r\n          onChange={e => props.onReceiveStake(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.backPriceTextFields}\r\n          type=\"number\"\r\n          label=\"@\"\r\n          value={props.price}\r\n          inputProps={{ min: \"1\" }}\r\n          onChange={e => props.onReceivePrice(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n      </div>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => {\r\n          placeOrder();\r\n        }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    operator: state.stopEntry.operator,\r\n    ticks: state.stopEntry.ticks,\r\n    stake: state.stopEntry.stake,\r\n    price: state.stopEntry.price,\r\n    runners: state.market.runners,\r\n    side: state.stopEntry.side,\r\n    stopEntryList: state.stopEntry.list,\r\n    market: state.market.currentMarket,\r\n    selections: state.stopEntry.selections\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onReceiveOperator: operator => dispatch(actions.setLTPOperator(operator)),\r\n    onReceiveTicks: ticks => dispatch(actions.setTicks(ticks)),\r\n    onReceiveStake: stake => dispatch(actions.setStake(stake)),\r\n    onReceivePrice: price => dispatch(actions.setPrice(price)),\r\n    onRecieveSide: side => dispatch(actions.setSide(side)),\r\n    onUpdateStopEntryList: list => dispatch(actions.updateStopEntryList(list)),\r\n    onSelection: selections => dispatch(actions.setSelections(selections))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StopEntry);\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../actions/stopLoss\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport StyledMenuItem from \"../../../MaterialUI/StyledMenuItem\";\r\nimport StyledMenu from \"../../../MaterialUI/StyledMenu\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    height: \"50px\",\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  },\r\n  formControlLabel: {\r\n    fontSize: \"0.6rem\",\r\n    \"& label\": {\r\n      fontSize: \"0.6rem\"\r\n    }\r\n  },\r\n  textField: {\r\n    marginRight: theme.spacing(2),\r\n    width: 50\r\n  }\r\n}));\r\n\r\nconst StopLoss = props => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  // Change the text when the fields change\r\n  React.useEffect(() => {\r\n    var box1Val = props.trailing ? \"x\" : \"-\";\r\n    var box2Val = props.hedged ? \"x\" : \"-\";\r\n    var unit = props.units === \"Percent\" ? \"(%)\" : props.units;\r\n\r\n    props.onTextUpdate(`${props.offset} ${unit} [${box1Val}][${box2Val}]`);\r\n  }, [props.offset, props.units, props.hedged, props.trailing]);\r\n\r\n  // Load all the runners / set All / The Field as the default\r\n  React.useEffect(() => {\r\n    props.onSelection(\r\n      Object.keys(props.runners).map(key => [props.runners[key].selectionId])\r\n    );\r\n  }, []);\r\n\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    props.onSelection(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List component=\"nav\" aria-label=\"Device settings\">\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"Selections\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText\r\n            primary=\"Runners\"\r\n            secondary={\r\n              props.selections\r\n                ? typeof props.selections === \"string\"\r\n                  ? props.runners[props.selections].runnerName\r\n                  : \"All / The Field\"\r\n                : \"\"\r\n            }\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <StyledMenu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {/* The Menu Item for All / the Field */}\r\n        {props.runners ? (\r\n          <StyledMenuItem\r\n            key={`stop-loss-order-all/field`}\r\n            className={classes.root}\r\n            selected={typeof props.selections != \"string\"}\r\n            onClick={event =>\r\n              handleMenuItemClick(\r\n                event,\r\n                Object.keys(props.runners).map(key => [\r\n                  props.runners[key].selectionId\r\n                ])\r\n              )\r\n            }\r\n          >\r\n            All / The Field\r\n          </StyledMenuItem>\r\n        ) : null}\r\n        {/* Create Menu Items for all the runners and display their names\r\n         * Store their selectionId to be used to place bets for event clicks\r\n         */}\r\n        {Object.keys(props.runners).map(key => (\r\n          <StyledMenuItem\r\n            key={`stop-loss-order-${props.runners[key].runnerName}`}\r\n            className={classes.root}\r\n            selected={key === props.selections}\r\n            onClick={event => handleMenuItemClick(event, key)}\r\n          >\r\n            {props.runners[key].runnerName}\r\n          </StyledMenuItem>\r\n        ))}\r\n      </StyledMenu>\r\n\r\n      <RadioGroup\r\n        aria-label=\"stoploss\"\r\n        name=\"stoploss\"\r\n        className={classes.group}\r\n        value={props.units}\r\n        onChange={e => props.onReceiveUnit(e.target.value)}\r\n      >\r\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <TextField\r\n            id=\"standard-number\"\r\n            className={classes.textField}\r\n            type=\"number\"\r\n            value={props.offset}\r\n            inputProps={{ min: \"1\", max: \"100\" }}\r\n            onChange={e => props.onReceiveOffset(e.target.value)}\r\n            margin=\"normal\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"Ticks\"\r\n            className={classes.formControlLabel}\r\n            control={<Radio color=\"primary\" Radio />}\r\n            label={<span>Tick</span>}\r\n          />\r\n          <FormControlLabel\r\n            value=\"Percent\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"%\"\r\n          />\r\n        </div>\r\n      </RadioGroup>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"primary\"\r\n              checked={props.trailing}\r\n              onChange={e => props.onToggleTrailing(e.target.checked)}\r\n            />\r\n          }\r\n          label=\"Trailing\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"primary\"\r\n              checked={props.hedged}\r\n              onChange={e => props.onToggleHedged(e.target.checked)}\r\n            />\r\n          }\r\n          label=\"Hedged\"\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    text: state.stopLoss.text,\r\n    offset: state.stopLoss.offset,\r\n    units: state.stopLoss.units,\r\n    trailing: state.stopLoss.trailing,\r\n    hedged: state.stopLoss.hedged,\r\n    runners: state.market.runners,\r\n    selections: state.stopLoss.selections\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTextUpdate: text => dispatch(actions.setDisplayText(text)),\r\n    onReceiveOffset: offset => dispatch(actions.setStopLossOffset(offset)),\r\n    onReceiveUnit: unit => dispatch(actions.setStopLossUnit(unit)),\r\n    onToggleTrailing: selected =>\r\n      dispatch(actions.toggleStopLossTrailing(selected)),\r\n    onToggleHedged: selected => dispatch(actions.toggleStopLossHedged(selected)),\r\n    onSelection: selections => dispatch(actions.setSelections(selections))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StopLoss);\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../actions/tickOffset\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(5),\r\n    width: 75\r\n  }\r\n}));\r\n\r\nconst TickOffset = props => {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    var unit = props.unit === \"Percent\" ? \"%\" : props.unit;\r\n    var percent = `(${props.percentTrigger}%)`;\r\n\r\n    props.onTextUpdate(`${props.ticks} ${unit} ${percent} [${props.hedged ? \"x\" : \"-\"}]`);\r\n\r\n  }, [props.ticks, props.unit, props.percentTrigger, props.hedged]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          type=\"number\"\r\n          label=\"Ticks\"\r\n          className={classes.textField}\r\n          value={props.ticks}\r\n          inputProps={{ min: \"1\", max: \"100\" }}\r\n          onChange={e => props.onReceiveTicks(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <RadioGroup\r\n          aria-label=\"tickoffset\"\r\n          name=\"tickoffset\"\r\n          value={props.unit}\r\n          onChange={e => props.onReceiveUnit(e.target.value)}\r\n        >\r\n          <FormControlLabel\r\n            className={classes.formControlLabel}\r\n            value=\"Ticks\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"Ticks\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"Percent\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"%\"\r\n          />\r\n        </RadioGroup>\r\n      </div>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField}\r\n          type=\"number\"\r\n          label=\"% Trigger\"\r\n          value={props.percentTrigger}\r\n          inputProps={{ min: \"1\", max: \"100\" }}\r\n          onChange={e => props.onReceivePercentTrigger(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"primary\"\r\n              checked={props.hedged}\r\n              onChange={e => props.onReceiveHedged(e.target.checked)}\r\n            />\r\n          }\r\n          label=\"Hedged\"\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    text: state.tickOffset.text,\r\n    ticks: state.tickOffset.ticks,\r\n    unit: state.tickOffset.units,\r\n    percentTrigger: state.tickOffset.percentTrigger,\r\n    hedged: state.tickOffset.hedged\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTextUpdate: text => dispatch(actions.setDisplayText(text)),\r\n    onReceiveTicks: ticks => dispatch(actions.setTicks(ticks)),\r\n    onReceiveUnit: unit => dispatch(actions.setUnit(unit)),\r\n    onReceivePercentTrigger: percent =>\r\n      dispatch(actions.setPercentTrigger(percent)),\r\n    onReceiveHedged: selected => dispatch(actions.setHedged(selected))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TickOffset);\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../actions/back\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport StyledMenuItem from \"../../../MaterialUI/StyledMenuItem\";\r\nimport StyledMenu from \"../../../MaterialUI/StyledMenu\";\r\nimport { formatPrice } from \"../../../../utils/ladder/CreateFullLadder\";\r\nimport crypto from 'crypto'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    width: 40,\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField2: {\r\n    width: 30,\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Back = props => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  // Change the text when the fields change\r\n  React.useEffect(() => {\r\n    props.onTextUpdate(`${props.stake} @ ${props.price}`);\r\n  }, [props.price, props.stake]);\r\n\r\n  // Load all the runners / set All / The Field as the default\r\n  React.useEffect(() => {\r\n    props.onSelection((Object.keys(props.runners).map(key => [\r\n      props.runners[key].selectionId\r\n    ])));\r\n  }, []);\r\n\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    props.onSelection(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // Handle Submit click to place an order\r\n  const placeOrder = async () => {\r\n\r\n    const selections = typeof props.selections == \"string\" ? [props.selections] : props.selections\r\n\r\n    const newBackList = Object.assign({}, props.list)\r\n\r\n    await Promise.all(selections.map(async (selection, index) => {\r\n      const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n      const convertedSelection = parseInt(selection);\r\n      const addedOrder = {\r\n          strategy: \"Back\",\r\n          marketId: props.market.marketId, \r\n          selectionId: convertedSelection,\r\n          executionTime: props.executionTime,\r\n          timeOffset: (props.hours * 3600) + (props.minutes * 60) + parseInt(props.seconds),\r\n          size: props.stake,\r\n          price: formatPrice(props.price),\r\n          rfs: referenceStrategyId\r\n      };\r\n\r\n      // make sure request is processed before saving it\r\n      \r\n      await fetch('/api/save-order', {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(addedOrder)\r\n      }).then(() => {\r\n        if (newBackList[convertedSelection] === undefined) {\r\n          newBackList[convertedSelection] = [addedOrder]\r\n        } else {\r\n          newBackList[convertedSelection] = newBackList[convertedSelection].concat(addedOrder)\r\n        }\r\n      })\r\n    }))\r\n\r\n    props.onUpdateBackList(newBackList);\r\n \r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <List component=\"nav\" aria-label=\"Device settings\">\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"Selections\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText\r\n            primary=\"Back\"\r\n            secondary={\r\n              props.selections\r\n                ? typeof props.selections === \"string\"\r\n                  ? props.runners[props.selections].runnerName\r\n                  : \"Back All / The Field\"\r\n                : \"\"\r\n            }\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <StyledMenu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {/* The Menu Item for Back All / the Field */}\r\n        {props.runners ? (\r\n          <StyledMenuItem\r\n            key={`back-order-all/field`}\r\n            className={classes.root}\r\n            selected={typeof props.selections != \"string\"}\r\n            onClick={event =>\r\n              handleMenuItemClick(\r\n                event,\r\n                Object.keys(props.runners).map(key => [\r\n                  props.runners[key].selectionId\r\n                ])\r\n              )\r\n            }\r\n          >\r\n            Back All / The Field\r\n          </StyledMenuItem>\r\n        ) : null}\r\n\r\n        {/* Create Menu Items for all the runners and display their names\r\n         * Store their selectionId to be used to place bets for event clicks\r\n         */}\r\n        {Object.keys(props.runners).map(key => (\r\n          <StyledMenuItem\r\n            key={`back-order-${props.runners[key].runnerName}`}\r\n            className={classes.root}\r\n            selected={key === props.selections}\r\n            onClick={event => handleMenuItemClick(event, key)}\r\n          >\r\n            {props.runners[key].runnerName}\r\n          </StyledMenuItem>\r\n        ))}\r\n      </StyledMenu>\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField}\r\n          type=\"number\"\r\n          label=\"stake\"\r\n          value={props.stake}\r\n          inputProps={{ min: \"1\" }}\r\n          onChange={e => props.onReceiveStake(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField}\r\n          type=\"number\"\r\n          label=\"@\"\r\n          value={props.price}\r\n          inputProps={{ min: \"1\" }}\r\n          onChange={e => props.onReceivePrice(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.button}\r\n          onClick={e => placeOrder()}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField2}\r\n          type=\"number\"\r\n          label=\"hh\"\r\n          value={props.hours}\r\n          inputProps={{ min: \"0\" }}\r\n          onChange={e => props.onReceiveHours(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField2}\r\n          type=\"number\"\r\n          label=\"mm\"\r\n          value={props.minutes}\r\n          inputProps={{ min: \"0\", max: \"59\" }}\r\n          onChange={e => props.onReceiveMinutes(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField2}\r\n          type=\"number\"\r\n          label=\"ss\"\r\n          value={props.seconds}\r\n          inputProps={{ min: \"0\", max: \"59\" }}\r\n          onChange={e => props.onReceiveSeconds(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n\r\n        <RadioGroup\r\n          aria-label=\"orderexecution\"\r\n          name=\"orderexecution\"\r\n          value={props.executionTime}\r\n          onChange={e => props.onToggleExecutionTime(e.target.value)}\r\n        >\r\n          <FormControlLabel\r\n            value=\"Before\"\r\n            className={classes.formControlLabel}\r\n            control={<Radio color=\"primary\" />}\r\n            label={<span>-</span>}\r\n          />\r\n\r\n          <FormControlLabel\r\n            value=\"After\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"+\"\r\n          />\r\n        </RadioGroup>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    text: state.back.text,\r\n    stake: state.back.stake,\r\n    price: state.back.price,\r\n    hours: state.back.offset.hours,\r\n    minutes: state.back.offset.minutes,\r\n    seconds: state.back.offset.seconds,\r\n    executionTime: state.back.executionTime,\r\n    runners: state.market.runners,\r\n    market: state.market.currentMarket,\r\n    selections: state.back.selections,\r\n    list: state.back.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTextUpdate: text => dispatch(actions.setDisplayText(text)),\r\n    onReceiveStake: stake => dispatch(actions.setStake(stake)),\r\n    onReceivePrice: price => dispatch(actions.setPrice(price)),\r\n    onReceiveHours: hours => dispatch(actions.setHours(hours)),\r\n    onReceiveMinutes: minutes => dispatch(actions.setMinutes(minutes)),\r\n    onReceiveSeconds: seconds => dispatch(actions.setSeconds(seconds)),\r\n    onToggleExecutionTime: time => dispatch(actions.toggleExecutionTime(time)),\r\n    onSelection: selections => dispatch(actions.setSelections(selections)),\r\n    onUpdateBackList: list => dispatch(actions.updateBackList(list))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Back);\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../actions/lay\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport StyledMenuItem from \"../../../MaterialUI/StyledMenuItem\";\r\nimport StyledMenu from \"../../../MaterialUI/StyledMenu\";\r\nimport { formatPrice } from \"../../../../utils/ladder/CreateFullLadder\";\r\nimport crypto from 'crypto'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    width: 40,\r\n    margin: theme.spacing(1)\r\n  },\r\n  textField2: {\r\n    width: 30,\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Lay = props => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  // Change the text when the fields change\r\n  React.useEffect(() => {\r\n    props.onTextUpdate(`${props.stake} @ ${props.price}`);\r\n  }, [props.price, props.stake]);\r\n\r\n  // Load all the runners / set All / The Field as the default\r\n  React.useEffect(() => {\r\n    props.onSelection((Object.keys(props.runners).map(key => [\r\n      props.runners[key].selectionId\r\n    ])));\r\n  }, []);\r\n\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    props.onSelection(index);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // Handle Submit click to place an order\r\n  const placeOrder = async () => {\r\n\r\n    const selections = typeof props.selections == \"string\" ? [props.selections] : props.selections\r\n\r\n    const newLayList = Object.assign({}, props.list)\r\n\r\n    await Promise.all(selections.map(async (selection, index) => {\r\n      const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n      const convertedSelection = parseInt(selection);\r\n      const addedOrder = {\r\n          strategy: \"Lay\",\r\n          marketId: props.market.marketId, \r\n          selectionId: convertedSelection,\r\n          executionTime: props.executionTime,\r\n          timeOffset: (props.hours * 3600) + (props.minutes * 60) + parseInt(props.seconds),\r\n          size: props.stake,\r\n          price: formatPrice(props.price),\r\n          rfs: referenceStrategyId\r\n      };\r\n\r\n      // make sure request is processed before saving it\r\n      \r\n      await fetch('/api/save-order', {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(addedOrder)\r\n      }).then(() => {\r\n        if (newLayList[convertedSelection] === undefined) {\r\n          newLayList[convertedSelection] = [addedOrder]\r\n        } else {\r\n          newLayList[convertedSelection] = newLayList[convertedSelection].concat(addedOrder)\r\n        }\r\n      })\r\n    }))\r\n\r\n    \r\n\r\n    props.onUpdateLayList(newLayList);\r\n    \r\n  };\r\n\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <List component=\"nav\" aria-label=\"Device settings\">\r\n        <ListItem\r\n          button\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"lock-menu\"\r\n          aria-label=\"Selections\"\r\n          onClick={handleClickListItem}\r\n        >\r\n          <ListItemText\r\n            primary=\"Lay\"\r\n            secondary={\r\n              props.selections\r\n                ? typeof props.selections === \"string\"\r\n                  ? props.runners[props.selections].runnerName\r\n                  : \"Lay All / The Field\"\r\n                : \"\"\r\n            }\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      <StyledMenu\r\n        id=\"lock-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {/* The Menu Item for Back All / the Field */}\r\n        {props.runners ? (\r\n          <StyledMenuItem\r\n            key={`lay-order-all/field`}\r\n            className={classes.root}\r\n            selected={typeof props.selections != \"string\"}\r\n            onClick={event =>\r\n              handleMenuItemClick(\r\n                event,\r\n                Object.keys(props.runners).map(key => [\r\n                  props.runners[key].selectionId\r\n                ])\r\n              )\r\n            }\r\n          >\r\n            Lay All / The Field\r\n          </StyledMenuItem>\r\n        ) : null}\r\n\r\n        {/* Create Menu Items for all the runners and display their names\r\n         * Store their selectionId to be used to place bets for event clicks\r\n         */}\r\n        {Object.keys(props.runners).map(key => (\r\n          <StyledMenuItem\r\n            key={`lay-order-${props.runners[key].runnerName}`}\r\n            className={classes.root}\r\n            selected={key === props.selections}\r\n            onClick={event => handleMenuItemClick(event, key)}\r\n          >\r\n            {props.runners[key].runnerName}\r\n          </StyledMenuItem>\r\n        ))}\r\n      </StyledMenu>\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField}\r\n          type=\"number\"\r\n          label=\"stake\"\r\n          value={props.stake}\r\n          inputProps={{ min: \"1\"}}\r\n          onChange={e => props.onReceiveStake(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField}\r\n          type=\"number\"\r\n          label=\"@\"\r\n          value={props.price}\r\n          inputProps={{ min: \"1\"}}\r\n          onChange={e => props.onReceivePrice(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={e => placeOrder()}>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField2}\r\n          type=\"number\"\r\n          label=\"hh\"\r\n          value={props.hours}\r\n          inputProps={{ min: \"0\"}}\r\n          onChange={e => props.onReceiveHours(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField2}\r\n          type=\"number\"\r\n          label=\"mm\"\r\n          value={props.minutes}\r\n          inputProps={{ min: \"0\", max: \"59\"}}\r\n          onChange={e => props.onReceiveMinutes(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.textField2}\r\n          type=\"number\"\r\n          label=\"ss\"\r\n          value={props.seconds}\r\n          inputProps={{ min: \"0\", max: \"59\"}}\r\n          onChange={e => props.onReceiveSeconds(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n\r\n        <RadioGroup\r\n          aria-label=\"orderexecution\"\r\n          name=\"orderexecution\"\r\n          value={props.executionTime}\r\n          onChange={e => props.onToggleExecutionTime(e.target.value)}\r\n        >\r\n          <FormControlLabel\r\n            value=\"Before\"\r\n            className={classes.formControlLabel}\r\n            control={<Radio color=\"primary\" />}\r\n            label={<span>-</span>}\r\n          />\r\n\r\n          <FormControlLabel\r\n            value=\"After\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"+\"\r\n          />\r\n        </RadioGroup>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    text: state.lay.text,\r\n    stake: state.lay.stake,\r\n    price: state.lay.price,\r\n    hours: state.lay.offset.hours,\r\n    minutes: state.lay.offset.minutes,\r\n    seconds: state.lay.offset.seconds,\r\n    executionTime: state.lay.executionTime,\r\n    market: state.market.currentMarket,\r\n    runners: state.market.runners,\r\n    selections: state.lay.selections,\r\n    list: state.lay.list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTextUpdate: text => dispatch(actions.setDisplayText(text)),\r\n    onReceiveStake: stake => dispatch(actions.setStake(stake)),\r\n    onReceivePrice: price => dispatch(actions.setPrice(price)),\r\n    onReceiveHours: hours => dispatch(actions.setHours(hours)),\r\n    onReceiveMinutes: minutes => dispatch(actions.setMinutes(minutes)),\r\n    onReceiveSeconds: seconds => dispatch(actions.setSeconds(seconds)),\r\n    onToggleExecutionTime: time => dispatch(actions.toggleExecutionTime(time)),\r\n    onSelection: selections => dispatch(actions.setSelections(selections)),\r\n    onUpdateLayList: list => dispatch(actions.updateLayList(list))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Lay);\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../../actions/fillOrKill\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n  },\r\n  number: {\r\n    marginLeft: theme.spacing(1),\r\n    width: 50\r\n  }\r\n}));\r\n\r\nconst FillOrKill = props => {\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    props.onTextUpdate(`${props.seconds} seconds`);\r\n  }, [props.seconds]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.root}>\r\n        <TextField\r\n          id=\"standard-number\"\r\n          className={classes.number}\r\n          type=\"number\"\r\n          label=\"Seconds\"\r\n          value={props.seconds}\r\n          inputProps={{ min: \"1\", max: \"100\"}}\r\n          onChange={e => props.onReceiveFillOrKill(e.target.value)}\r\n          margin=\"normal\"\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    seconds: state.fillOrKill.seconds\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTextUpdate: text => dispatch(actions.setDisplayText(text)),\r\n    onReceiveFillOrKill: seconds => dispatch(actions.setFillOrKill(seconds))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FillOrKill);","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setStopEntrySelected } from \"../../../../actions/stopEntry\";\r\nimport { setStopLossSelected } from \"../../../../actions/stopLoss\";\r\nimport { setTickOffsetSelected } from \"../../../../actions/tickOffset\";\r\nimport { setBackSelected } from \"../../../../actions/back\";\r\nimport { setLaySelected } from \"../../../../actions/lay\";\r\nimport { setFillOrKillSelected } from \"../../../../actions/fillOrKill\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport StopEntry from \"./StopEntry\";\r\nimport StopLoss from \"./StopLoss\";\r\nimport TickOffset from \"./TickOffset\";\r\nimport Back from \"./Back\";\r\nimport Lay from \"./Lay\";\r\nimport FillOrKill from \"./FillOrKill\";\r\n\r\nconst StyledTableCell = withStyles(theme => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    border: 0\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(theme => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  }\r\n}))(TableRow);\r\n\r\nfunction createData(\r\n  name,\r\n  abbreviation,\r\n  description,\r\n  settings,\r\n  isOpen,\r\n  toggleExpand,\r\n  selected,\r\n  toggleSelected\r\n) {\r\n  return {\r\n    name,\r\n    abbreviation,\r\n    description,\r\n    settings,\r\n    isOpen,\r\n    toggleExpand,\r\n    selected,\r\n    toggleSelected\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\"\r\n  },\r\n  table: {}\r\n}));\r\n\r\nconst OrderTools = props => {\r\n  const classes = useStyles();\r\n\r\n  const [stopLoss, toggleStopLoss] = useState(false);\r\n  const [tickOffset, toggleTickOffset] = useState(false);\r\n  const [back, toggleBack] = useState(false);\r\n  const [lay, toggleLay] = useState(false);\r\n  const [fillOrKill, toggleFillOrKill] = useState(false);\r\n  const [stopEntry, toggleStopEntry] = useState(false);\r\n\r\n  const rows = [\r\n    createData(\r\n      \"Stop Loss\",\r\n      \"SL\",\r\n      props.stopLossText,\r\n      <StopLoss />,\r\n      stopLoss,\r\n      toggleStopLoss,\r\n      props.stopLossSelected,\r\n      props.onStopLossSelection\r\n    ),\r\n    createData(\r\n      \"Tick Offset\",\r\n      \"TO\",\r\n      props.tickOffsetText,\r\n      <TickOffset />,\r\n      tickOffset,\r\n      toggleTickOffset,\r\n      props.tickOffsetSelected,\r\n      props.onTickOffsetSelection\r\n    ),\r\n    createData(\r\n      \"Back\",\r\n      \"B\",\r\n      props.backText,\r\n      <Back />,\r\n      back,\r\n      toggleBack,\r\n      props.backSelected,\r\n      props.onBackSelection\r\n    ),\r\n    createData(\r\n      \"Lay\",\r\n      \"L\",\r\n      props.layText,\r\n      <Lay />,\r\n      lay,\r\n      toggleLay,\r\n      props.laySelected,\r\n      props.onLaySelection\r\n    ),\r\n    createData(\r\n      \"Fill or Kill\",\r\n      \"FOK\",\r\n      props.fillKillText,\r\n      <FillOrKill />,\r\n      fillOrKill,\r\n      toggleFillOrKill,\r\n      props.setFillOrKillSelected,\r\n      props.onFillOrKillSelection\r\n    ),\r\n    createData(\r\n      \"Stop Entry\",\r\n      \"SE\",\r\n      \"\",\r\n      <StopEntry />,\r\n      stopEntry,\r\n      toggleStopEntry,\r\n      props.setStopEntrySelected,\r\n      props.onStopEntrySelection\r\n    )\r\n  ];\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={`${classes.table} order-settings-tbl`}>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <>\r\n              <StyledTableRow key={row.name}>\r\n                <StyledTableCell scope=\"row\" colSpan={2}>\r\n                  <button\r\n                    className={\"order-btn\"}\r\n                    onClick={e => row.toggleExpand(!row.isOpen)}\r\n                  >\r\n                    <div className={\"box\"}>\r\n                      <img\r\n                        alt={\"Add\"}\r\n                        src={\r\n                          window.location.origin +\r\n                          \"/icons/add-button-inside-black-circle.png\"\r\n                        }\r\n                      />\r\n                      <span>{row.name}</span>\r\n                    </div>\r\n                  </button>\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"left\" colSpan={3}>\r\n                  {row.description}\r\n                </StyledTableCell>\r\n                <StyledTableCell padding=\"checkbox\" colSpan={1}>\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    checked={row.selected}\r\n                    onChange={e => {\r\n                      row.toggleSelected();\r\n                    }}\r\n                    // inputProps={{ 'aria-labelledby': labelId }}\r\n                  />\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n\r\n              <StyledTableRow\r\n                key={row.abbreviation}\r\n                className={\"order-editable\"}\r\n              >\r\n                <Collapse hidden={!row.isOpen} in={row.isOpen}>\r\n                  <StyledTableCell colSpan={6}>{row.settings}</StyledTableCell>\r\n                </Collapse>\r\n              </StyledTableRow>\r\n            </>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    // Stop loss\r\n    stopLossText: state.stopLoss.text,\r\n    stopLossSelected: state.stopLoss.selected,\r\n    // Tick Offset\r\n    tickOffsetText: state.tickOffset.text,\r\n    tickOffsetSelected: state.tickOffset.selected,\r\n    // Back\r\n    backText: state.back.text,\r\n    backSelected: state.back.selected,\r\n    // Lay\r\n    layText: state.lay.text,\r\n    laySelected: state.lay.selected,\r\n    // Fill or Kill\r\n    fillKillText: state.fillOrKill.text,\r\n    fillKillSelected: state.fillOrKill.selected,\r\n    // Stop Entry\r\n    stopEntrySelected: state.stopEntry.selected\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onStopEntrySelection: selection => dispatch(setStopEntrySelected(null)),\r\n    onStopLossSelection: selection => dispatch(setStopLossSelected(null)),\r\n    onTickOffsetSelection: selection => dispatch(setTickOffsetSelected(null)),\r\n    onBackSelection: selection => dispatch(setBackSelected(null)),\r\n    onLaySelection: selection => dispatch(setLaySelected(null)),\r\n    onFillOrKillSelection: selection => dispatch(setFillOrKillSelected(null))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(OrderTools);\r\n","export const combineUnmatchedOrders = (backList, layList, stopEntryList, tickOffsetList, stopLossList, unmatchedList) => {\r\n\r\n    let allOrders = {}; // selectionId: {rfs(parameter): [orders]}\r\n    allOrders = selectionKeyCombinations(backList, allOrders);\r\n    allOrders = selectionKeyCombinations(layList, allOrders);\r\n    allOrders = selectionKeyCombinations(stopEntryList, allOrders);\r\n    allOrders = nonSelectionKeyCombinations(tickOffsetList, allOrders);\r\n    allOrders = nonSelectionKeyCombinations(stopLossList, allOrders);\r\n    allOrders = nonSelectionKeyCombinations(unmatchedList, allOrders);\r\n    \r\n    return allOrders;\r\n}\r\n\r\n// the ones with {selectionId(parameter): [orders]}\r\nconst selectionKeyCombinations = (list, allOrders) => {\r\n    const newAllOrders = Object.assign({}, allOrders)\r\n    Object.keys(list).map(selectionId => {\r\n        const objectsToAdd = {};\r\n        \r\n        list[selectionId].map(order => {\r\n            objectsToAdd[order.rfs] = objectsToAdd[order.rfs] == undefined ? [order] : objectsToAdd[order.rfs].concat(order);\r\n        })\r\n\r\n        newAllOrders[selectionId] = {...allOrders[selectionId], ...objectsToAdd}\r\n    })\r\n\r\n    return newAllOrders;\r\n}\r\n\r\nconst nonSelectionKeyCombinations = (list, allOrders) => {\r\n    const newAllOrders = Object.assign({}, allOrders)\r\n    Object.values(list).map(order => {\r\n        // find selection Id\r\n        const selectionInAllOrders = allOrders[order.selectionId] === undefined ? {} : allOrders[order.selectionId];\r\n    \r\n        // find and add to rfs \r\n        if (selectionInAllOrders[order.rfs] === undefined) {\r\n          selectionInAllOrders[order.rfs] = [order]\r\n        } else {\r\n          selectionInAllOrders[order.rfs] = selectionInAllOrders[order.rfs].concat(order)\r\n        }\r\n        \r\n        newAllOrders[order.selectionId] = selectionInAllOrders\r\n      })\r\n    return newAllOrders\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateOrders, cancelOrder } from \"../../../actions/order\";\r\nimport { combineUnmatchedOrders } from '../../../utils/combineUnmatchedOrders'\r\nimport { calcBackProfit } from \"../../../utils/PriceCalculator\";\r\nimport { updateStopLossList } from \"../../../actions/stopLoss\";\r\nimport { updateTickOffsetList } from \"../../../actions/tickOffset\";\r\nimport { updateStopEntryList } from \"../../../actions/stopEntry\";\r\nimport { updateLayList } from \"../../../actions/lay\";\r\nimport { updateBackList } from \"../../../actions/back\";\r\nimport { updateFillOrKillList } from \"../../../actions/fillOrKill\";\r\nimport { formatPrice } from \"../../../utils/ladder/CreateFullLadder\";\r\n\r\nconst UnmatchedBets = props => {\r\n\r\n  const allOrders = combineUnmatchedOrders(props.backList, props.layList, props.stopEntryList, props.tickOffsetList, props.stopLossList, props.bets.unmatched);\r\n  const selections = Object.keys(allOrders);\r\n\r\n  const cancelOrder = order => e => {\r\n    let ordersToRemove = [];\r\n    // figure out which strategy it's using and make a new array without it\r\n    switch (order.strategy) {\r\n      case \"Back\":\r\n        const newBackList = Object.assign({}, props.backList);\r\n        newBackList[order.selectionId] = newBackList[order.selectionId].filter(item => item.rfs !== order.rfs)\r\n        props.onChangeBackList(newBackList);\r\n        break;\r\n      case \"Lay\":\r\n        const newLayList = Object.assign({}, props.layList);\r\n        newLayList[order.selectionId] = newLayList[order.selectionId].filter(item => item.rfs !== order.rfs)\r\n        props.onChangeLayList(newLayList);\r\n        break;\r\n      case \"Stop Entry\":\r\n        const newStopEntryList = Object.assign({}, props.stopEntryList);\r\n        newStopEntryList[order.selectionId] = newStopEntryList[order.selectionId].filter(item => item.rfs !== order.rfs)\r\n        props.onChangeStopEntryList(newStopEntryList);\r\n        break;\r\n      case \"Tick Offset\":\r\n        const newTickOffsetList = Object.assign({}, props.tickOffsetList);\r\n        delete newTickOffsetList[order.rfs]\r\n        props.onChangeTickOffsetList(newTickOffsetList)\r\n        break;\r\n      case \"Stop Loss\":\r\n        const newStopLossList = Object.assign({}, props.stopLossList);\r\n        delete newStopLossList[order.selectionId];\r\n        props.onChangeStopLossList(newStopLossList)\r\n        break;\r\n      case \"None\":\r\n        // if we can find something that fits with the fill or kill, we can remove that too (this is because we don't make another row for fill or kill)\r\n        if (props.fillOrKillList[order.betId] !== undefined) {\r\n          const newFillOrKill = Object.assign({}, props.fillOrKillList)\r\n          ordersToRemove = ordersToRemove.concat(newFillOrKill[order.betId])\r\n          delete newFillOrKill[order.betId];\r\n          props.onChangeFillOrKillList(newFillOrKill)\r\n\r\n        }\r\n\r\n        // cancel order\r\n        props.onCancelOrder({\r\n          marketId: order.marketId,\r\n          betId: order.betId,\r\n          sizeReduction: null,\r\n          matchedBets: props.bets.matched,\r\n          unmatchedBets: props.bets.unmatched\r\n        });\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    ordersToRemove = ordersToRemove.concat(order);\r\n\r\n    // delete from database\r\n    try {\r\n      fetch('/api/remove-orders', {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\",\r\n        body: JSON.stringify(ordersToRemove)\r\n      })\r\n    } catch (e) {\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"menu-bets\">\r\n        <tbody>\r\n          <tr className=\"menu-bets-heading\">\r\n            <button\r\n              style={{\r\n                height: \"22px\",\r\n                width: \"auto\",\r\n                backgroundColor: \"transparent\",\r\n                visibility: \"collapse\",\r\n                pointerEvents: \"none\"\r\n              }}\r\n            />\r\n            <td>Odds</td>\r\n            <td>Stake</td>\r\n            <td>P/L</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"menu-bets-event\" colSpan={4}>\r\n              {props.market.competition !== undefined ? props.market.marketName + \" \" + props.market.competition.name : null}\r\n            </td>\r\n          </tr>\r\n          {props.marketOpen\r\n            ? selections.map(selection => {\r\n\r\n              const selectionObject = props.market.runners.find(runner => runner.selectionId == selection);\r\n              if (selectionObject === undefined) return null;\r\n\r\n              return (\r\n                <React.Fragment>\r\n                  <tr className=\"menu-bets-selection\" colSpan={4}>\r\n                    <td>{selectionObject.runnerName}</td>\r\n                  </tr>\r\n                  {\r\n                    Object.values(allOrders[selection]).map(rfs =>\r\n                      rfs.map(order => {\r\n                        const remainingTime = order.strategy == \"Back\" || order.strategy == \"Lay\" ? (new Date(props.market.marketStartTime).valueOf() / 1000) - (new Date().valueOf() / 1000) : 0\r\n                        const remainingMinutes = order.strategy == \"Back\" || order.strategy == \"Lay\" ? Math.floor((remainingTime - order.timeOffset) / 60) : 0\r\n                        const remainingSeconds = order.strategy == \"Back\" || order.strategy == \"Lay\" ? Math.floor((remainingTime - order.timeOffset) % 60) : 0\r\n\r\n                        let suffix = \"\";\r\n                        if (order.trailing && order.hedged) suffix = \"th\"\r\n                        else if (!order.trailing && order.hedged) suffix = \"h\"\r\n                        else if (order.trailing && !order.hedged) suffix = \"t\"\r\n\r\n                        const PL =\r\n                          (order.strategy == \"Stop Loss\" ? \"SL \" :\r\n                            order.strategy == \"Tick Offset\" ? \"T.O.\" :\r\n                              order.strategy == \"Back\" || order.strategy == \"Lay\" ? remainingMinutes + \":\" + remainingSeconds + 's' + (order.executionTime == \"Before\" ? \"-\" : \"+\") :\r\n                                order.strategy == \"Stop Entry\" ? order.stopEntryCondition + formatPrice(order.targetLTP) + \"SE\" :\r\n                                  calcBackProfit(order.size, order.price, order.side === \"BACK\" ? 0 : 1)) + suffix\r\n\r\n                        return (\r\n                          <tr\r\n                            id=\"menu-unmatched-bet\"\r\n                            style={{\r\n                              backgroundColor: order.side === \"BACK\" ? \"#FAC9D7\" : \"#A6D8FF\"\r\n                            }}\r\n                          >\r\n\r\n                            <button\r\n                              style={{ height: \"22px\", width: \"auto\" }}\r\n                              onClick={cancelOrder(order)}\r\n                            >\r\n                            </button>\r\n                            <td>{(parseFloat(order.price).toFixed(2))}</td>\r\n                            <td>{order.size}</td>\r\n                            <td\r\n                              id=\"pl-style\"\r\n                              style={{\r\n                                color:\r\n                                  PL === \"0.00\"\r\n                                    ? \"black\"\r\n                                    : PL > 0\r\n                                      ? \"green\"\r\n                                      : \"red\"\r\n                              }}\r\n                            >\r\n                              {PL}\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    )\r\n                  }\r\n                </React.Fragment>\r\n              )\r\n            })\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    marketOpen: state.market.marketOpen,\r\n    market: state.market.currentMarket,\r\n    stopLossList: state.stopLoss.list,\r\n    tickOffsetList: state.tickOffset.list,\r\n    stopEntryList: state.stopEntry.list,\r\n    layList: state.lay.list,\r\n    backList: state.back.list,\r\n    fillOrKillList: state.fillOrKill.list,\r\n    bets: state.order.bets\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChangeOrders: orders => dispatch(updateOrders(orders)),\r\n    onChangeStopLossList: list => dispatch(updateStopLossList(list)),\r\n    onChangeTickOffsetList: list => dispatch(updateTickOffsetList(list)),\r\n    onChangeStopEntryList: list => dispatch(updateStopEntryList(list)),\r\n    onChangeLayList: list => dispatch(updateLayList(list)),\r\n    onChangeBackList: list => dispatch(updateBackList(list)),\r\n    onChangeFillOrKillList: list => dispatch(updateFillOrKillList(list)),\r\n    onCancelOrder: order => dispatch(cancelOrder(order)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UnmatchedBets);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { calcBackProfit } from \"../../../utils/PriceCalculator\";\r\n\r\nconst MatchedBets = props => {\r\n\r\n  const reducer = (acc, cur) => acc.indexOf(cur.selectionId) === -1 ? acc.concat(cur.selectionId) : acc; \r\n  const selections = Object.values(props.bets.matched).reduce(reducer, [])\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"menu-bets\">\r\n        <tbody>\r\n          <tr className=\"menu-bets-heading\">\r\n            <td>\r\n              <button\r\n                style={{\r\n                  height: \"22px\",\r\n                  width: \"auto\",\r\n                  backgroundColor: \"transparent\",\r\n                  visibility: \"collapse\",\r\n                  pointerEvents: \"none\"\r\n                }}\r\n              />\r\n            </td>\r\n            <td>Odds</td>\r\n            <td>Stake</td>\r\n            <td>P/L</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"menu-bets-event\" colSpan={4}>\r\n              {props.market.competition !== undefined ? props.market.marketName + \" \" + props.market.competition.name : null}\r\n            </td>\r\n          </tr>\r\n          {props.marketOpen\r\n            ? selections.map(selection => {\r\n              const selectionObject = props.market.runners.find(runner => runner.selectionId === selection);\r\n              if (selectionObject === undefined) return null;\r\n\r\n              const filteredOrders = Object.values(props.bets.matched).filter(order => order.selectionId === selection);\r\n              return (\r\n            \r\n                <React.Fragment>\r\n                  <tr className=\"menu-bets-selection\" colSpan={4}>\r\n                    <td>{selectionObject.runnerName}</td>\r\n                  </tr>\r\n                  {\r\n                    filteredOrders.map(order => { \r\n                        const PL = calcBackProfit(order.size, order.price, order.side === \"BACK\" ? 0 : 1)\r\n                        return (\r\n                          <React.Fragment>\r\n                              <tr\r\n                              id=\"menu-matched-bet\"\r\n                              style={{\r\n                                backgroundColor: order.side === \"BACK\" ? \"#A6D8FF\" : \"#FAC9D7\"\r\n                              }}\r\n                            >\r\n                              <td>\r\n                                <button style={{ height: \"22px\", width: \"auto\", visibility: 'collapse' }}>\r\n                                  \r\n                                </button>\r\n                              </td>\r\n\r\n                              <td>{(parseFloat(order.price).toFixed(2))}</td>\r\n                              <td>{order.size}</td>\r\n                              <td\r\n                                id=\"pl-style\"\r\n                                style={{\r\n                                  color:\r\n                                  PL === \"0.00\"\r\n                                      ? \"black\"\r\n                                      : PL > 0\r\n                                      ? \"green\"\r\n                                      : \"red\"\r\n                                }}\r\n                              >\r\n                                {PL}\r\n                              </td>\r\n                            </tr>\r\n    \r\n                          </React.Fragment>  \r\n                        )\r\n                      }\r\n                    )\r\n                  }\r\n                </React.Fragment>\r\n\r\n              )\r\n            })\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    marketOpen: state.market.marketOpen,\r\n    market: state.market.currentMarket,\r\n    bets: state.order.bets\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MatchedBets);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { openGraph } from \"../../../actions/graph\";\r\n\r\nconst Graph = props => {\r\n  const [graph, setGraph] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (props.marketOpen && props.selection) {\r\n      const marketId = props.market.marketId.slice(\r\n        2,\r\n        props.market.marketId.length\r\n      );\r\n      const URI = `https://sportsiteexweb.betfair.com/betting/LoadRunnerInfoChartAction.do?marketId=${marketId}&selectionId=${props.selection.selectionId}&handicap=0`;\r\n      setGraph(URI);\r\n    }\r\n  }, [props.selection, props.market.marketId, props.marketOpen]);\r\n\r\n  return (\r\n    <div id=\"menu-graph\">\r\n      {graph ? <img alt={\"Chart\"} src={graph} onDoubleClick={e => {\r\n        props.onOpenGraph();\r\n      }} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    market: state.market.currentMarket,\r\n    marketOpen: state.market.marketOpen,\r\n    selection: state.market.runnerSelection\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOpenGraph: () => dispatch(openGraph())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);\r\n","export const toggleTransparency = isSelected => {\r\n  return {\r\n    type: \"TOGGLE_GRAPH_TRANSPARENCY\",\r\n    payload: isSelected\r\n  };\r\n};\r\n\r\nexport const openGraph = () => {\r\n  return {\r\n    type: \"OPEN_GRAPH\",\r\n    payload: null\r\n  };\r\n};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MarketInfo = props => {\r\n\r\n  const createData = (name, description) => {\r\n    return { name, description };\r\n  };\r\n\r\n  const racerDetails = () => {\r\n    const rows = [\r\n      createData(\"Selection\", props.selection.metadata.runnerId),\r\n      createData(\"Silk\", <img src={`https://content-cache.cdnbf.net/feeds_images/Horses/SilkColours/${props.selection.metadata.COLOURS_FILENAME}`} alt=\"\" />),\r\n      createData(\"Trainer Name\", props.selection.metadata.TRAINER_NAME),\r\n      createData(\"Age & Weight\", `${props.selection.metadata.AGE} years / ${props.selection.metadata.WEIGHT_VALUE} ${props.selection.metadata.WEIGHT_UNITS}`),\r\n      createData(\"Form\", props.selection.metadata.FORM),\r\n      createData(\"Days Since Last Run\", props.selection.metadata.DAYS_SINCE_LAST_RUN),\r\n      createData(\"Jockey's Claim\", props.selection.metadata.JOCKEY_CLAIM),\r\n      createData(\"Wearing Equipment\", props.selection.metadata.COLOURS_DESCRIPTION),\r\n      createData(\"Saddle Cloth Number\", props.selection.metadata.CLOTH_NUMBER),\r\n      createData(\"Stall Draw\", props.selection.metadata.STALL_DRAW),\r\n      createData(\"Owner Name\", props.selection.metadata.OWNER_NAME),\r\n      createData(\"Jockey Name\", props.selection.metadata.JOCKEY_NAME),\r\n      createData(\"Colour of Horse\", props.selection.metadata.COLOUR_TYPE),\r\n      createData(\"Gender\", props.selection.metadata.SEX_TYPE),\r\n      createData(\"Forecast Price\", `${props.selection.metadata.FORECASTPRICE_NUMERATOR}/${props.selection.metadata.FORECASTPRICE_DENOMINATOR}`),\r\n      createData(\"Official Rating\", props.selection.metadata.OFFICIAL_RATING),\r\n    ]\r\n    return rows;\r\n  };\r\n\r\n  const renderRacerDetails = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <tr>\r\n          <td>{`${props.selection.metadata.CLOTH_NUMBER}.${props.selection.runnerName}`}</td>\r\n        </tr>\r\n        {racerDetails().map((row => {\r\n          return (\r\n            <>\r\n              <tr>\r\n                <td>{row.name}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>{row.description}</td>\r\n              </tr>\r\n            </>\r\n          );\r\n        }))}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <table id=\"menu-market-info\">\r\n      <tbody>\r\n        {props.marketOpen &&\r\n          props.market.eventType &&\r\n          props.market.eventType.id === \"7\"\r\n          ? renderRacerDetails()\r\n          : null}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    market: state.market.currentMarket,\r\n    marketOpen: state.market.marketOpen,\r\n    selection: state.market.runnerSelection\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MarketInfo);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport parse from 'html-react-parser';\r\n\r\nconst Rules = props => {\r\n\r\n    const [rules, setRules] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (props.market.description) {\r\n            setRules(props.market.description.rules);\r\n        }\r\n    }, [props.market]);\r\n\r\n    return (\r\n        <div>\r\n            {rules ? parse(rules.toString()) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      market: state.market.currentMarket,\r\n      marketOpen: state.market.marketOpen,\r\n      selection: state.market.runnerSelection\r\n    };\r\n  };\r\n  \r\n  export default connect(mapStateToProps)(Rules);\r\n  ","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Ladders from \"./Ladders\";\r\nimport Tools from \"./OrderTools\";\r\nimport UnmatchedBets from \"./UnmatchedBets\";\r\nimport MatchedBets from \"./MatchedBets\";\r\nimport Graph from \"./Graphs\";\r\nimport MarketInfo from \"./MarketInfo\";\r\nimport Rules from \"./Rules\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    background: \"#303030\",\r\n    color: \"orange\",\r\n    fontWeight: \"900\",\r\n    border: \"2px solid #fff\",\r\n    zIndex: \"1\"\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  }\r\n}));\r\n\r\nconst Market = props => {\r\n  const classes = useStyles();\r\n\r\n  const createTitle = (name, position) => {\r\n    return (\r\n      <AppBar className={classes.appBar} position={position || \"absolute\"}>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {name}\r\n        </Typography>\r\n      </AppBar>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Ladders />\r\n\r\n      {props.tools.visible ? (\r\n        <React.Fragment>\r\n          {createTitle(\"Tools\", \"static\")}\r\n          <Tools />\r\n        </React.Fragment>\r\n      ) : null}\r\n\r\n      {props.unmatchedBets.visible ? (\r\n        <React.Fragment>\r\n          {createTitle(\"Unmatched Bets\", \"static\")}\r\n          <UnmatchedBets />\r\n        </React.Fragment>\r\n      ) : null}\r\n\r\n      {props.matchedBets.visible ? (\r\n        <React.Fragment>\r\n          {createTitle(\"Matched Bets\", \"static\")}\r\n          <MatchedBets />\r\n        </React.Fragment>\r\n      ) : null}\r\n\r\n      {props.graphs.visible ? (\r\n        <React.Fragment>\r\n          {createTitle(\"Graphs\", \"static\")}\r\n          <Graph />\r\n        </React.Fragment>\r\n      ) : null}\r\n\r\n      {props.marketInfo.visible ? (\r\n        <React.Fragment>\r\n          {createTitle(\"Market Information\", \"static\")}\r\n          <MarketInfo />\r\n        </React.Fragment>\r\n      ) : null}\r\n\r\n      {props.rules.visible ? (\r\n        <React.Fragment>\r\n          {createTitle(\"Rules\", \"static\")}\r\n          <Rules />\r\n        </React.Fragment>\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tools: state.settings.tools,\r\n    unmatchedBets: state.settings.unmatchedBets,\r\n    matchedBets: state.settings.matchedBets,\r\n    profitAndLoss: state.settings.profitAndLoss,\r\n    graphs: state.settings.graphs,\r\n    marketInfo: state.settings.marketInfo,\r\n    rules: state.settings.rules\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Market);\r\n","import React from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport default ({ receiveTrainingBalance, styles }) => (\r\n    <div>\r\n        <AppBar className={styles.appBar} position=\"static\">\r\n            <Typography variant=\"h6\" className={styles.title}>\r\n                Training Bank\r\n    </Typography>\r\n        </AppBar>\r\n        <TextField\r\n            id=\"standard-name\"\r\n            label=\"Bank Balance\"\r\n            margin=\"normal\"\r\n            onChange={val => receiveTrainingBalance(val)}\r\n        />\r\n    </div>\r\n\r\n);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../actions/settings';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TrainingBank from \"./TrainingBank\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tappBar: {\r\n\t\tbackground: \"#303030\",\r\n\t\tcolor: \"orange\",\r\n\t\tfontWeight: \"900\",\r\n\t\tborder: \"2px solid #fff\"\r\n\t},\r\n\ttitle: {\r\n\t\ttextAlign: \"center\",\r\n\t\tfontWeight: \"bold\"\r\n\t},\r\n\tgroup: {\r\n\t\tmargin: theme.spacing(1, 0)\r\n\t},\r\n\ttextField: {\r\n\t\twidth: 50,\r\n\t\tmargin: theme.spacing(2),\r\n\t},\r\n}));\r\n\r\nconst Settings = props => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst saveSetting = setting => {\r\n\t\tfetch(`/api/save-user-settings`, {\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: JSON.stringify(setting)\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<TrainingBank\r\n\t\t\t\treceiveTrainingBalance={balance => props.onReceiveTrainingBalance(balance)}\r\n\t\t\t\tstyles={classes}\r\n\t\t\t/>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tSound\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.sounds}\r\n\t\t\t\t\t\tonChange={val => props.onToggleSounds(!props.sounds)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Sounds\"\r\n\t\t\t/>\r\n\t\t\t<button className={\"save-btn\"} onClick={e => saveSetting({ \"settings.sounds\": props.sounds })}><img alt={\"Save\"} src={window.location.origin + '/icons/save.png'} /></button>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tTools\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.tools.visible}\r\n\t\t\t\t\t\tonChange={val => props.onToggleTools({ visible: !props.tools.visible, open: props.tools.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Show Panel\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.tools\": { visible: props.tools.visible, open: props.tools.open }\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.tools.open}\r\n\t\t\t\t\t\tonChange={val => props.onToggleTools({ visible: props.tools.visible, open: !props.tools.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Panel Open\"\r\n\t\t\t/>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tUnmatched Bets\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.unmatchedBets.visible}\r\n\t\t\t\t\t\tonChange={val => props.onToggleUnmatchedBets({ visible: !props.unmatchedBets.visible, open: props.unmatchedBets.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Show Panel\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.unmatchedBets\": { visible: props.unmatchedBets.visible, open: props.unmatchedBets.open }\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.unmatchedBets.open}\r\n\t\t\t\t\t\tonChange={val => props.onToggleUnmatchedBets({ visible: props.unmatchedBets.visible, open: !props.unmatchedBets.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Panel Open\"\r\n\t\t\t/>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tMatched Bets\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.matchedBets.visible}\r\n\t\t\t\t\t\tonChange={val => props.onToggleMatchedBets({ visible: !props.matchedBets.visible, open: props.matchedBets.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Show Panel\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.matchedBets\": { visible: props.matchedBets.visible, open: props.matchedBets.open }\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.matchedBets.open}\r\n\t\t\t\t\t\tonChange={val => props.onToggleMatchedBets({ visible: props.matchedBets.visible, open: !props.matchedBets.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Panel Open\"\r\n\t\t\t/>\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tGraphs\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.graphs.visible}\r\n\t\t\t\t\t\tonChange={val => props.onToggleGraph({ visible: !props.graphs.visible, open: props.graphs.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Show Panel\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.graphs\": { visible: props.graphs.visible, open: props.graphs.open }\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.graphs.open}\r\n\t\t\t\t\t\tonChange={val => props.onToggleGraph({ visible: props.graphs.visible, open: !props.graphs.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Panel Open\"\r\n\t\t\t/>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tMarket Information\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.marketInfo.visible}\r\n\t\t\t\t\t\tonChange={val => props.onToggleMarketInformation({ visible: !props.marketInfo.visible, open: props.marketInfo.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Show Panel\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.marketInfo\": { visible: props.marketInfo.visible, open: props.marketInfo.open }\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.marketInfo.open}\r\n\t\t\t\t\t\tonChange={val => props.onToggleMarketInformation({ visible: props.marketInfo.visible, open: !props.marketInfo.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Panel Open\"\r\n\t\t\t/>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tWin Markets\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.winMarketsOnly}\r\n\t\t\t\t\t\tonChange={val => props.onUpdateWinMarketsOnly(!props.winMarketsOnly)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Win Markets Only\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.winMarketsOnly\": props.winMarketsOnly\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tRules\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.rules.visible}\r\n\t\t\t\t\t\tonChange={val => props.onToggleRules({ visible: !props.rules.visible, open: props.rules.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Show Panel\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.rules\": { visible: props.rules.visible, open: props.rules.open }\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.rules.open}\r\n\t\t\t\t\t\tonChange={val => props.onToggleRules({ visible: props.rules.visible, open: !props.rules.open })}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Panel Open\"\r\n\t\t\t/>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tTraining Ladder Auto-Center\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tvalue=\"checkedB\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tchecked={props.trainingLadderAutoCenter}\r\n\t\t\t\t\t\tonChange={val => props.onToggleTrainingLadderAutoCenter(!props.trainingLadderAutoCenter)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel=\"Default to ON\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.trainingLadderAutoCenter\": props.trainingLadderAutoCenter\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tLadder Unmatched Column\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({\r\n\t\t\t\t\t\"settings.ladderUnmatched\": props.ladderUnmatched\r\n\t\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\t\t\t<RadioGroup\r\n\t\t\t\taria-label=\"gender\"\r\n\t\t\t\tname=\"gender2\"\r\n\t\t\t\tclassName={classes.group}\r\n\t\t\t\tvalue={props.ladderUnmatched}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tprops.onToggleLadderUnmatched(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tvalue=\"blank\"\r\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\tlabel=\"Unmatched Bets Only\"\r\n\t\t\t\t\tlabelPlacement=\"end\"\r\n\t\t\t\t/>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tvalue=\"pl\"\r\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\tlabel=\"Unmatched Bets + P/L\"\r\n\t\t\t\t\tlabelPlacement=\"end\"\r\n\t\t\t\t/>\r\n\t\t\t\t<FormControlLabel\r\n\t\t\t\t\tvalue=\"hedged\"\r\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\r\n\t\t\t\t\tlabel=\"Unmatched Bets + Hedge\"\r\n\t\t\t\t\tlabelPlacement=\"end\"\r\n\t\t\t\t/>\r\n\t\t\t</RadioGroup>\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tStake Button\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"One\"\r\n\t\t\t\tvalue={`${props.stakeBtns[0]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateStakeBtn({ id: 0, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Two\"\r\n\t\t\t\tvalue={`${props.stakeBtns[1]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateStakeBtn({ id: 1, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Three\"\r\n\t\t\t\tvalue={`${props.stakeBtns[2]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateStakeBtn({ id: 2, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Four\"\r\n\t\t\t\tvalue={`${props.stakeBtns[3]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateStakeBtn({ id: 3, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Five\"\r\n\t\t\t\tvalue={`${props.stakeBtns[4]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateStakeBtn({ id: 4, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Six\"\r\n\t\t\t\tvalue={`${props.stakeBtns[5]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateStakeBtn({ id: 5, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Seven\"\r\n\t\t\t\tvalue={`${props.stakeBtns[6]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateStakeBtn({ id: 6, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({ \"settings.stakeBtns\": props.stakeBtns })}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\r\n\r\n\r\n\t\t\t<AppBar className={classes.appBar} position=\"static\">\r\n\t\t\t\t<Typography variant=\"h6\" className={classes.title}>\r\n\t\t\t\t\tLiability Button\r\n\t\t\t\t</Typography>\r\n\t\t\t</AppBar>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"One\"\r\n\t\t\t\tvalue={`${props.layBtns[0]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateLayBtn({ id: 0, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Two\"\r\n\t\t\t\tvalue={`${props.layBtns[1]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateLayBtn({ id: 1, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Three\"\r\n\t\t\t\tvalue={`${props.layBtns[2]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateLayBtn({ id: 2, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Four\"\r\n\t\t\t\tvalue={`${props.layBtns[3]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateLayBtn({ id: 3, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Five\"\r\n\t\t\t\tvalue={`${props.layBtns[4]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateLayBtn({ id: 4, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Six\"\r\n\t\t\t\tvalue={`${props.layBtns[5]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateLayBtn({ id: 5, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"standard-number\"\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Seven\"\r\n\t\t\t\tvalue={`${props.layBtns[6]}`}\r\n\t\t\t\tinputProps={{ min: \"1\" }}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tlet val = parseInt(e.target.value);\r\n\t\t\t\t\tif (val && typeof val === 'number') {\r\n\t\t\t\t\t\tprops.onUpdateLayBtn({ id: 6, value: e.target.value })\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\"save-btn\"}\r\n\t\t\t\tonClick={e => saveSetting({ \"settings.layBtns\": props.layBtns })}\r\n\t\t\t>\r\n\t\t\t\t<img alt={\"Save\"} src={window.location.origin + \"/icons/save.png\"} />\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\ttrainingBalance: state.settings.trainingBalance,\r\n\t\tsounds: state.settings.sounds,\r\n\t\ttools: state.settings.tools,\r\n\t\tunmatchedBets: state.settings.unmatchedBets,\r\n\t\tmatchedBets: state.settings.matchedBets,\r\n\t\tgraphs: state.settings.graphs,\r\n\t\tmarketInfo: state.settings.marketInfo,\r\n\t\twinMarketsOnly: state.settings.winMarketsOnly,\r\n\t\trules: state.settings.rules,\r\n\t\ttrainingLadderAutoCenter: state.settings.trainingLadderAutoCenter,\r\n\t\tladderUnmatched: state.settings.ladderUnmatched,\r\n\t\tstakeBtns: state.settings.stakeBtns,\r\n\t\tlayBtns: state.settings.layBtns\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonReceiveTrainingBalance: balance => dispatch(actions.setTrainingBalance(balance)),\r\n\t\tonToggleSounds: isSelected => dispatch(actions.toggleSound(isSelected)),\r\n\t\tonToggleTools: settings => dispatch(actions.toggleTools(settings)),\r\n\t\tonToggleUnmatchedBets: settings => dispatch(actions.toggleUnmatchedBets(settings)),\r\n\t\tonToggleMatchedBets: settings => dispatch(actions.toggleMatchedBets(settings)),\r\n\t\tonToggleGraph: settings => dispatch(actions.toggleGraph(settings)),\r\n\t\tonToggleMarketInformation: settings => dispatch(actions.toggleMarketInformation(settings)),\r\n\t\tonUpdateWinMarketsOnly: isChecked => dispatch(actions.setWinMarketsOnly(isChecked)),\r\n\t\tonToggleRules: settings => dispatch(actions.toggleRules(settings)),\r\n\t\tonToggleTrainingLadderAutoCenter: settings => dispatch(actions.toggleTrainingLadderAutoCenter(settings)),\r\n\t\tonToggleLadderUnmatched: unmatchedColumn => dispatch(actions.toggleLadderUnmatched(unmatchedColumn)),\r\n\t\tonUpdateStakeBtn: data => dispatch(actions.updateStakeBtn(data)),\r\n\t\tonUpdateLayBtn: data => dispatch(actions.updateLayBtn(data))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Account from \"./Account\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Event from \"./Event\";\r\nimport Menu from \"./Menu/\";\r\nimport Market from \"./Market/\";\r\nimport Settings from \"./Settings/\";\r\n\r\nconst BootstrapButton = withStyles({\r\n    root: {\r\n      boxShadow: 'none',\r\n      textTransform: 'none',\r\n      fontSize: 16,\r\n      padding: '6px 12px',\r\n      border: '1px solid',\r\n      lineHeight: 1.5,\r\n      color: \"#fff\",\r\n      backgroundColor: '#232323',\r\n      borderColor: '#fff',\r\n      fontWeight: 'bold',\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:hover': {\r\n        backgroundColor: '#403E3E',\r\n        borderColor: '#0062cc',\r\n      },\r\n      '&:active': {\r\n        boxShadow: 'none',\r\n        backgroundColor: '#33AD33',\r\n        borderColor: '#005cbf',\r\n      },\r\n      '&:focus': {\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n      },\r\n    },\r\n  })(Button);\r\n  \r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: green,\r\n    },\r\n  });\r\n\r\nconst Sidebar = props => {\r\n\r\n    const [openTab, setOpenTab] = useState(2);\r\n    const activeStyle = \"#389C41\";\r\n\r\n    const createToggleButton = (name, tab) => {\r\n        return (\r\n          <ThemeProvider theme={theme}>\r\n            <BootstrapButton \r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={openTab === tab ? { background: activeStyle } : {}}\r\n              onClick={e => {\r\n                setOpenTab(tab);\r\n              }}\r\n              className={\"toggle-button\"}>\r\n              {name}\r\n            </BootstrapButton>\r\n          </ThemeProvider>\r\n        );\r\n      };\r\n\r\n      const renderActiveTab = () => {\r\n        switch (openTab) {\r\n          case 1: return <Menu/>;\r\n          case 2: return <Market/>\r\n          case 3: return <Settings/>\r\n          default: return null;\r\n        }\r\n      };\r\n\r\n    return (\r\n        <Drawer\r\n            className=\"sidebar\"\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: \"sidebar\"\r\n            }}\r\n            anchor=\"left\">\r\n        <div className={\"sticky\"} style={{zIndex: \"2\"}}>\r\n            {props.fullscreen ? null : <Account/>}\r\n            <Toolbar/>\r\n            <Event/>\r\n            <div id=\"toggle-buttons\">\r\n                {createToggleButton(\"Menu\", 1)}\r\n                {createToggleButton(\"Market\", 2)}\r\n                {createToggleButton(\"Settings\", 3)}\r\n             </div>\r\n        </div>\r\n        {renderActiveTab()}\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tview: state.settings.view,\r\n\t\tfullscreen: state.settings.fullscreen\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","import React from 'react';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport default SocketContext;","import React from \"react\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default ({ username, premiumMember, classes }) => (\r\n    <Grid container alignItems=\"center\">\r\n        <Grid item xs>\r\n            <Typography className={classes.title} gutterBottom variant=\"h4\">\r\n                Welcome to Trader Pro\r\n            </Typography>\r\n        </Grid>\r\n        <Grid item lg>\r\n            <Chip className={classes.username} color=\"primary\" label={`${username} | Support ID 24442`} />\r\n            <Chip className={classes.subscription} color=\"#F44336\" label={`Subscription: ${premiumMember ? \"Active\" : \"Expired\"}`} />\r\n        </Grid>\r\n    </Grid>\r\n);","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SocketContext from \"../../SocketContext\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Header from \"./Header\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  textMargin: {\r\n    marginLeft: \"10px\",\r\n    padding: \"10px\",\r\n  },\r\n  title: {\r\n    marginLeft: \"5px\",\r\n  },\r\n  username: {\r\n    marginLeft: \"10px\",\r\n    background: \"#000\",\r\n    color: \"#fff\",\r\n  },\r\n  subscription: props => ({\r\n    background: props.subscribed ? \"#4CAF50\" : \"#F44336\",\r\n    color: \"#000\",\r\n  }),\r\n  subheading: {\r\n    margin: \"10px 5px 10px 5px\",\r\n    padding: \"10px\",\r\n  },\r\n  premiumStatus: {\r\n    margin: \"10px 5px 10px 5px\",\r\n    fontWeight: \"bold\",\r\n    textDecoration: \"underline\",\r\n  },\r\n  divider: {\r\n    backgroundColor: '#000',\r\n  },\r\n}));\r\n\r\nconst HomeView = props => {\r\n\r\n  const [cookies] = useCookies(['username']);\r\n  const styleProps = { subscribed: props.premiumMember };\r\n  const [data, setData] = useState({});\r\n\r\n  const classes = useStyles(styleProps);\r\n\r\n  useEffect(() => {\r\n    props.premiumMember ? setData({\r\n      subscribed: \"Active\",\r\n      information: \" and you can now have full access to the Ladder View.\",\r\n      color: \"#4CAF50\"\r\n    })\r\n      : setData({\r\n        subscribed: \"Inactive\",\r\n        information: \" and you have restricted access to Trader Pro.\",\r\n        color: \"#F44336\"\r\n      })\r\n  }, [props.premiumMember]);\r\n\r\n\r\n  return (\r\n    <div id=\"home-view-container\" className={classes.root}>\r\n      <div className={classes.section2} id=\"home-view\">\r\n        <Header username={cookies.username} premiumMember={props.premiumMember} classes={classes} />\r\n        <Divider className={classes.divider} variant=\"middle\" />\r\n        <Grid container alignItems=\"center\">\r\n          <Typography className={classes.subheading} style={{ whiteSpace: 'pre-wrap' }} variant=\"h5\">\r\n            Trader Pro Membership is <span style={{ color: data.color }}>{data.subscribed}</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container alignItems=\"center\">\r\n          <Typography className={`${classes.premiumStatus} ${classes.textMargin}`} gutterBottom variant=\"h6\">\r\n            Your Trader Pro Membership is <span>{data.subscribed}</span>\r\n          </Typography>\r\n          <Typography variant=\"p\">{data.information}</Typography>\r\n        </Grid>\r\n        <Grid container alignItems=\"center\">\r\n          <Typography className={`${classes.textMargin}`} gutterBottom variant=\"p\">\r\n            Contact us on <a href={\"malito:joshbetting30@yahoo.com\"}>joshbetting30@yahoo.com</a> if you experience any issues when using Trader Pro.\r\n          </Typography>\r\n        </Grid>\r\n        <Divider className={classes.divider} variant=\"middle\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HomeViewWithSocket = props => (\r\n  <SocketContext.Consumer>\r\n    {socket => <HomeView {...props} socket={socket} />}\r\n  </SocketContext.Consumer>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    premiumMember: state.settings.premiumMember\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(HomeViewWithSocket);","import React from \"react\";\r\n\r\n\r\nexport default ({isReferenceSet, order, containerRef, isMoving, isLadderDown, setIsReferenceSet, runners, ladderOrderList, swapLadders, setIsMoving, setLadderDown, children}) => {\r\n\r\n    const onLoad = () => e => {\r\n        setIsReferenceSet(true);\r\n    };\r\n\r\n    const handleMouseMove = () => e => {\r\n        if (containerRef.current === null) return;\r\n        if (!isLadderDown) return;\r\n        moveLadder(e.movementX, e.clientX, isReferenceSet, containerRef, order, runners, ladderOrderList, swapLadders, setIsMoving);\r\n    };\r\n\r\n    const handleMouseUp= () => e => {\r\n        if (containerRef.current === null) return;\r\n        if (!isLadderDown) return;\r\n        setLadderDown(false);\r\n        returnToOrderedPos(containerRef, order, setIsMoving);\r\n    };\r\n\r\n    const handleMouseLeave = () => e => {\r\n        if (containerRef.current === null) return;\r\n        if (!isLadderDown) return;\r\n        setLadderDown(false);\r\n        returnToOrderedPos(containerRef, order, setIsMoving); \r\n    };\r\n\r\n    return (\r\n        <div \r\n            className=\"odds-table\" \r\n            style={{\r\n                left: isReferenceSet ? `${order * containerRef.current.clientWidth}px` : `0px`,\r\n                visibility: isReferenceSet ? 'visible' : 'collapse',\r\n                opacity: isMoving ? '0.7' : '1.0',\r\n                cursor: isLadderDown ? 'move' : 'default'\r\n            }} \r\n            ref = {containerRef}\r\n            onLoad={onLoad()}\r\n            onMouseMove = {handleMouseMove()}\r\n            onMouseUp={handleMouseUp()}\r\n            onMouseLeave = {handleMouseLeave()}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst returnToOrderedPos = (containerRef, order, setIsMoving) => {\r\n    containerRef.current.style.left = `${order * containerRef.current.clientWidth}px`\r\n    containerRef.current.style['z-index'] = 0;\r\n    setIsMoving(false);\r\n}\r\n\r\nconst moveLadder = (offsetPos, cursorPosition, isReferenceSet, containerRef, order, runners, ladderOrderList, swapLadders, setIsMoving) => {\r\n    if (!isReferenceSet) return\r\n    containerRef.current.style.left = `${parseInt(containerRef.current.style.left, 10) + offsetPos}px`\r\n    containerRef.current.style['z-index'] = 9999;\r\n    \r\n\r\n    // filter out the current ladder\r\n    const otherNodes = {}\r\n    for (const key in containerRef.current.parentNode.childNodes) {\r\n        if (key == order + 1 || key == order - 1) { // check for only the one before and after it\r\n            otherNodes[key] = containerRef.current.parentNode.childNodes[key];\r\n        }\r\n    }\r\n\r\n    // find our relative cursor positionn \r\n    const relativeCursorPosition = containerRef.current.offsetParent.scrollLeft + cursorPosition - containerRef.current.offsetParent.offsetLeft\r\n\r\n    for (const key in otherNodes) {\r\n        // find the mid way point of the other nodes\r\n        const midPoint = parseInt(otherNodes[key].style.left, 10) + otherNodes[key].clientWidth / 2\r\n\r\n        // move right or left\r\n        if ((relativeCursorPosition > midPoint && order < key) || (relativeCursorPosition < midPoint && order > key)) { \r\n\r\n            // we have to find the actual id if one of the ladders are hidden\r\n\r\n            \r\n            const thisLadderIndex = Object.values(runners).findIndex(item => item.runnerName.replace(/[0-9.]*[.,\\s]/g, ' ').trim() == containerRef.current.children[0].children[0].childNodes[0].childNodes[1].data.replace(/[0-9.]*[.,\\s]/g, ' ').trim()) // ladder header -> contender name -> name \r\n            const thisLadderId = Object.keys(runners)[thisLadderIndex]\r\n            \r\n            const thisLadderOrder = Object.values(ladderOrderList).findIndex(item => item == thisLadderId)\r\n            if (thisLadderOrder === -1) break;\r\n\r\n            const otherLadderIndex = Object.values(runners).findIndex(item => item.runnerName.replace(/[0-9.]*[.,\\s]/g, ' ').trim() == otherNodes[key].children[0].children[0].childNodes[0].childNodes[1].data.replace(/[0-9.]*[.,\\s]/g, ' ').trim()) // ladder header -> contender name -> name \r\n            const otherLadderId = Object.keys(runners)[otherLadderIndex]\r\n            \r\n            const otherLadderOrder = Object.values(ladderOrderList).findIndex(item => item == otherLadderId)\r\n            if (otherLadderOrder === -1) break;\r\n\r\n            swapLadders(thisLadderOrder, otherLadderOrder);\r\n\r\n            otherNodes[key].style.left = `${order * containerRef.current.clientWidth}px`\r\n            \r\n            break;   \r\n        }\r\n    }\r\n    setIsMoving(true);\r\n}","const iconForEvent = sportID => {\r\n    switch (parseInt(sportID)) {\r\n        case 1:\r\n            return window.location.origin + \"/icons/football.png\";\r\n        case 2:\r\n            return window.location.origin + \"/icons/tennis-ball.png\";\r\n        case 3:\r\n            return window.location.origin + \"/icons/golf.png\";\r\n        case 4:\r\n            return window.location.origin + \"/icons/cricket.png\";\r\n        case 5:\r\n            return window.location.origin + \"/icons/rugby-ball.png\";\r\n        case 1477:\r\n            return window.location.origin + \"/icons/rugby-ball.png\";\r\n        case 6:\r\n            return window.location.origin + \"/icons/boxing.png\";\r\n        case 7:\r\n            return window.location.origin + \"/icons/horse-riding.png\";\r\n        case 8:\r\n            return window.location.origin + \"/icons/racing-flag.png\";\r\n        case 4339:\r\n            return window.location.origin + \"/icons/greyhound.png\";\r\n        case 6422:\r\n            return window.location.origin + \"/icons/billiard.png\";\r\n        case 7511:\r\n            return window.location.origin + \"/icons/baseball.png\";\r\n        case 7522:\r\n            return window.location.origin + \"/icons/basketball.png\";\r\n        case 27454571:\r\n            return window.location.origin + \"/icons/trophy.png\";\r\n        case 26420387:\r\n            return window.location.origin + \"/icons/martial-arts-couple-fight.png\";\r\n\r\n        default:\r\n            return window.location.origin + \"/images/baseball-player.png\";\r\n    }\r\n}\r\n\r\nexport { iconForEvent };","import React from \"react\";\r\nimport { iconForEvent } from \"../../utils/EventIcons\";\r\nimport { calcBackBet } from \"../../utils/TradingStategy/HedingCalculator\";\r\n\r\nexport default ({ selectionId, sportId, runner, runnerClick, setLadderDown, PL, ladderLTPHedge, newStake, oddsHovered, ordersOnMarket }) => {\r\n  \r\n  const oddsHoveredCalc = ((oddsHovered.side == \"BACK\" && oddsHovered.selectionId === selectionId) || (oddsHovered.side == \"LAY\" && oddsHovered.selectionId !== selectionId) ? 1 : -1) * parseFloat(calcBackBet(oddsHovered.odds, 2) + \r\n  ((oddsHovered.side == \"BACK\" && oddsHovered.selectionId === selectionId) || (oddsHovered.side == \"LAY\" && oddsHovered.selectionId !== selectionId) ? 1 : -1) * parseFloat(PL)).toFixed(2);\r\n\r\n  const handleMouseDown = () => e => {\r\n    setLadderDown(true);\r\n  };\r\n\r\n  return (\r\n    <div className={\"ladder-header\"}>\r\n      <div>\r\n        <h2 className=\"contender-name\"\r\n          onMouseDown = {handleMouseDown()} \r\n        >\r\n          {\r\n            <img\r\n              className={\"contender-image\"}\r\n              src={\r\n                runner.metadata.COLOURS_FILENAME && parseInt(sportId) === 7\r\n                  ? `https://content-cache.cdnbf.net/feeds_images/Horses/SilkColours/${runner.metadata.COLOURS_FILENAME}`\r\n                  : iconForEvent(sportId)\r\n              }\r\n              alt={\"Colours\"}\r\n              onClick={runnerClick}\r\n              onError={e => {\r\n                e.target.onerror = null;\r\n                e.target.src = iconForEvent(parseInt(sportId));\r\n              }}\r\n            />\r\n          }\r\n          {`${\r\n            runner.metadata.CLOTH_NUMBER ? runner.metadata.CLOTH_NUMBER + \". \" : \"\"\r\n          }${runner.runnerName}`}\r\n        </h2>\r\n        <div className = \"contender-odds-container\">\r\n          <span className=\"contender-odds\"\r\n            style = {{\r\n              visibility: ordersOnMarket ? 'visible' : 'hidden',\r\n              color: PL > 0 ? 'rgb(106, 177, 79)' : 'red'\r\n            }}\r\n          >{PL}</span>\r\n          <span className=\"contender-odds\" \r\n            style = {{visibility: oddsHovered.odds > 0 && ordersOnMarket ? 'visible' : 'hidden',\r\n                      color: oddsHoveredCalc > 0 ? 'rgb(106, 177, 79)' : 'red'}}>\r\n            {/* calculates what to add or subtract based on odds hovered */}\r\n            {oddsHoveredCalc} \r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <span style={{visibility: ladderLTPHedge === 0 ? 'hidden' : 'visible', color: parseFloat(ladderLTPHedge).toFixed(2) > 0 ? 'rgb(106, 177, 79)' : 'red'}}>\r\n          {parseFloat(ladderLTPHedge).toFixed(2)}\r\n        </span>\r\n        <span style={{visibility: newStake === 0 ? 'hidden' : 'visible', color: parseFloat(newStake).toFixed(2) > 0 ? 'rgb(106, 177, 79)' : 'red' }}>\r\n          {parseFloat(newStake).toFixed(2)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from \"react\";\r\n\r\nexport default ({ ltp, tv, percent }) => (\r\n  <div className = {\"percentage-row\"}>\r\n    <div colSpan={3} className={'th'}>{tv}</div>\r\n    <div className = {\"th\"}></div>\r\n    <div className = {\"th\"}>{`${percent.back}%`}</div>\r\n    <div className = {\"th\"} \r\n      style={{\r\n          background:\r\n            ltp[0] < ltp[1]\r\n              ? \"#0AFD03\"\r\n              : ltp[0] > ltp[1]\r\n              ? \"#FC0700\"\r\n              : \"#FFFF00\"\r\n        }}>\r\n          {ltp[0]}\r\n        </div>\r\n    <div className = {\"th\"}>{`${percent.lay}%`}</div>\r\n    <div className = {\"th\"}></div>\r\n  </div>\r\n);\r\n","const LightenDarkenColor = (col, amt) => {\r\n\r\n    var usePound = false;\r\n\r\n    if (col[0] == \"#\") {\r\n        col = col.slice(1);\r\n        usePound = true;\r\n    }\r\n\r\n    var num = parseInt(col, 16);\r\n\r\n    var r = (num >> 16) + amt;\r\n\r\n    if (r > 255) r = 255;\r\n    else if (r < 0) r = 0;\r\n\r\n    var b = ((num >> 8) & 0x00FF) + amt;\r\n\r\n    if (b > 255) b = 255;\r\n    else if (b < 0) b = 0;\r\n\r\n    var g = (num & 0x0000FF) + amt;\r\n\r\n    if (g > 255) g = 255;\r\n    else if (g < 0) g = 0;\r\n\r\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\r\n}\r\n\r\nconst getOrderBtnBG = (buttonType, stake, oneClickStake, colorContrast) => {\r\n    var bg = buttonType === \"STAKE\" ? \"#DBEFFF\" : \"#FEE9EE\";\r\n    return parseInt(stake) === parseInt(oneClickStake) ? LightenDarkenColor(bg, colorContrast) : bg;\r\n  }\r\n\r\nexport { getOrderBtnBG, LightenDarkenColor };","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getOrderBtnBG } from \"../../utils/ColorManipulator\";\r\nimport { setStakeInOneClick } from \"../../actions/settings\";\r\n\r\nconst PriceRow = ({ selectionId, ltp, tv, buttonType, stake, lay, stakeVal, onSetStake }) => {\r\n\r\n\r\n  const buttons = buttonType === \"STAKE\" ? stake : lay;\r\n\r\n  const castedPrices = Array.isArray(buttons) ? buttons : Object.values(buttons)  \r\n\r\n  useEffect(() => {\r\n    if (stakeVal[selectionId] == undefined) {\r\n      onSetStake({selectionId, price: 2})\r\n    }\r\n  }, [])\r\n  \r\n  return (\r\n    <div className=\"price-row\">\r\n      <div colspan=\"8\">\r\n        {castedPrices.map(price => (\r\n          <th\r\n            style={{background: getOrderBtnBG(buttonType, parseFloat(price), stakeVal[selectionId], -20)}}\r\n            onClick={e => onSetStake({selectionId, price: parseFloat(price)})}>{price}\r\n          </th>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    buttonType: state.market.priceType,\r\n    stake: state.settings.stakeBtns,\r\n    lay: state.settings.layBtns,\r\n    stakeVal: state.settings.stake\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetStake: stake => dispatch(setStakeInOneClick(stake))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceRow); ","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePriceType } from '../../actions/market'\r\nimport { combineUnmatchedOrders } from \"../../utils/combineUnmatchedOrders\";\r\nimport { formatPrice } from \"../../utils/ladder/CreateFullLadder\";\r\nimport { calcBackProfit } from \"../../utils/PriceCalculator\";\r\n\r\nconst OrderRow = props => {\r\n\r\n  const matchedBets = Object.values(props.bets.matched).filter(order => parseFloat(order.selectionId) === parseFloat(props.selectionId));\r\n  const allUnmatchedBets = combineUnmatchedOrders(props.backList, props.layList, props.stopEntryList, props.tickOffsetList, props.stopLossList, props.bets.unmatched)[props.selectionId]\r\n  const unmatchedBetsArr = allUnmatchedBets ? Object.values(allUnmatchedBets) : []\r\n  \r\n  return (\r\n    <div className={\"order-row\"}>\r\n      <table>\r\n        <tbody>\r\n          <td colSpan={3} rowSpan={4} style={{verticalAlign: 'top'}}>\r\n            <table className=\"lay-table\">\r\n              <tbody className={unmatchedBetsArr.length > 0 ? \"lay-body\" : \"\"}>\r\n                {unmatchedBetsArr.map(rfs => \r\n                  rfs.map(bet => {\r\n\r\n                    let specialSuffix = \"\";\r\n                    if (bet.trailing && bet.hedged) specialSuffix = \"th\"\r\n                    else if (!bet.trailing && bet.hedged) specialSuffix = \"h\"\r\n                    else if (bet.trailing && !bet.hedged) specialSuffix = \"t\"\r\n\r\n                    const suffix = (bet.strategy == \"Stop Loss\" ? \"SL \" :\r\n                    bet.strategy === \"Tick Offset\" ? \"T.O.\" :\r\n                    bet.strategy === \"Back\" ? \"B\" : \r\n                    bet.strategy === \"Lay\" ? \"L\" :\r\n                    bet.strategy === \"Stop Entry\" ? bet.stopEntryCondition + formatPrice(bet.targetLTP) + \"SE\" :\r\n                          calcBackProfit(bet.size, bet.price, bet.side === \"BACK\" ? 0 : 1)) + specialSuffix\r\n\r\n                    return (\r\n                      <tr\r\n                        style={{\r\n                          backgroundColor: bet.side === \"BACK\" ? \"#A6D8FF\" : \"#FAC9D7\"\r\n                        }}\r\n                      >\r\n                        <td>{`${bet.size} @ ${bet.price} ${suffix}`}</td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n                  \r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n          <td colSpan={1} rowSpan={4} style={{verticalAlign: 'top', minHeight: '1.675em'}}>\r\n            <button>0</button>\r\n            <button onClick={props.onChangePriceType(props.priceType === \"STAKE\" ? \"LIABILITY\" : \"STAKE\")}>\r\n              {props.priceType === \"STAKE\" ? \"S\" : \"L\"}\r\n            </button>\r\n            <button>K</button>\r\n          </td>\r\n          <td colSpan={3} rowSpan={4} style={{verticalAlign: 'top'}}>\r\n            <table className=\"lay-table\">\r\n              <tbody className={matchedBets.length > 0 ? \"lay-body\" : \"\"}>\r\n                {matchedBets.map(bet => {\r\n                  return (\r\n                    <tr\r\n                      style={{\r\n                        backgroundColor: bet.side === \"BACK\" ? \"#A6D8FF\" : \"#FAC9D7\"\r\n                      }}\r\n                    >\r\n                      <td>{`${bet.size} @ ${bet.price}`}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    priceType: state.market.priceType,\r\n    market: state.market.currentMarket,\r\n    bets: state.order.bets,\r\n    stopLossList: state.stopLoss.list,\r\n    tickOffsetList: state.tickOffset.list,\r\n    stopEntryList: state.stopEntry.list,\r\n    layList: state.lay.list,\r\n    backList: state.back.list,\r\n    fillOrKillList: state.fillOrKill.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChangePriceType: priceType => e => dispatch(changePriceType(priceType))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderRow);","const findTickOffset = (matchedPrice, side, offset, percent=false) => {\r\n\r\n    var i;\r\n\r\n    var arr =\r\n    Array(100).fill().map((v,i)=> (i/100 + 1.01).toFixed(2) )\r\n    .concat(Array(50).fill().map((v,i)=> (i/50 + 2.02).toFixed(2) ))\r\n    .concat(Array(20).fill().map((v,i)=> (i/20 + 3.05).toFixed(2) ))\r\n    .concat(Array(20).fill().map((v,i)=> (i/10 + 4.1).toFixed(1) ))\r\n    .concat(Array(20).fill().map((v,i)=> (i/5 + 6.2).toFixed(1) ))\r\n    .concat(Array(19).fill().map((v,i)=> (i/2 + 10.5).toFixed(1) ))\r\n    .concat(Array(11).fill().map((v,i)=> (i + 20).toFixed(0) ))\r\n    .concat(Array(10).fill().map((v,i)=> (i*2 + 32).toFixed(0) ))\r\n    .concat(Array(10).fill().map((v,i)=> (i*5 + 55).toFixed(0) ))\r\n    .concat(Array(90).fill().map((v,i)=> (i*10 + 110).toFixed(0) ))\r\n\r\n    var target = matchedPrice;\r\n    \r\n    if (percent) {\r\n\r\n        const computedPrice = parseFloat(matchedPrice) * (1 - offset/100);\r\n        const closestToComputed = arr.sort((a, b) => Math.abs(computedPrice - a) - Math.abs(computedPrice - b));\r\n        \r\n        // takes the lowest value\r\n        target = closestToComputed[0] < closestToComputed[1] ? closestToComputed[0] : closestToComputed[2]\r\n        \r\n        return { priceReached: target };\r\n    }\r\n\r\n    if (side === 'back') {\r\n        for (i = arr.indexOf(matchedPrice); i <= 1000; i++) {\r\n            target = arr[i];\r\n            if (offset-- <= 0 || i === 1000) {\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n    else if (side === 'lay') {\r\n        for (i = arr.indexOf(matchedPrice); i >= 0; i--) {\r\n            target = arr[i];\r\n            if (offset-- <= 0 || i === 0) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return { priceReached: target };\r\n}\r\n\r\nexport { findTickOffset };","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { formatPrice } from \"../../utils/ladder/CreateFullLadder\";\r\nimport { updateTickOffsetList } from '../../actions/tickOffset';\r\nimport { findTickOffset } from '../../utils/TradingStategy/TickOffset';\r\nimport crypto from 'crypto'\r\nimport { updateFillOrKillList } from '../../actions/fillOrKill';\r\n\r\nconst LadderOrderCell = ({side, cell, unmatchedBets, matchedBets, marketId, selectionId, placeOrder, \r\n                          isStopLoss, stopLossData, stopLossUnits, changeStopLossList, stopLossSelected, stopLossList, stopLossHedged,\r\n                          onChangeTickOffsetList, tickOffsetList, tickOffsetSelected, tickOffsetUnits, tickOffsetTicks, tickOffsetTrigger, tickOffsetHedged,\r\n                          fillOrKillSelected, fillOrKillSeconds, fillOrKillList, onUpdateFillOrKillList, hedgeSize, onHover, onLeave, stakeVal }) => {\r\n\r\n                        \r\n    const handleClick = () => async e => {\r\n      const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n              \r\n      // stoploss and fill or kill can't be together, stoploss takes priority\r\n      placeOrder({\r\n        side: side,\r\n        price: formatPrice(cell.odds),\r\n        selectionId: selectionId,\r\n        customerStrategyRef: referenceStrategyId,\r\n        unmatchedBets: unmatchedBets,\r\n        matchedBets: matchedBets, \r\n        size: stakeVal[selectionId],\r\n        orderCompleteCallBack: async betId => {\r\n\r\n          if (stopLossSelected && stopLossData === undefined) {\r\n            changeStopLossList({\r\n              side: side === \"BACK\" ? \"LAY\" : \"BACK\",\r\n              price: formatPrice(cell.odds),\r\n              custom: false,\r\n              units: stopLossUnits,\r\n              rfs: referenceStrategyId,\r\n              assignedIsOrderMatched: false,\r\n              size: stakeVal[selectionId],\r\n              betId: betId,\r\n              hedged: stopLossHedged\r\n            })\r\n          } else if (tickOffsetSelected) {\r\n            const newTickOffset = Object.assign({}, tickOffsetList)\r\n            const addedOrder = {\r\n              strategy: \"Tick Offset\",\r\n              marketId: marketId, \r\n              selectionId: selectionId, \r\n              price: findTickOffset(formatPrice(cell.odds), side.toLowerCase(), tickOffsetTicks, tickOffsetUnits === \"Percent\").priceReached,\r\n              size: tickOffsetHedged ? hedgeSize : stakeVal[selectionId], \r\n              side: side, \r\n              percentageTrigger: tickOffsetTrigger,\r\n              rfs: referenceStrategyId,\r\n              betId: betId,\r\n              hedged: tickOffsetHedged,\r\n              minFillSize: fillOrKillSelected ? (tickOffsetHedged ? hedgeSize : stakeVal[selectionId]) : 1\r\n            };\r\n\r\n            newTickOffset[referenceStrategyId] = addedOrder\r\n\r\n            await fetch('/api/save-order', {\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              method: \"POST\",\r\n              body: JSON.stringify(addedOrder)\r\n            })\r\n            onChangeTickOffsetList(newTickOffset);\r\n            \r\n          }\r\n\r\n          if (!stopLossSelected && fillOrKillSelected) {\r\n            const addedFillOrKillOrder = {strategy: \"Fill Or Kill\", marketId: marketId, selectionId: selectionId, seconds: fillOrKillSeconds, startTime: Date.now(), betId: betId, rfs: referenceStrategyId};\r\n            const newFillOrKillList = Object.assign({}, fillOrKillList);\r\n            newFillOrKillList[betId] = addedFillOrKillOrder;\r\n\r\n            await fetch('/api/save-order', {\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              method: \"POST\",\r\n              body: JSON.stringify(addedFillOrKillOrder)\r\n            })\r\n            onUpdateFillOrKillList(newFillOrKillList);\r\n          }\r\n\r\n        },\r\n      });\r\n    };\r\n\r\n    const handleRightClick = () => async e => {\r\n      e.preventDefault()\r\n\r\n      if (stopLossList[selectionId] !== undefined) {\r\n        await fetch('/api/remove-orders', {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify([stopLossList[selectionId]])\r\n        })\r\n      }\r\n      \r\n      changeStopLossList({\r\n        side: side,\r\n        price: formatPrice(cell.odds),\r\n        custom: true,\r\n        rfs: undefined,\r\n        assignedIsOrderMatched: false,\r\n      })\r\n\r\n      return false;\r\n    };\r\n\r\n    return (\r\n        <div className = 'td'\r\n            style={\r\n                isStopLoss ? {background: \"yellow\"} :\r\n                cell.backMatched && side === \"BACK\" ? {background: \"#F694AA\"} : \r\n                cell.layMatched && side === \"LAY\" ? {background: \"#75C2FD\"} : null\r\n            }\r\n            onMouseEnter = {onHover}\r\n            onMouseLeave = {onLeave}\r\n            onClick={handleClick()}\r\n            onContextMenu = {handleRightClick()}\r\n          >\r\n            { isStopLoss ? stopLossData.hedged ? \"H\" : stopLossData.size : cell[`${side.toLowerCase()}Matched`] }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    marketId: state.market.currentMarket.marketId,\r\n    unmatchedBets: state.order.bets.unmatched,\r\n    matchedBets: state.order.bets.matched,\r\n    stopLossSelected: state.stopLoss.selected,\r\n    stopLossList: state.stopLoss.list,\r\n    stopLossUnits: state.stopLoss.units,\r\n    stopLossHedged: state.stopLoss.hedged, \r\n    tickOffsetList: state.tickOffset.list,\r\n    tickOffsetSelected: state.tickOffset.selected,\r\n    tickOffsetTicks: state.tickOffset.ticks,\r\n    tickOffsetUnits: state.tickOffset.units,\r\n    tickOffsetTrigger: state.tickOffset.percentTrigger,\r\n    tickOffsetHedged: state.tickOffset.hedged, \r\n    fillOrKillSelected: state.fillOrKill.selected,\r\n    fillOrKillSeconds: state.fillOrKill.seconds,\r\n    fillOrKillList: state.fillOrKill.list,\r\n    stakeVal: state.settings.stake\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChangeTickOffsetList: list => dispatch(updateTickOffsetList(list)),\r\n    onUpdateFillOrKillList: list => dispatch(updateFillOrKillList(list))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LadderOrderCell)","import { calcPercentDifference } from \"../PriceCalculator\";\r\nimport { ALL_PRICES } from \"../ladder/CreateFullLadder\";\r\n\r\n/**\r\n * This function is used to calculate whether the stop loss has been triggered.\r\n * @param {number} size - The position of the bet e.g. £10\r\n * @param {number} matchedPrice - The price the bet was matched at e.g. 2.56\r\n * @param {number} currentPrice - The current price the bet is trading at e.g. 3.15\r\n * @param {string} side - Back or Lay *REQUIRED*\r\n * @param {number} ticks - Number of ticks for the stop, or percentage of price\r\n * @param {string} tickOffsetStrategy - ticks field represents percent if percent is passed\r\n * @return {Object} {targetMet, priceReached or stopPrice}\r\n */\r\nconst checkStopLossHit = (size, matchedPrice, currentPrice, side, ticks, tickOffsetStrategy) => {\r\n\r\n\t// We turn the prices into floating point numbers in case strings are passed\r\n    matchedPrice = parseFloat(matchedPrice);\r\n    currentPrice = parseFloat(currentPrice);\r\n  \r\n  if ((side === 'back' && currentPrice < matchedPrice) || (side === 'lay' && currentPrice > matchedPrice)) {\r\n\t\t// The price is trading in our favour so no need for further checks\r\n\t\treturn { targetMet: false, priceReached: findStopPosition(matchedPrice, ticks, side, tickOffsetStrategy) };\r\n\t}\r\n\t// Percent is passed so we look at the percentage lost\r\n\telse if (tickOffsetStrategy === 'percent') {\r\n    let percentIncrease = calcPercentDifference(size, matchedPrice, currentPrice);\r\n\t\treturn { targetMet: percentIncrease > ticks, stopPrice: findStopPositionForPercent(size, matchedPrice, ticks, side) };\r\n\t}\r\n\t// Check if the tick offset has been satisfied by checking the price difference\r\n\t// between the matched and current prices, by finding the absolute value of their indexes\r\n\telse if (Math.abs(ALL_PRICES.indexOf(matchedPrice) - ALL_PRICES.indexOf(currentPrice)) >= ticks) {\r\n  \t\treturn { targetMet: true, priceReached: findStopPosition(matchedPrice, ticks, side, tickOffsetStrategy) };\r\n\t}\r\n\t// Target not met\r\n\treturn { targetMet: false, priceReached: findStopPosition(matchedPrice, ticks, side, tickOffsetStrategy) };\r\n}\r\n\r\n/**\r\n * This function is used to calculate the position of the stop loss.\r\n * For example a matched price of 2.02 for the lay side with a stop loss\r\n * with 5 ticks would return 1.96 = 2.02 > 2.00 > 1.99 > 1.98 > 1.97 > 1.96\r\n * @param {number} matchedPrice - The price the bet was matched at e.g. 2.56\r\n * @param {number} ticks - Number of ticks for the stop, or percentage of price\r\n * @param {string} side - Back or Lay *REQUIRED*\r\n * @return {Object} {targetMet, priceReached} \r\n */\r\nconst findStopPosition = (matchedPrice, ticks, side) => {\r\n\tmatchedPrice = parseFloat(matchedPrice);\r\n\r\n  const index = Math.floor(ALL_PRICES.indexOf(matchedPrice) + (side === 'back' ? +ticks : -ticks));\r\n\r\n\treturn parseFloat(ALL_PRICES[index]).toFixed(2);\r\n}\r\n\r\n/**\r\n * This function is used to calculate the position of the stop loss for percentages.\r\n * @param {number} size - The position of the bet e.g. £10\r\n * @param {number} matchedPrice - The price the bet was matched at e.g. 2.56\r\n * @param {number} percent - The current percent loss to stop the trade at\r\n * @param {string} side - Back or Lay *REQUIRED*\r\n * @return {string} The price at which the trade will stop\r\n */\r\nconst findStopPositionForPercent = (size, matchedPrice, percent, side) => {\r\n  matchedPrice = parseFloat(matchedPrice);\r\n  var i;\r\n\r\n  if (side === \"back\") {\r\n    for (i = ALL_PRICES.indexOf(matchedPrice); i <= 1000; i++) {\r\n      let percentIncrease = calcPercentDifference(size, matchedPrice, ALL_PRICES[i]);\r\n\r\n      if (percentIncrease >= percent) {\r\n        return ALL_PRICES[i].toFixed(2);\r\n      }\r\n    }\r\n  }\r\n  else if (side === \"lay\") {\r\n    for (i = ALL_PRICES.indexOf(matchedPrice); i >= 0; i--) {\r\n      let percentIncrease = calcPercentDifference(size, matchedPrice, ALL_PRICES[i]);\r\n\r\n      if (percentIncrease >= percent) {\r\n        return ALL_PRICES[i].toFixed(2);\r\n      }\r\n    }\r\n  }\r\n\treturn matchedPrice.toFixed(2);\r\n}\r\n\r\n\r\nexport { checkStopLossHit, findStopPosition, findStopPositionForPercent };","import React from 'react'\r\nimport LadderOrderCell from './LadderOrderCell'\r\nimport { formatPrice } from \"../../utils/ladder/CreateFullLadder\";\r\nimport { findStopPosition, findStopPositionForPercent } from \"../../utils/TradingStategy/StopLoss\";\r\nimport crypto from 'crypto'\r\n\r\nexport default ({data: { ladder, selectionId, placeOrder, ltp, ltpList, stopLoss, changeStopLossList, hedgeSize, setOddsHovered, volume }, style, index}) => {\r\n    const key = Object.keys(ladder)[index]\r\n    \r\n    const indexInLTPList = ltpList.findIndex(item => item.tick == key);\r\n    const volumeVal = volume[formatPrice(ladder[key].odds)] ? volume[formatPrice(ladder[key].odds)] : 0\r\n    return (\r\n        <div key={ladder[key].odds}  onContextMenu = { (e) => { e.preventDefault(); return false } } class = 'tr' style = {style} >\r\n          \r\n          <div className={\"candle-stick-col td\"} colSpan={3}>\r\n            {\r\n              indexInLTPList >= 0 ? \r\n              <img \r\n                src={`${window.location.origin}/icons/${ltpList[indexInLTPList].color === 'R' ? 'red-candle.png' : 'green-candle.png'}`} \r\n                className={\"candle-stick\"} alt = \"\" style = {{right: indexInLTPList * 2}} /> \r\n              : null\r\n            }\r\n            <div className={\"volume-col\"} style={{width: `${volumeVal * 10}px`}}>\r\n              {volumeVal === 0 ? null : volumeVal}\r\n            </div>\r\n          </div>\r\n          <div \r\n            className = 'td'\r\n            style = {{color: `${ladder[key].backProfit >= 0 ? \"green\" : 'red'}`}}\r\n            onClick = {() => {\r\n              const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n\r\n              if (hedgeSize > 0)\r\n              placeOrder({\r\n                side: \"BACK\",\r\n                price: formatPrice(ladder[key].odds),\r\n                selectionId: selectionId,\r\n                customerStrategyRef: referenceStrategyId,\r\n                size: hedgeSize + parseFloat(ladder[key].backProfit)\r\n              })\r\n            }}\r\n          >{ladder[key].backProfit}</div>\r\n          <LadderOrderCell \r\n            side = {\"BACK\"}\r\n            cell = {ladder[key]}\r\n            selectionId = {selectionId}\r\n            placeOrder = {placeOrder}\r\n            isStopLoss = {stopLoss !== undefined && stopLoss.side == \"BACK\" ? \r\n                          stopLoss.units == \"Ticks\" ? findStopPosition(stopLoss.price, stopLoss.tickOffset, stopLoss.side.toLowerCase()) === key :\r\n                          findStopPositionForPercent(stopLoss.size, stopLoss.price, stopLoss.tickOffset, stopLoss.side.toLowerCase()) === key\r\n                           : false}\r\n            stopLossData = {stopLoss}\r\n            changeStopLossList= {changeStopLossList}\r\n            hedgeSize = {hedgeSize}\r\n            onHover = {() => setOddsHovered({selectionId, odds: ladder[key].odds, side: \"BACK\"})}\r\n            onLeave = {() => setOddsHovered({selectionId, odds: 0, side: \"BACK\"})}\r\n          />\r\n          <div style = {{\r\n            background: key == ltp ? 'yellow' : '#BBBBBB'\r\n          }} className = 'td'>{formatPrice(ladder[key].odds)}</div>\r\n          <LadderOrderCell \r\n            side = {\"LAY\"}\r\n            cell = {ladder[key]}\r\n            selectionId = {selectionId}\r\n            placeOrder = {placeOrder} \r\n            isStopLoss = {stopLoss !== undefined && stopLoss.side == \"LAY\" ? \r\n              stopLoss.units == \"Ticks\" ? findStopPosition(stopLoss.price, stopLoss.tickOffset, stopLoss.side.toLowerCase()) === key :\r\n              findStopPositionForPercent(stopLoss.size, stopLoss.price, stopLoss.tickOffset, stopLoss.side.toLowerCase()) === key\r\n               : false}\r\n            stopLossData = {stopLoss}\r\n            changeStopLossList= {changeStopLossList}\r\n            hedgeSize = {hedgeSize}\r\n            onHover = {() => setOddsHovered({selectionId, odds: ladder[key].odds, side: \"LAY\"})}\r\n            onLeave = {() => setOddsHovered({selectionId, odds: 0, side: \"LAY\"})}\r\n          />\r\n          <div \r\n            className = 'td'\r\n            style = {{color: `${ladder[key].layProfit >= 0 ? \"green\" : 'red'}`}}\r\n            onClick = {() => {\r\n              const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n\r\n              if (hedgeSize > 0)\r\n              placeOrder({\r\n                side: \"LAY\",\r\n                price: formatPrice(ladder[key].odds),\r\n                selectionId: selectionId,\r\n                customerStrategyRef: referenceStrategyId,\r\n                size: hedgeSize + parseFloat(ladder[key].layProfit)\r\n              })\r\n            }}\r\n          >{ladder[key].layProfit}</div>\r\n        </div>\r\n    )\r\n}","\r\n\r\nimport { twoDecimalPlaces } from \"../PriceCalculator\";\r\nimport { calcBackBet } from \"../TradingStategy/HedingCalculator\";\r\n\r\nconst marketHasBets = (marketId, bets) => {\r\n    return (Object.values(bets.matched))\r\n        .filter(order => order.marketId === marketId)\r\n        .length > 0;\r\n};\r\n\r\nconst getPLForRunner = (marketId, selectionId, bets) => {\r\n    return twoDecimalPlaces(Object.values(bets.matched)\r\n        .filter(order => order.marketId === marketId)\r\n        .map(order => {\r\n\r\n            if (order.selectionId === selectionId) {\r\n                switch (order.side) {\r\n                    case \"BACK\":\r\n                        return calcBackBet(order.price, order.size);\r\n                    case \"LAY\":\r\n                        return -calcBackBet(order.price, order.size);\r\n                    default:\r\n                        return calcBackBet(order.price, order.size);\r\n                }\r\n            } else {\r\n                switch (order.side) {\r\n                    case \"BACK\":\r\n                        return -order.size;\r\n                    case \"LAY\":\r\n                        return order.size;\r\n                    default:\r\n                        return -order.size;\r\n                }\r\n            }\r\n        })\r\n        .reduce((acc, total) => {\r\n            return acc + total;\r\n        }, 0));\r\n};\r\n\r\nexport { marketHasBets, getPLForRunner };","import React, { useState, useRef, useEffect } from \"react\";\r\nimport LadderContainer from './LadderContainer'\r\nimport LadderHeader from \"./LadderHeader\";\r\nimport PercentageRow from \"./PercentageRow\";\r\nimport PriceRow from \"./PriceRow\";\r\nimport OrderRow from \"./OrderRow\";\r\nimport AutoSizer from 'react-virtualized-auto-sizer'\r\nimport { FixedSizeList as List } from 'react-window'\r\nimport LadderRow from \"./LadderRow\";\r\nimport { formatPrice } from \"../../utils/ladder/CreateFullLadder\";\r\nimport { calcHedgedPL2 } from \"../../utils/TradingStategy/HedingCalculator\";\r\nimport { getPLForRunner } from \"../../utils/Bets/getProfitAndLoss\";\r\nimport { calcBackProfit } from \"../../utils/PriceCalculator\";\r\n\r\nconst Ladder = ({ id, runners, ladder, market, onPlaceOrder, onSelectRunner, order, swapLadders, \r\n                  ladderOrderList, stopLoss, changeStopLossList, selectionMatchedBets, unmatchedBets, matchedBets, oddsHovered, setOddsHovered, volume = [], ladderUnmatched, stake }) => {\r\n    const containerRef = useRef(null);\r\n    const listRef = useRef();\r\n    const [listRefSet, setlistRefSet] = useState(false);\r\n\r\n    const [isReferenceSet, setIsReferenceSet] = useState(false);\r\n    const [isMoving, setIsMoving] = useState(false);\r\n    const [isLadderDown, setLadderDown] = useState(false);\r\n  \r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            const ltpIndex = Object.keys(ladder[id].fullLadder).indexOf(parseFloat(ladder[id].ltp[0]).toFixed(2));\r\n            if (listRef.current !== null && ltpIndex !== -1) {\r\n                listRef.current.scrollToItem(ltpIndex, 'center')\r\n                clearInterval(interval)\r\n                setlistRefSet(true)\r\n            } \r\n        }, 1000)\r\n        \r\n    }, [listRef]);\r\n\r\n    useEffect(() => {\r\n        const ltpIndex = Object.keys(ladder[id].fullLadder).indexOf(parseFloat(ladder[id].ltp[0]).toFixed(2));\r\n        if (listRef.current !== undefined) {\r\n            listRef.current.scrollToItem(ltpIndex, 'center')\r\n        }\r\n    }, [order])\r\n\r\n  // remove adjacent LTP values\r\n    const filteredLTPs = \r\n    ladder[id] !== undefined ? \r\n        ladder[id].ltp[0] !== undefined ? \r\n            ladder[id].ltp.filter((item, pos, arr) => {\r\n                // Always keep the 0th element as there is nothing before it\r\n                // Then check if each element is different than the one before it\r\n                return pos === 0 || item !== arr[pos-1];\r\n            }) : [] \r\n        : []\r\n\r\n    const coloredLTPList = filteredLTPs.map((item, index) => {\r\n        if (index === filteredLTPs.length - 1) { // if last element\r\n            return {\r\n            tick: item,\r\n            color: item > filteredLTPs[index - 1] || index === 0 ? 'G' : 'R'\r\n            } \r\n        } else {\r\n            return {\r\n            tick: item,\r\n            color: item < filteredLTPs[index + 1] ? 'R' : 'G'\r\n            }\r\n        }\r\n    });\r\n\r\n    const PL = matchedBets !== undefined ? getPLForRunner(market.marketId, parseInt(id), {matched: matchedBets}).toFixed(2) : 0\r\n    \r\n    const placeOrder = data => {\r\n        onPlaceOrder({\r\n            marketId: market.marketId,\r\n            side: data.side,\r\n            size: data.size,\r\n            price: data.price,\r\n            selectionId: data.selectionId,\r\n            customerStrategyRef: data.customerStrategyRef,\r\n            orderCompleteCallBack: data.orderCompleteCallBack,\r\n            unmatchedBets: unmatchedBets,\r\n            matchedBets: matchedBets,\r\n            minFillSize: data.minFillSize\r\n        });\r\n    }\r\n\r\n    const placeStopLossOrder = data => {\r\n        changeStopLossList({\r\n            marketId: market.marketId,\r\n            selectionId: parseInt(id),\r\n            side: data.side,\r\n            size: data.size,\r\n            price: data.price, \r\n            trailing: false,\r\n            customStopLoss: data.custom, \r\n            units: data.units,\r\n            rfs: data.rfs,\r\n            assignedIsOrderMatched: data.assignedIsOrderMatched,\r\n            betId: data.betId,\r\n            hedged: data.hedged\r\n        })\r\n    }\r\n\r\n    // const testVol = [{\"price\":4.1,\"size\":30.4},{\"price\":4.2,\"size\":47.12},{\"price\":4.4,\"size\":35.5},{\"price\":4.5,\"size\":171.58},{\"price\":4.6,\"size\":61.1},{\"price\":4.7,\"size\":1880.56},{\"price\":4.8,\"size\":4811.76},{\"price\":4.9,\"size\":2449.31},{\"price\":5.0,\"size\":2817.75},{\"price\":5.1,\"size\":5016.76},{\"price\":5.2,\"size\":4601.6},{\"price\":5.3,\"size\":1685.85},{\"price\":5.4,\"size\":405.59},{\"price\":5.5,\"size\":1906.15},{\"price\":5.6,\"size\":2372.16},{\"price\":5.7,\"size\":5238.67},{\"price\":5.8,\"size\":1915.15},{\"price\":5.9,\"size\":3313.69},{\"price\":6.0,\"size\":721.29}]\r\n    const parsedVolume = {};\r\n    volume.map(vol => {\r\n        parsedVolume[formatPrice(vol.price)] = Math.floor(vol.size / 100) / 10\r\n    })\r\n\r\n    const fullLadderWithProfit = {};\r\n    let ladderLTPHedge = 0;\r\n    \r\n    Object.values(ladder[id].fullLadder).map(item => {\r\n        // if lay, flip\r\n        fullLadderWithProfit[item.odds] = {...item}\r\n        \r\n        if (selectionMatchedBets !== undefined && ladderUnmatched === \"hedged\") {\r\n            const profitArray = selectionMatchedBets.map(bet => (bet.side === \"LAY\" ? -1 : 1) * calcHedgedPL2(parseFloat(bet.size), parseFloat(bet.price), parseFloat(item.odds)));\r\n            const profit = (-1 * profitArray.reduce((a, b) => a - b, 0)).toFixed(2);\r\n            \r\n            if (parseFloat(item.odds).toFixed(2) == parseFloat(ladder[id].ltp[0]).toFixed(2)) {\r\n                ladderLTPHedge = profit;\r\n            }\r\n\r\n            const side = selectionMatchedBets.reduce((a, b) => a + calcBackProfit(b.size, b.price, b.side === \"BACK\" ? 0 : 1), 0) > 0 ? \"BACK\" : \"LAY\"\r\n\r\n            fullLadderWithProfit[item.odds][side == \"BACK\" ? 'backProfit' : \"layProfit\"] = profit\r\n        }\r\n\r\n        if (ladderUnmatched === \"pl\") {\r\n            fullLadderWithProfit[item.odds]['backProfit'] = parseFloat(calcBackProfit(parseFloat(stake), item.odds, 0)) + parseFloat(PL);\r\n        }\r\n    });\r\n    \r\n    const hedgeSize = selectionMatchedBets !== undefined ?\r\n    selectionMatchedBets.reduce((a, b) => {\r\n        return a + b.size\r\n    }, 0) : 0\r\n\r\n    const newStake = selectionMatchedBets !== undefined ? selectionMatchedBets.reduce((a, b) => a + (b.side === \"LAY\" ? -parseFloat(b.size) : parseFloat(b.size)), 0) + parseFloat(ladderLTPHedge) : 0\r\n    \r\n    return (\r\n        <LadderContainer\r\n            isReferenceSet = {isReferenceSet}\r\n            order = {order}\r\n            containerRef = {containerRef}\r\n            isMoving = {isMoving}\r\n            isLadderDown = {isLadderDown}\r\n            setIsReferenceSet = {setIsReferenceSet}\r\n            runners = {runners}\r\n            ladderOrderList = {ladderOrderList}\r\n            swapLadders = {swapLadders}\r\n            setIsMoving = {setIsMoving}\r\n            setLadderDown = {setLadderDown}\r\n        >\r\n            <LadderHeader\r\n                sportId={market.eventType.id}\r\n                selectionId={id}\r\n                runner={runners[id]}\r\n                runnerClick={onSelectRunner(runners[id])}\r\n                setLadderDown = {setLadderDown}\r\n                PL = {PL}\r\n                ladderLTPHedge = {ladderLTPHedge}\r\n                newStake = {newStake}\r\n                oddsHovered = {oddsHovered}\r\n                ordersOnMarket = {(Object.keys(unmatchedBets).length + Object.keys(matchedBets).length) > 0}\r\n            />\r\n            \r\n            <div className={\"ladder\"} onContextMenu = { () => false }>\r\n                <PercentageRow\r\n                    ltp={ladder[id].ltp}\r\n                    tv={\r\n                        ladder[id].tv[0]\r\n                        ? ladder[id].tv[0].toLocaleString()\r\n                        : \"\"\r\n                    }\r\n                    percent={ladder[id].percent}\r\n                />\r\n                    <AutoSizer>\r\n                        {({ height, width }) => (\r\n                        <List\r\n                            className=\"List\"\r\n                            height={height}\r\n                            itemCount={Object.keys(ladder[id].fullLadder).length}\r\n                            itemSize={20}\r\n                            width={width}\r\n                            ref = {listRef}\r\n                            style = {{paddingRight: `${listRefSet ? listRef.current.offsetWidth - listRef.current.clientWidth : -17}px`}}\r\n                            \r\n                            itemData = {{\r\n                                ladder: fullLadderWithProfit,\r\n                                selectionId: id,\r\n                                placeOrder: placeOrder,\r\n                                ltp: ladder[id].ltp[0],\r\n                                ltpList: coloredLTPList,\r\n                                stopLoss: stopLoss,\r\n                                changeStopLossList: placeStopLossOrder,\r\n                                hedgeSize: hedgeSize,\r\n                                setOddsHovered: setOddsHovered,\r\n                                volume: parsedVolume\r\n                            }}\r\n                        >\r\n                            {LadderRow}\r\n                        </List>\r\n                        )}\r\n                    </AutoSizer>\r\n                    \r\n            </div>\r\n            <PriceRow selectionId={id} />\r\n            <OrderRow selectionId={id} />\r\n        </LadderContainer>\r\n    );\r\n};\r\n\r\nexport default Ladder;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { placeOrder } from \"../../actions/order\";\r\nimport { setRunner, updateLadderOrder } from \"../../actions/market\";\r\nimport { updateStopLossList } from \"../../actions/stopLoss\";\r\nimport Ladder from './Ladder'\r\n\r\nconst Ladders = ({ladderOrder, ladder, onChangeLadderOrder, marketOpen, excludedLadders, runners, market, onPlaceOrder, onSelectRunner, stopLossList, \r\n                  stopLossOffset, stopLossTrailing, onChangeStopLossList, marketVolume, bets, ladderUnmatched, stakeVal}) => {\r\n\r\n  const [oddsHovered, setOddsHovered] = useState({selectionId: 0, odds: 0, side: \"BACK\"}) \r\n\r\n  useEffect(() => {\r\n    if (Object.keys(ladderOrder).length === 0 && Object.keys(ladder).length > 0) {\r\n        // initialize the order object\r\n        const newOrderList = {};\r\n\r\n        Object.keys(ladder).map((key, index) => {\r\n          newOrderList[index] = key;\r\n        })\r\n\r\n        onChangeLadderOrder(newOrderList);\r\n    }\r\n  }, [ladder])\r\n\r\n  const newMatchedBets = {}; //selectionId: [{}]\r\n  Object.values(bets.matched).map(bet => {\r\n    if (newMatchedBets[bet.selectionId] === undefined) {\r\n      newMatchedBets[bet.selectionId] = [bet];\r\n    } else {\r\n      newMatchedBets[bet.selectionId] = newMatchedBets[bet.selectionId].concat(bet);\r\n    }\r\n  });\r\n\r\n  const swapLadders = (fromIndex, toIndex) => {\r\n    const newOrderList = Object.assign({}, ladderOrder);\r\n\r\n    newOrderList[fromIndex] = ladderOrder[toIndex];\r\n    newOrderList[toIndex] = ladderOrder[fromIndex];\r\n\r\n    onChangeLadderOrder(newOrderList);\r\n  }\r\n\r\n  return (\r\n    <div className={\"ladder-container\"}\r\n      onContextMenu = { (e) => { e.preventDefault(); return false } }\r\n    >\r\n      {marketOpen && ladder\r\n        ? Object.values(ladderOrder)\r\n          .filter(value => excludedLadders.indexOf(value) === -1)\r\n          .map((value, index) => (\r\n          <Ladder \r\n            runners = {runners}\r\n            ladder = {ladder}\r\n            market = {market}\r\n            onPlaceOrder = {onPlaceOrder}\r\n            onSelectRunner = {onSelectRunner}\r\n            id = {value}\r\n            key = {value}\r\n            order = {index}\r\n            ladderOrderList = {ladderOrder}\r\n            stopLoss = {stopLossList[value]}\r\n            selectionMatchedBets = {newMatchedBets[value]}\r\n            unmatchedBets = {bets.unmatched}\r\n            matchedBets = {bets.matched}\r\n            setOddsHovered = {setOddsHovered}\r\n            oddsHovered = {oddsHovered}\r\n            volume = {marketVolume[value]}\r\n            ladderUnmatched = {ladderUnmatched}\r\n            stake = {stakeVal[value]}\r\n            changeStopLossList = {async newStopLoss => {\r\n\r\n              const adjustedNewStopLoss = {...newStopLoss, \r\n                strategy: \"Stop Loss\",\r\n                tickOffset: newStopLoss.customStopLoss ? 0 : stopLossOffset,\r\n                trailing: newStopLoss.customStopLoss ? false : stopLossTrailing\r\n              }\r\n\r\n              const newStopLossList = Object.assign({}, stopLossList) \r\n              newStopLossList[newStopLoss.selectionId] = adjustedNewStopLoss\r\n\r\n              await fetch('/api/save-order', {\r\n                headers: {\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\"\r\n                },\r\n                method: \"POST\",\r\n                body: JSON.stringify(adjustedNewStopLoss)\r\n              })\r\n\r\n              onChangeStopLossList(newStopLossList);\r\n\r\n            }}\r\n            swapLadders = {swapLadders}\r\n          />\r\n          ))\r\n      : null } \r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentEvent: state.sports.currentSport.currentEvent,\r\n    marketOpen: state.market.marketOpen,\r\n    market: state.market.currentMarket,\r\n    marketVolume: state.market.currentMarketVolume,\r\n    runners: state.market.runners,\r\n    ladder: state.market.ladder,\r\n    excludedLadders: state.market.excludedLadders,\r\n    ladderOrder: state.market.ladderOrder,\r\n    bets: state.order.bets,\r\n    stopLossList: state.stopLoss.list,\r\n    stopLossSelected: state.stopLoss.selected,\r\n    stopLossOffset: state.stopLoss.offset,\r\n    stopLossUnits: state.stopLoss.ticks,\r\n    stopLossTrailing: state.stopLoss.trailing,\r\n    stopLossHedged: state.stopLoss.hedged,\r\n    ladderUnmatched: state.settings.ladderUnmatched,\r\n    stakeVal: state.settings.stake\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectRunner: runner => e => dispatch(setRunner(runner)),\r\n    onPlaceOrder: order => dispatch(placeOrder(order)),\r\n    onChangeLadderOrder: order => dispatch(updateLadderOrder(order)),\r\n    onChangeStopLossList: list => dispatch(updateStopLossList(list))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Ladders);\r\n","\r\nimport React from \"react\";\r\n\r\nconst renderContent = (text, img, alt) => {\r\n    return (\r\n        <div className={\"in-play\"}>\r\n            <span className={\"in-play\"}>{text}</span>\r\n            <img src={window.location.origin + img} alt={{alt}}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst renderRaceStatus = (marketOpen, status, inPlay) => {\r\n\r\n    if (!marketOpen) return null;\r\n    if (inPlay && status !== \"CLOSED\") {\r\n        return renderContent(\"Going in-play\", \"/icons/checked.png\", \"Active\");\r\n    }\r\n\r\n    switch (status) {\r\n        case \"OPEN\":\r\n            return renderContent(\"Going in-play\", \"/icons/inactive.png\", \"Active\");\r\n        case \"SUSPENDED\":\r\n            return renderContent(\"Not Going in-play\", \"/icons/error.png\", \"Suspended\");\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nexport { renderRaceStatus };","const openLiveStream = market => e => {\r\n    if (market.event) {\r\n        window.open(\r\n            `https://videoplayer.betfair.com/GetPlayer.do?tr=1&mID=${market.marketId}&allowPopup=false`,\r\n            market.event.name,\r\n            \"width=500,height=500\"\r\n        );\r\n    }\r\n}\r\n\r\nexport { openLiveStream };","import React from \"react\";\r\nimport { renderRaceStatus } from \"./RaceStatus\";\r\nimport { sumMatchedBets } from \"../../utils/PriceCalculator\";\r\nimport { formatCurrency } from \"./../../utils/NumberFormat\";\r\nimport { getOrderBtnBG } from \"../../utils/ColorManipulator\";\r\nimport { getHedgedBetsToMake } from \"../../utils/TradingStategy/HedingCalculator\";\r\nimport { openLiveStream } from \"../../utils/Video\";\r\nimport crypto from 'crypto'\r\n\r\nexport default ({\r\n  market,\r\n  ladder,\r\n  marketOpen,\r\n  inPlay,\r\n  status,\r\n  country,\r\n  oneClickRef,\r\n  oneClickOn,\r\n  toggleOneClick,\r\n  oneClickStake,\r\n  setStakeOneClick,\r\n  stakeBtns,\r\n  layBtns,\r\n  bets,\r\n  ltpList,\r\n  onPlaceOrder,\r\n  marketCashout\r\n}) => (\r\n    <React.Fragment>\r\n      <tr id=\"grid-header\">\r\n        <th colSpan=\"11\">\r\n          <button\r\n            id=\"one-click-btn\"\r\n            ref={oneClickRef}\r\n            onClick={toggleOneClick()}\r\n          >\r\n            {`Turn One click ${oneClickOn ? \"off\" : \"on\"}`}\r\n          </button>\r\n          <span className={\"grid-video\"}>\r\n            {\" \"}\r\n            <img\r\n              src={window.location.origin + \"/icons/youtube.png\"}\r\n              alt={\"Video\"}\r\n              onClick={openLiveStream(market)}\r\n            />\r\n          </span>\r\n          <h1>\r\n            {marketOpen\r\n              ? `${new Date(\r\n                market.marketStartTime\r\n              ).toLocaleTimeString()} ${market.marketName} ${\r\n              market.event.venue || \"\"\r\n              }`\r\n              : \"No Event Selected\"}\r\n          </h1>\r\n          {oneClickOn ? (\r\n            <React.Fragment>\r\n              <div id=\"one-click-stake\">\r\n                <button>Stake</button>\r\n                {stakeBtns.map(stake => (\r\n                  <button\r\n                    style={{background: getOrderBtnBG(\"STAKE\", stake, oneClickStake, -70)}}\r\n                    onClick={setStakeOneClick(stake)}>\r\n                    {stake}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <br />\r\n              <div id=\"one-click-liability\">\r\n                <button>Liability</button>\r\n                {layBtns.map(stake => (\r\n                  <button\r\n                  style={{background: getOrderBtnBG(\"LAY\", stake, oneClickStake, -70)}}\r\n                  onClick={setStakeOneClick(stake)}>\r\n                  {stake}\r\n                </button>\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          ) : null}\r\n          {renderRaceStatus(marketOpen, status, inPlay)}\r\n          <span id=\"matched-bets\">\r\n            {marketOpen\r\n              ? `Matched: ${formatCurrency(\r\n                country.localeCode,\r\n                country.currencyCode,\r\n                sumMatchedBets(ladder)\r\n              )}`\r\n              : null}\r\n          </span>\r\n        </th>\r\n      </tr>\r\n      <tr id=\"grid-subheader\">\r\n        {/* The Cash out figure simply adds all current profit and losses together\r\n            If you click it, then it should place N bets (or how ever many you need)\r\n            to close those positions/\r\n        */}\r\n        <th id=\"market-cashout\">\r\n          <span>Market Cashout</span>\r\n          <span style={{ color: marketCashout < 0 ? \"red\" : marketCashout > 0 ? \"#01CC41\" : \"#D3D3D3\" }} onClick = {() => {\r\n              const hedgedBets = getHedgedBetsToMake(market.marketId, bets, ltpList)\r\n\r\n              if (hedgedBets.length > 0) {\r\n                const recursivePlaceHedge = (index, unmatchedBets) => {\r\n\r\n                  const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n\r\n                  onPlaceOrder({\r\n                    marketId: market.marketId,\r\n                    side: hedgedBets[index].side,\r\n                    size: hedgedBets[index].stake,\r\n                    price: hedgedBets[index].buyPrice,\r\n                    selectionId: hedgedBets[index].selectionId,\r\n                    customerStrategyRef: referenceStrategyId,\r\n                    unmatchedBets: unmatchedBets,\r\n                    matchedBets: bets.matched,\r\n                    orderCompleteCallBack: (betId, newUnmatchedBets) => recursivePlaceHedge(index + 1, newUnmatchedBets)\r\n                  })\r\n                }\r\n\r\n                recursivePlaceHedge(0, bets.unmatched)\r\n                \r\n              }\r\n            }}>{marketCashout}</span>\r\n        </th>\r\n        <th colSpan=\"2\"></th>\r\n        <th></th>\r\n        <th></th>\r\n        <th>\r\n          <span>Back</span>\r\n        </th>\r\n        <th>\r\n          <span>Lay</span>\r\n        </th>\r\n        <th></th>\r\n        <th></th>\r\n        <th></th>\r\n        <th></th>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/market\";\r\nimport { iconForEvent } from \"../../utils/EventIcons\";\r\nimport { placeOrder } from \"../../actions/order\";\r\nimport { calcBackProfit } from \"../../utils/PriceCalculator\";\r\nimport { isHedgingOnSelectionAvailable } from \"../../utils/TradingStategy/HedingCalculator\";\r\nimport { selectionHasBets } from \"../../utils/Bets/SelectionHasBets\";\r\nimport crypto from 'crypto'\r\n\r\nconst GridDetailCell = props => {\r\n\r\n  const selectionMatchedBets = Object.values(props.bets.matched).filter(bet => parseInt(bet.selectionId) === parseInt(props.runner.selectionId))\r\n\r\n  const side = selectionMatchedBets.reduce((a, b) => a + calcBackProfit(b.size, b.price, b.side === \"BACK\" ? 0 : 1), 0) > 0 ? \"BACK\" : \"LAY\"\r\n\r\n  const hedgeSize = selectionMatchedBets !== undefined ?\r\n    selectionMatchedBets.reduce((a, b) => {\r\n      return a + b.size\r\n    }, 0) : 0;\r\n\r\n  const handleImageError = () => e => {\r\n    e.target.onerror = null;\r\n    e.target.src = iconForEvent(parseInt(props.sportId));\r\n  };\r\n\r\n  return (\r\n    <td\r\n      className=\"grid-runner-details\"\r\n      onClick={e => {\r\n        props.onSelectRunner(props.runner);\r\n      }}\r\n    >\r\n      <img src={props.logo} alt={\"\"} onError={handleImageError()} />\r\n      <span>{`${props.number}${props.name}`}</span>\r\n      <span style={{ background: props.bg }}>{props.ltp[0] ? props.ltp[0] : \"\"}</span>\r\n\r\n      <div className={\"grid-pl\"}>\r\n        <span style={{\r\n          color: !isHedgingOnSelectionAvailable(props.market.marketId, props.runner.selectionId, props.bets)\r\n            ? \"#D3D3D3\" : props.hedge < 0 ? \"red\" : \"#01CC41\"\r\n        }}\r\n          onClick={() => {\r\n            if (isHedgingOnSelectionAvailable(props.market.marketId, props.runner.selectionId, props.bets)) {\r\n              const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n              props.onPlaceOrder({\r\n                marketId: props.market.marketId,\r\n                side: side,\r\n                size: hedgeSize,\r\n                price: props.ltp[0],\r\n                selectionId: props.runner.selectionId,\r\n                customerStrategyRef: referenceStrategyId,\r\n                unmatchedBets: props.bets.unmatched,\r\n                matchedBets: props.bets.matched,\r\n              });\r\n            }\r\n          }}>\r\n          {selectionHasBets(props.market.marketId, props.runner.selectionId, props.bets) ? props.hedge : ''}\r\n        </span>\r\n        <span style={{ color: props.PL.color }}>{props.PL.val}</span>\r\n        <span>{props.tv[0] ? Math.floor(props.tv[0]).toLocaleString() : \"\"}</span>\r\n      </div>\r\n    </td>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSelectRunner: runner => dispatch(actions.setRunner(runner)),\r\n    onPlaceOrder: order => dispatch(placeOrder(order)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GridDetailCell);","const selectionHasBets = (marketId, selectionId, bets) => {\r\n    let selectionBets = Object.values(bets.matched)\r\n        .filter(bet => bet.marketId === marketId && bet.selectionId == selectionId);\r\n\r\n    return Object.values(selectionBets).length > 0;\r\n};\r\n\r\nexport { selectionHasBets };","import React from \"react\";\r\n\r\nexport default () => (\r\n  <td\r\n    className=\"grid-cell\"\r\n  >\r\n  </td>\r\n);","\r\n/**\r\n * This function is used to deconstruct the ladder data when mapping through ladders\r\n * @param {object} ladder - Ladder information for a runner\r\n * @return {data} The deconstructed ladder\r\n */\r\nconst DeconstructLadder = ladder => {\r\n  const data = {\r\n    ltp: ladder.ltp ? ladder.ltp : [null, null],\r\n    tv: ladder.tv ? ladder.tv : null,\r\n    color: \"#FFFFFF\"\r\n  };\r\n\r\n\r\n  data.bg =\r\n    data.ltp[0] < data.ltp[1] // #0AFD03 (Green Lower LTP)\r\n      ? \"#0AFD03\"\r\n      : data.ltp[0] > data.ltp[1] // #FC0700 (Red Higher LTP)\r\n        ? \"#FC0700\"\r\n        : data.ltp[0] === data.ltp[1] // #FFFF00 (Yellow Same LTP)\r\n          ? \"#FFFF00\"\r\n          : \"#FFF\" // #FFF (No Value)\r\n\r\n  if (ladder.atb) {\r\n    data.atb = ladder.atb;\r\n  }\r\n  if (ladder.atl) {\r\n    data.atl = ladder.atl;\r\n  }\r\n  if (ladder.batb) {\r\n    data.batb = ladder.batb;\r\n  }\r\n  if (ladder.batl) {\r\n    data.batl = ladder.batl;\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport { DeconstructLadder };\r\n","import { iconForEvent } from \"./EventIcons\";\r\n\r\n/**\r\n * This function is used to deconstruct the runner's data\r\n * @param {object} runner - Ladder information for a runner\r\n * @return {data} The deconstructed runner\r\n */\r\nconst DeconstructRunner = (runner, sportId) => {\r\n  sportId = parseInt(sportId);\r\n  const data = {\r\n    name: runner.runnerName,\r\n    number: runner.metadata.CLOTH_NUMBER\r\n      ? runner.metadata.CLOTH_NUMBER + \". \"\r\n      : \"\",\r\n    logo: \r\n     runner.metadata.COLOURS_FILENAME && sportId === 7\r\n      ? `https://content-cache.cdnbf.net/feeds_images/Horses/SilkColours/${runner.metadata.COLOURS_FILENAME}`\r\n      : iconForEvent(sportId),\r\n    order: runner.order\r\n  };\r\n  return data;\r\n};\r\n\r\nexport { DeconstructRunner };\r\n","import React from \"react\";\r\nimport { iconForEvent } from \"../../utils/EventIcons\";\r\n\r\nexport default ({ sportId, name, number, logo, onSelectRunner }) => (\r\n  <td\r\n    className=\"grid-runner-details\"\r\n    onClick={onSelectRunner}\r\n  >\r\n    <img src={logo} alt={\"\"} onError={e => {\r\n      e.target.onerror = null;\r\n      e.target.src = iconForEvent(parseInt(sportId));\r\n    }} />\r\n    <span>{`${number}${name}`}</span>\r\n  </td>\r\n);","import React from \"react\";\r\nimport GridDetailSuspCell from \"./GridDetailSuspCell\";\r\nimport { DeconstructRunner } from \"../../utils/DeconstructRunner\";\r\n\r\nexport default ({sportId, nonRunners, runners, selectRunner}) => {\r\n    return Object.keys(nonRunners).map(key => {\r\n        const { logo } = DeconstructRunner(runners[key], sportId);\r\n        return (\r\n            <tr className={\"grid-non-runner\"}>\r\n                <GridDetailSuspCell\r\n                    sportId={sportId}\r\n                    name={runners[key].runnerName}\r\n                    number={runners[key].metadata.CLOTH_NUMBER}\r\n                    logo={logo}\r\n                    onSelectRunner={selectRunner(runners[key])}\r\n                />\r\n                {Array(10).fill(<td></td>)}\r\n            </tr>\r\n        );\r\n    });\r\n};","import React from \"react\";\r\nimport GridDetailSuspCell from \"./GridDetailSuspCell\";\r\nimport { DeconstructRunner } from \"../../utils/DeconstructRunner\";\r\n\r\nexport default ({ladder, runners, selectRunner, eventId}) => {\r\n    return Object.keys(ladder).map(key => {\r\n        const { name, number, logo } = DeconstructRunner(runners[key], eventId);\r\n        return (\r\n            <tr>\r\n                <GridDetailSuspCell\r\n                    name={name}\r\n                    number={number}\r\n                    logo={logo}\r\n                    onSelectRunner={selectRunner(runners[key])}\r\n                />\r\n                {Array(10).fill(<td></td>)}\r\n            </tr>\r\n        );\r\n    });\r\n};","import React from \"react\";\r\nimport { LightenDarkenColor } from \"../../utils/ColorManipulator\";\r\nimport crypto from 'crypto';\r\n\r\nexport default ({ runnerId, order, orderProps, toggleStakeAndLiabilityButtons, toggleBackAndLay, updateOrderSize, updateOrderPrice, toggleOrderRowVisibility, onPlaceOrder, market, bets, price, side, size }) => {\r\n    return (\r\n        <tr style={{\r\n            background: orderProps.bg\r\n        }}>\r\n            {order.visible ? (\r\n                <td colSpan={11}>\r\n                    <ul\r\n                        className={\"grid-order-row\"}\r\n                    >\r\n                        <li onClick={toggleStakeAndLiabilityButtons({ id: runnerId })}>\r\n                            <img\r\n                                src={`${window.location.origin}/icons/change.png`}\r\n                                alt={\"Toggle\"}\r\n                            />\r\n                            {orderProps.text}\r\n                        </li>\r\n\r\n                        {orderProps.prices.map(size => {\r\n                            return (\r\n                                <li\r\n                                    style={{ background: size === order.stake ? LightenDarkenColor(orderProps.bg, -20) : \"\" }}\r\n                                    onClick={\r\n                                        updateOrderSize({\r\n                                            id: runnerId,\r\n                                            backLay: order.backLay,\r\n                                            stake: size\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    {size}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                        <span\r\n                            className={\"toggle-back-lay\"}\r\n                            onClick={toggleBackAndLay({\r\n                                id: runnerId,\r\n                                backLay: order.backLay ^ 1\r\n                            })}\r\n                        >\r\n                            {orderProps.text2}\r\n                        </span>\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"stake\"\r\n                            value={order.stake}\r\n                            onChange={\r\n                                updateOrderSize({\r\n                                    id: runnerId,\r\n                                    backLay: order.backLay\r\n                                })\r\n                            }\r\n                        ></input>\r\n                        <span>@</span>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            min=\"1\"\r\n                            max=\"1000\"\r\n                            value={order.price}\r\n                            onChange={\r\n                                updateOrderPrice({\r\n                                    id: runnerId\r\n                                })\r\n                            }\r\n                        ></input>\r\n\r\n                        <button className={\"execute-order-btn\"}\r\n                            onClick={() => {\r\n                                const referenceStrategyId = crypto.randomBytes(15).toString('hex').substring(0, 15)\r\n                                onPlaceOrder({\r\n                                    marketId: market.marketId,\r\n                                    side: side,\r\n                                    size: size,\r\n                                    price: price,\r\n                                    selectionId: runnerId,\r\n                                    customerStrategyRef: referenceStrategyId,\r\n                                    unmatchedBets: bets.unmatched,\r\n                                    matchedBets: bets.matched,\r\n                                })\r\n                            }}\r\n                        >Submit</button>\r\n\r\n                        <span className={\"grid-img-container\"}>\r\n                            <a\r\n                                href={\"#\"}\r\n                                onClick={() => {\r\n                                    return false;\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    src={window.location.origin + \"/icons/error.png\"}\r\n                                    alt={\"Close\"}\r\n                                    onClick={\r\n                                        toggleOrderRowVisibility({\r\n                                            id: runnerId,\r\n                                            visible: false\r\n                                        })\r\n                                    }\r\n                                />\r\n                            </a>\r\n                        </span>\r\n                    </ul>\r\n                </td>\r\n            ) : null}\r\n        </tr>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default ({ marketStatus }) => (\r\n    <p\r\n        style={marketStatus !== \"SUSPENDED\" ? { display: \"none\" } : {}}\r\n        id=\"suspended-message\"\r\n    >\r\n        {marketStatus}\r\n    </p>\r\n);","import React, { useState, createRef } from \"react\";\r\nimport $ from \"jquery\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../actions/market\";\r\nimport { setStakeInOneClick } from \"../../actions/settings\";\r\nimport GridHeader from \"./GridHeader\";\r\nimport GridDetailCell from \"./GridDetailCell\";\r\nimport EmptyCell from \"./EmptyCell\";\r\nimport { DeconstructLadder } from \"../../utils/ladder/DeconstructLadder\";\r\nimport { DeconstructRunner } from \"../../utils/DeconstructRunner\";\r\nimport { formatCurrency } from \"../../utils/NumberFormat\";\r\nimport { calcBackProfit, colorForBack } from \"../../utils/PriceCalculator\";\r\nimport { marketHasBets, getPLForRunner } from \"../../utils/Bets/getProfitAndLoss\";\r\nimport NonRunners from \"./NonRunner\";\r\nimport SuspendedGrid from \"./SuspendedGrid\";\r\nimport GridOrderRow from \"./GridOrderRow\";\r\nimport { placeOrder } from \"../../actions/order\";\r\nimport { getMarketCashout } from \"../../utils/Bets/GetMarketCashout\";\r\nimport { calcHedgedPL2 } from \"../../utils/TradingStategy/HedingCalculator\";\r\nimport { isValidPrice } from \"../../utils/Bets/Validator\";\r\nimport SuspendedWarning from \"./SuspendedWarning\";\r\n\r\nconst Grid = props => {\r\n\t\r\n\tconst [rowHovered, setRowHovered] = useState(null);\r\n\tconst [activeOrder, setActiveOrder] = useState(null);\r\n\tconst [ordersVisible, setOrdersVisible] = useState(0);\r\n\tconst oneClickRef = createRef();\r\n\r\n\tconst handlePriceClick = (key, backLay, odds) => e => {\r\n\t\tif (!props.oneClickOn) {\r\n\t\t\tprops.onUpdateOrder({\r\n\t\t\t\tid: key,\r\n\t\t\t\tvisible: true,\r\n\t\t\t\tbackLay: backLay,\r\n\t\t\t\tprice: odds\r\n\t\t\t});\r\n\t\t\tsetOrdersVisible(ordersVisible + 1);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handlePriceHover = key => e => {\r\n\t\tsetRowHovered(key);\r\n\t\t$(e.currentTarget).one(\"mouseleave\", e => {\r\n\t\t\tsetRowHovered(null);\r\n\t\t});\r\n\t}\r\n\r\n\tconst toggleBackAndLay = (order) => e => {\r\n\t\tprops.onToggleBackAndLay({id: order.id});\r\n\t\tsetActiveOrder(Object.assign(activeOrder || {}, { backLay: order.backLay }));\r\n\t};\r\n\r\n\tconst toggleOneClick = () => e => {\r\n\t\tprops.onToggleOneClick(!props.oneClickOn);\r\n\t\tconst node = oneClickRef.current;\r\n\t\tprops.oneClickOn ? node.blur() : node.focus();\r\n\t};\r\n\r\n\tconst toggleStakeAndLiabilityButtons = data => e => {\r\n\t\tprops.onToggleStakeAndLiability(data);\r\n\t};\r\n\r\n\tconst toggleOrderRowVisibility = data => e => {\r\n\t\tprops.onUpdateOrderVisibility(data);\r\n\t\tsetActiveOrder(null);\r\n\t\tsetOrdersVisible(ordersVisible - 1);\r\n\t};\r\n\r\n\tconst setStakeInOneClick = stake => e => {\r\n\t\tprops.setStakeInOneClick(stake);\r\n\t};\r\n\r\n\tconst updateOrderSize = data => e => {\r\n\t\t// Size comes from the textfield input from event if not sent from the button\r\n\t\tif (!data.stake) {\r\n\t\t\tdata.stake = e.target.value;\r\n\t\t}\r\n\r\n\t\tprops.onUpdateOrderValue(data);\r\n\t\tsetActiveOrder(data);\r\n\t};\r\n\r\n\tconst updateOrderPrice = data => e => {\r\n\t\tdata.price = parseInt(e.target.value);\r\n\t\t\r\n\t\tif (isValidPrice(data.price)) {\r\n\t\t\tprops.onUpdateOrderPrice(data);\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectRunner = runner => e => {\r\n\t\tprops.onSelectRunner(runner);\r\n\t};\r\n\r\n\tconst renderRow = (betOdds, bestOdds, key, backLay) => {\r\n\t\t// Fill all empty cells if no data found\r\n\t\tif (!betOdds) return Array(5).fill(<EmptyCell />);\r\n\r\n\t\tconst rows = [];\r\n\r\n\t\tfor (var i = 0; i < betOdds.length; i++) {\r\n\t\t\trows.push(createCell(betOdds[i][0], betOdds[i][1], key, backLay));\r\n\t\t\tif (i === 4) break;\r\n\t\t}\r\n\r\n\t\t// Fill the remaining columns with empty cells\r\n\t\twhile (rows.length < 5) {\r\n\t\t\trows.push(<EmptyCell />);\r\n\t\t}\r\n\r\n\t\treturn rows;\r\n\t};\r\n\r\n\tconst createCell = (odds, matched, key, backLay) => {\r\n\t\treturn (\r\n\t\t\t<td\r\n\t\t\t\tclassName=\"grid-cell\"\r\n\t\t\t\tonMouseEnter={handlePriceHover(key)}\r\n\t\t\t\tonClick={handlePriceClick(key, backLay, odds)}\r\n\t\t\t>\r\n\t\t\t\t<span>{odds}</span>\r\n\t\t\t\t<span>{matched}</span>\r\n\t\t\t</td>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderProfitAndLossAndHedge = (order, color) => {\r\n\t\treturn {\r\n\t\t\tval: formatCurrency(\r\n\t\t\t\tprops.localeCode,\r\n\t\t\t\tprops.currencyCode,\r\n\t\t\t\tcalcBackProfit(order.stake, order.price, order.backLay)\r\n\t\t\t),\r\n\t\t\tcolor: color\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderTableData = () => {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{renderRunners()}\r\n\t\t\t\t<NonRunners\r\n\t\t\t\t\tsportId={props.market.eventType.id}\r\n\t\t\t\t\tnonRunners={props.nonRunners}\r\n\t\t\t\t\trunners={props.runners}\r\n\t\t\t\t\tselectRunner={selectRunner}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderRunners = () => {\r\n\t\treturn Object.keys(props.ladder).map(key => {\r\n\t\t\tconst { atb, atl, batb, batl, ltp, tv, bg } = DeconstructLadder(\r\n\t\t\t\tprops.ladder[key]\r\n\t\t\t);\r\n\t\t\tconst { name, number, logo, order } = DeconstructRunner(props.runners[key], props.market.eventType.id);\r\n\r\n\t\t\tconst orderProps =\r\n\t\t\t\torder.stakeLiability === 0\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\ttext: \"STAKE\",\r\n\t\t\t\t\t\ttext2: \"BACK\",\r\n\t\t\t\t\t\tprices: props.stakeBtns\r\n\t\t\t\t\t}\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\ttext: \"LIABILITY\",\r\n\t\t\t\t\t\ttext2: \"LAY\",\r\n\t\t\t\t\t\tprices: props.layBtns\r\n\t\t\t\t\t};\r\n\r\n\t\t\torderProps.text2 = order.backLay === 0 ? \"BACK\" : \"LAY\";\r\n\t\t\torderProps.bg = order.backLay === 0 ? \"#DBEFFF\" : \"#FEE9EE\";\r\n\r\n\r\n\t\t\tconst profitArray = Object.values(props.bets.matched).filter(bet => bet.selectionId == props.runners[key].selectionId).map(bet => (bet.side === \"LAY\" ? -1 : 1) * calcHedgedPL2(parseFloat(bet.size), parseFloat(bet.price), parseFloat(ltp[0])));\r\n\t\t\tconst profit = (-1 * profitArray.reduce((a, b) => a - b, 0)).toFixed(2);\r\n            \r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<GridDetailCell\r\n\t\t\t\t\t\t\tsportId={props.market.eventType.id}\r\n\t\t\t\t\t\t\tmarket={props.market}\r\n\t\t\t\t\t\t\trunner={props.runners[key]}\r\n\t\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\t\tnumber={number}\r\n\t\t\t\t\t\t\tlogo={logo}\r\n\t\t\t\t\t\t\tltp={ltp}\r\n\t\t\t\t\t\t\ttv={tv}\r\n\t\t\t\t\t\t\tbets={props.bets}\r\n\t\t\t\t\t\t\tPL={\r\n\t\t\t\t\t\t\t\tmarketHasBets(props.market.marketId, props.bets) ?\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tval: formatCurrency(\r\n\t\t\t\t\t\t\t\t\t\t\tprops.localeCode,\r\n\t\t\t\t\t\t\t\t\t\t\tprops.currencyCode,\r\n\t\t\t\t\t\t\t\t\t\t\tgetPLForRunner(props.market.marketId, parseInt(key), props.bets)\r\n\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\tcolor: colorForBack(order.backLay, getPLForRunner(props.market.marketId, parseInt(key), props.bets))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\torder.visible && rowHovered === key && activeOrder\r\n\t\t\t\t\t\t\t\t\t\t? renderProfitAndLossAndHedge(order, colorForBack(order.backLay))\r\n\t\t\t\t\t\t\t\t\t\t: rowHovered && rowHovered !== key && activeOrder\r\n\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\trenderProfitAndLossAndHedge(order, colorForBack(activeOrder.backLay ^ 1))\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t{ val: \"\", color: \"\" }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\thedge = {profit}\r\n\t\t\t\t\t\t\tbg={bg}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{renderRow(atb, batb, key, 0).reverse()}\r\n\t\t\t\t\t\t{renderRow(atl, batl, key, 1)}\r\n\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t<GridOrderRow\r\n\t\t\t\t\t\trunnerId={key}\r\n\t\t\t\t\t\torder={order}\r\n\t\t\t\t\t\torderProps={orderProps}\r\n\t\t\t\t\t\ttoggleStakeAndLiabilityButtons={toggleStakeAndLiabilityButtons}\r\n\t\t\t\t\t\ttoggleBackAndLay={toggleBackAndLay}\r\n\t\t\t\t\t\tupdateOrderSize={updateOrderSize}\r\n\t\t\t\t\t\tupdateOrderPrice={updateOrderPrice}\r\n\t\t\t\t\t\ttoggleOrderRowVisibility={toggleOrderRowVisibility}\r\n\t\t\t\t\t\tonPlaceOrder = {props.onPlaceOrder}\r\n\t\t\t\t\t\tmarket = {props.market}\r\n\t\t\t\t\t\tbets={props.bets}\r\n\t\t\t\t\t\tprice = {props.market.runners[key] ? props.market.runners[key].order.price : 0}\r\n\t\t\t\t\t\tside = {activeOrder && activeOrder.side == 0 ? \"BACK\" : \"LAY\"}\r\n\t\t\t\t\t\tsize = {activeOrder ? activeOrder.stake : 0}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst renderSuspended = () => {\r\n\t\treturn (\r\n\t\t\t<SuspendedGrid\r\n\t\t\t\tladder={props.ladder}\r\n\t\t\t\trunners={props.runners}\r\n\t\t\t\tselectRunner={selectRunner}\r\n\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\tconst ltpSelectionIdObject = {};\r\n\r\n\tObject.keys(props.ladder).map(key => {\r\n\t\tconst { ltp, } = DeconstructLadder(\r\n\t\t\tprops.ladder[key]\r\n\t\t);\r\n\t\tltpSelectionIdObject[key] = ltp[0]\r\n\t});\r\n\r\n\tconst marketCashout = getMarketCashout(props.market.marketId, props.bets, props.ladder)\r\n\t\r\n\treturn (\r\n\t\t<div id=\"grid-container\">\r\n\t\t\t<table\r\n\t\t\t\tstyle={props.marketStatus === \"SUSPENDED\" ? { opacity: 0.75 } : {}}\r\n\t\t\t\tclassName={\"grid-view\"}\r\n\t\t\t>\r\n\t\t\t\t<SuspendedWarning marketStatus={props.marketStatus} />\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<GridHeader\r\n\t\t\t\t\t\tmarket={props.market}\r\n\t\t\t\t\t\tladder={props.ladder}\r\n\t\t\t\t\t\tmarketOpen={props.marketOpen}\r\n\t\t\t\t\t\tinPlay={props.inPlay}\r\n\t\t\t\t\t\tstatus={props.marketStatus}\r\n\t\t\t\t\t\tcountry={{\r\n\t\t\t\t\t\t\tlocaleCode: props.localeCode,\r\n\t\t\t\t\t\t\tcountryCode: props.countryCode\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\toneClickRef={oneClickRef}\r\n\t\t\t\t\t\toneClickOn={props.oneClickOn}\r\n\t\t\t\t\t\ttoggleOneClick={toggleOneClick}\r\n\t\t\t\t\t\toneClickStake={props.oneClickStake}\r\n\t\t\t\t\t\tsetStakeOneClick={setStakeInOneClick}\r\n\t\t\t\t\t\tstakeBtns={props.stakeBtns}\r\n\t\t\t\t\t\tlayBtns={props.layBtns}\r\n\t\t\t\t\t\tbets={props.bets}\r\n\t\t\t\t\t\tltpList={ltpSelectionIdObject}\r\n\t\t\t\t\t\tonPlaceOrder={props.onPlaceOrder}\r\n\t\t\t\t\t\tmarketCashout={marketCashout}\r\n\t\t\t\t\t/>\t\r\n\t\t\t\t\t{props.marketOpen\r\n\t\t\t\t\t\t? props.marketStatus === \"SUSPENDED\"\r\n\t\t\t\t\t\t\t? renderSuspended()\r\n\t\t\t\t\t\t\t: props.marketStatus === \"OPEN\" || props.marketStatus === \"RUNNING\"\r\n\t\t\t\t\t\t\t\t? renderTableData()\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t: null}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\toneClickOn: state.market.oneClickOn,\r\n\t\toneClickStake: state.settings.stake,\r\n\t\tcurrentEvent: state.sports.currentSport.currentEvent,\r\n\t\tmarketOpen: state.market.marketOpen,\r\n\t\tmarketStatus: state.market.status,\r\n\t\tinPlay: state.market.inPlay,\r\n\t\tmarket: state.market.currentMarket,\r\n\t\tselection: state.market.runnerSelection,\r\n\t\tladder: state.market.ladder,\r\n\t\trunners: state.market.runners,\r\n\t\tnonRunners: state.market.nonRunners,\r\n\t\tstakeBtns: state.settings.stakeBtns,\r\n\t\tlayBtns: state.settings.layBtns,\r\n\t\tcountryCode: state.account.countryCode,\r\n\t\tcurrencyCode: state.account.currencyCode,\r\n\t\tlocaleCode: state.account.localeCode,\r\n\t\tgraph: state.graph,\r\n\t\tbets: state.order.bets,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonSelectRunner: runner => dispatch(actions.setRunner(runner)),\r\n\t\tonUpdateRunners: runners => dispatch(actions.loadRunners(runners)),\r\n\t\tonUpdateOrder: order => dispatch(actions.updateOrder(order)),\r\n\t\tonUpdateOrderValue: val => dispatch(actions.updateOrderValue(val)),\r\n\t\tonUpdateOrderPrice: price => dispatch(actions.updateOrderPrice(price)),\r\n\t\tonUpdateOrderVisibility: settings =>\r\n\t\t\tdispatch(actions.toggleVisibility(settings)),\r\n\t\tonToggleStakeAndLiability: value =>\r\n\t\t\tdispatch(actions.toggleStakeAndLiability(value)),\r\n\t\tonToggleBackAndLay: value => dispatch(actions.toggleBackAndLay(value)),\r\n\t\tonToggleOneClick: active => dispatch(actions.toggleOneClick(active)),\r\n\t\tsetStakeInOneClick: stake => dispatch(setStakeInOneClick(stake)),\r\n\t\tonPlaceOrder: order => dispatch(placeOrder(order)),\r\n\t};\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Grid);\r\n","\r\n\r\nconst isValidPrice = price => {\r\n    if (typeof price === \"number\" && price >= 1.01 && price <= 1000) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { isValidPrice };","\r\n\r\nimport { twoDecimalPlaces } from \"../PriceCalculator\";\r\nimport { calcHedgedPL2 } from \"../TradingStategy/HedingCalculator\";\r\n\r\nconst getMarketCashout = (marketId, bets, ladder) => {\r\n\r\n    const reducer = (acc, cur) => acc.indexOf(cur.selectionId) === -1 ? acc.concat(cur.selectionId) : acc; \r\n    const selections = Object.values(bets.matched).reduce(reducer, []);\r\n\r\n    return twoDecimalPlaces(selections.map(selection =>\r\n        Object.values(bets.matched).filter(bet => bet.selectionId === selection && bet.marketId === marketId && ladder[bet.selectionId])\r\n        .map(bet => (bet.side === \"LAY\" ? -1 : 1) * calcHedgedPL2(parseFloat(bet.size), parseFloat(bet.price), parseFloat(ladder[bet.selectionId].ltp[0]) ))\r\n        .reduce((acc, tot) => acc + tot, 0))\r\n        .reduce((acc, tot) => acc + tot, 0));\r\n};\r\n\r\nexport { getMarketCashout };","/**\r\n * Parses web URL to find 'GET' variable marketId\r\n * @param {string} variable The marketId\r\n * @return {string} marketId or false\r\n */\r\nexport default variable => {\r\n  var query = window.location.search.substring(1);\r\n  var vars = query.split(\"&\");\r\n  for (var i = 0; i < vars.length; i++) {\r\n    var pair = vars[i].split(\"=\");\r\n    if (pair[0] === variable) {\r\n      return pair[1];\r\n    }\r\n  }\r\n  return false;\r\n};\r\n","import { createFullLadder, formatPriceKey, calcBackLayPercentages } from \"./CreateFullLadder\";\r\nimport { sortAsc, sortDes } from \"../Algorithms/Sort\";\r\n\r\nconst AddRunner = (key, data) => {\r\n  const runner = data;\r\n  runner.ltp = [runner.ltp, runner.ltp];\r\n  runner.tv = [runner.tv, runner.tv];\r\n  runner.fullLadder = createFullLadder();\r\n\r\n  runner.order = {\r\n    visible: false,\r\n    backLay: 0,\r\n    stakeLiability: 0,\r\n    stake: 2,\r\n    price: 0\r\n  };\r\n\r\n  sortDes(runner.atb);\r\n  sortAsc(runner.atl);\r\n\r\n  if (runner.atb) {\r\n    for (var i = 0; i < runner.atb.length; i++) {\r\n\r\n      let price = formatPriceKey(runner.atb[i][0]);\r\n      const matched = Math.floor(runner.atb[i][1]);\r\n\r\n      if (matched <= 0) {\r\n        runner.atb.splice(i, 1);\r\n        i--;\r\n      } else {\r\n        // Update the values in the full ladder: 1.01 - 1000\r\n        runner.fullLadder[price].odds = price;\r\n        runner.fullLadder[price].backMatched = matched;\r\n\r\n        // Alter the value to round down\r\n        runner.atb[i][1] = matched;\r\n      }\r\n    }\r\n  }\r\n  if (runner.atl) {\r\n    for (i = 0; i < runner.atl.length; i++) {\r\n\r\n      let price = formatPriceKey(runner.atl[i][0]);\r\n      const matched = Math.floor(runner.atl[i][1]);\r\n\r\n      if (matched <= 0) {\r\n        runner.atl.splice(i, 1);\r\n        i--;\r\n      } else {\r\n        // Update the values in the full ladder: 1.01 - 1000\r\n        runner.fullLadder[price].odds = price;\r\n        runner.fullLadder[price].layMatched = matched;\r\n\r\n        // Alter the value to round down\r\n        runner.atl[i][1] = matched;\r\n      }\r\n    }\r\n  }\r\n  runner.percent = calcBackLayPercentages(runner.fullLadder, runner.ltp[0]);\r\n  return runner;\r\n};\r\n\r\nexport { AddRunner };\r\n","const sortAsc = arr => {\r\n  if (!arr || arr.length <= 0) return [];\r\n\r\n  arr = arr.sort(function(a, b) {\r\n    return a[0] - b[0];\r\n  });\r\n  return arr;\r\n};\r\n\r\nconst sortDes = arr => {\r\n  if (!arr || arr.length <= 0) return [];\r\n\r\n  arr = arr.sort(function(a, b) {\r\n    return b[0] - a[0];\r\n  });\r\n  return arr;\r\n};\r\n\r\nexport { sortAsc, sortDes };\r\n","const SearchInsert = (nums, target, reversed) => {\r\n    var start = 0;\r\n    var end = nums.length - 1;\r\n\r\n    if (reversed) {\r\n        let temp = start;\r\n        start = end;\r\n        end = start;\r\n    }\r\n\r\n    var index = Math.floor((end - start) / 2) + start;\r\n    \r\n    if (nums.length === 0 || target > nums[nums.length-1]) {\r\n        // The target is beyond the end of this array.\r\n        index = nums.length;\r\n    }\r\n    else {\r\n        // Start in middle, divide and conquer.\r\n        while (start < end) {\r\n            // Get value at current index.\r\n            var value = nums[index][0];\r\n            \r\n            if (value === target) {\r\n                // Found our target.\r\n                break;\r\n            }\r\n            else if (target < value) {\r\n                // Target is lower in array, move the index halfway down.\r\n                end = index;\r\n            }\r\n            else {\r\n                // Target is higher in array, move the index halfway up.\r\n                start = index + 1;\r\n            }\r\n            \r\n            // Get next mid-point.\r\n            index = Math.floor((end - start) / 2) + start;\r\n        }\r\n    }\r\n    \r\n    return index;\r\n};\r\n\r\nexport { SearchInsert };","\r\nimport { SearchInsert } from \"../Algorithms/SearchInsert\";\r\nimport { formatPriceKey, calcBackLayPercentages } from \"../ladder/CreateFullLadder\";\r\n\r\nconst UpdateRunner = (ladder, rawData) => {\r\n\r\n  if (rawData.ltp) {\r\n    ladder.ltp = [rawData.ltp, ...ladder.ltp];\r\n  }\r\n  if (rawData.tv) {\r\n    ladder.tv = [rawData.tv, ladder.tv[0]];\r\n  }\r\n\r\n  // Update the atb values\r\n  if (rawData.atb) {\r\n\r\n    let newAtb = ladder.atb;\r\n\r\n    for (var j = 0; j < rawData.atb.length; j++) {\r\n\r\n      // Filter out values > 0 and < 1\r\n      if (rawData.atb[j][1] > 0 && Math.floor(rawData.atb[j][1] <= 0)) continue;\r\n\r\n      const price = rawData.atb[j][0];\r\n      const matched = Math.floor(rawData.atb[j][1]);\r\n\r\n      const index = SearchInsert(newAtb, price, true);\r\n\r\n      if (!newAtb[index]) continue;\r\n\r\n      if (matched <= 0) {\r\n        if (price === newAtb[index][0]) {\r\n          newAtb.splice(index, 1);\r\n          ladder.fullLadder[formatPriceKey(price)].backMatched = null;\r\n        }\r\n      }\r\n      else if (price === newAtb[index][0]) {\r\n        newAtb[index][1] = matched;\r\n        ladder.fullLadder[formatPriceKey(price)].backMatched = matched;\r\n      }\r\n      else {\r\n        newAtb.splice(index, 0, [price, matched]);\r\n        ladder.fullLadder[formatPriceKey(price)].backMatched = matched;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Update the atl values\r\n  if (rawData.atl) {\r\n\r\n    let newAtl = ladder.atl;\r\n\r\n    for (var j = 0; j < rawData.atl.length; j++) {\r\n\r\n      // Filter out values > 0 and < 1\r\n      if (rawData.atl[j][1] > 0 && Math.floor(rawData.atl[j][1] <= 0)) continue;\r\n\r\n      const price = rawData.atl[j][0];\r\n      const matched = Math.floor(rawData.atl[j][1]);\r\n\r\n      const index = SearchInsert(newAtl, price, false);\r\n\r\n      if (!newAtl[index]) continue;\r\n\r\n      if (matched <= 0) {\r\n        if (price === newAtl[index][0]) {\r\n          newAtl.splice(index, 1);\r\n          ladder.fullLadder[formatPriceKey(price)].layMatched = null;\r\n        }\r\n      }\r\n      else if (price === newAtl[index][0]) {\r\n        newAtl[index][1] = matched;\r\n        ladder.fullLadder[formatPriceKey(price)].layMatched = matched;\r\n      }\r\n      else {\r\n        newAtl.splice(index, 0, [price, matched]);\r\n        ladder.fullLadder[formatPriceKey(price)].layMatched = matched;\r\n      }\r\n    }\r\n  }\r\n\r\n  ladder.percent = calcBackLayPercentages(ladder.fullLadder, ladder.ltp[0]);\r\n\r\n  return ladder;\r\n}\r\n\r\nexport { UpdateRunner };","\r\n\r\nconst isPremiumActive = (now, end) => {\r\n    if (!end) {\r\n        return false;\r\n    }\r\n\r\n    end = new Date(end);\r\n\r\n    const timeDiff  = end - now;\r\n    const daysLeft      = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n    return daysLeft > 0;\r\n};\r\n\r\nconst getDate30DaysAhead = () => {\r\n    const now = new Date();\r\n\r\n    if (now.getMonth() == 11) {\r\n        return new Date(now.getFullYear() + 1, 0, 1);\r\n    } else {\r\n        return new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\r\n    }\r\n}\r\n\r\nexport { isPremiumActive, getDate30DaysAhead };","import React, { useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/settings';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\nimport { getDate30DaysAhead } from \"../utils/DateCalculator\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  paypal: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst FullScreenDialog = props => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (props.premiumMember) {\r\n      props.openPremiumDialog(false);\r\n    }\r\n  }, [props.premiumMember]);\r\n\r\n  return (\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={e => props.openPremiumDialog(false)}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={e => props.openPremiumDialog()}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sports Trader Pro Licence\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You are required to pay the monthly subscription fee of £9.99 in order to access Trader Pro's advanced features.\r\n          </DialogContentText>\r\n          <PaypalExpressBtn className={classes.paypal} env={'sandbox'} client={{\r\n            sandbox: 'ARDKtjP_BpHKUgh58tk1RsXHlxbdlmPC0FVhXRFX2zysVNxBMGnUSTPDAUCkKcQ9pwKYWx4slLhwCSZS',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n          }} currency={'GBP'} total={9.99}\r\n            onError={err => {\r\n              // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n              return;\r\n              // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n              // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n            }}\r\n            onSuccess={payment => {\r\n              // Congratulation, it came here means everything's fine!\r\n              props.setPremiumStatus(true);\r\n              props.openPremiumDialog(false);\r\n              payment.expiresIn = getDate30DaysAhead();\r\n              return fetch(\"/paypal-transaction-complete\", {\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify(payment)\r\n              });\r\n              // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n            }}\r\n            onCancel={data => {\r\n              // User pressed \"cancel\" or close Paypal's popup!\r\n              return;\r\n              // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n            }} />\r\n        </DialogContent>\r\n      </Dialog>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    open: state.settings.premiumPopupOpen,\r\n    premiumMember: state.settings.premiumMember\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    openPremiumDialog: open => dispatch(actions.openPremiumDialog(open)),\r\n    setPremiumStatus: isPremium => dispatch(actions.setPremiumStatus(isPremium))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FullScreenDialog);","\r\n\r\n\r\n/**\r\n * This function checks if the stoploss's corresponding order is matched.\r\n * @param {object} stopLossList - The object containing all the stoploss information.\r\n * @param {object} selectionId - The id that contains the stoploss that will be focused on. \r\n * @param {function} order - The current order state with sizeMatched and rfs.\r\n * @param {object} previousCheckForMatchArray - The object we have to update the value corresponding with the selectionId when the order is matched.\r\n * @return {object} The new checkForMatchInStopLoss.\r\n */\r\n\r\nexport const checkStopLossForMatch = (stopLossList, selectionId, order, previousCheckForMatchArray) => {\r\n    const checkForMatchInStopLoss = Object.assign({}, previousCheckForMatchArray)\r\n    // if the strategies are the same and all the order has been matched (STOPLOSS)\r\n\r\n    if (stopLossList[selectionId] !== undefined && stopLossList[selectionId].rfs === order.rfs && order.sr === 0) {\r\n        checkForMatchInStopLoss[selectionId].assignedIsOrderMatched = true;\r\n\r\n        fetch('/api/update-order', {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify(checkForMatchInStopLoss[selectionId])\r\n        })\r\n    }\r\n\r\n    return checkForMatchInStopLoss\r\n}\r\n\r\n\r\n/**\r\n * This function checks if the tick offset matches the percentage needed.\r\n * @param {object} tickOffsetList - The object containing all the tickOffset information.\r\n * @param {object} order - The current order state with sizeMatched and rfs. \r\n * @param {function} onPlaceOrder - The function we call when it matches the percentage needed.\r\n * @param {array} previousTickOffsetOrdersToRemove - The array we have to add the order to when it matches the percentage needed. \r\n * @param {object} previousCheckForMatchInTickOffset - The object we have to remove the order from when it reaches the percentage needed.\r\n * @param {object} unmatchedBets - The unmatchedBets that has to be passed into onPlaceOrder.\r\n * @param {object} matchedBets - The matchedBets that has to be passed into onPlaceOrder.\r\n * @return {object} The new {tickOffsetOrdersToRemove, checkForMatchInTickOffset}.\r\n */\r\nexport const checkTickOffsetForMatch = (tickOffsetList, order, onPlaceOrder, previousTickOffsetOrdersToRemove, previousCheckForMatchInTickOffset, unmatchedBets, matchedBets) => {\r\n\r\n    // if the strategies are the same and enough of the order has been matched (TICK OFFSET)\r\n    const tickOffsetItem = tickOffsetList[order.rfs]\r\n    let tickOffsetOrdersToRemove = [...previousTickOffsetOrdersToRemove];\r\n    let checkForMatchInTickOffset = Object.assign({}, previousCheckForMatchInTickOffset);\r\n\r\n    if (tickOffsetItem !== undefined && order.sm / tickOffsetItem.size >= tickOffsetItem.percentageTrigger / 100) {\r\n\r\n        onPlaceOrder({\r\n            marketId: tickOffsetItem.marketId,\r\n            selectionId: tickOffsetItem.selectionId,\r\n            side: tickOffsetItem.side === \"BACK\" ? \"LAY\" : \"BACK\",\r\n            size: tickOffsetItem.size,\r\n            price: tickOffsetItem.price, // this is the new price\r\n            unmatchedBets: unmatchedBets,\r\n            matchedBets: matchedBets\r\n        })\r\n\r\n        tickOffsetOrdersToRemove = tickOffsetOrdersToRemove.concat(checkForMatchInTickOffset[order.rfs])\r\n\r\n        delete checkForMatchInTickOffset[order.rfs];\r\n        console.log(tickOffsetOrdersToRemove)\r\n    }\r\n\r\n    return {\r\n        tickOffsetOrdersToRemove: tickOffsetOrdersToRemove,\r\n        checkForMatchInTickOffset: checkForMatchInTickOffset\r\n    }\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst DraggableGraph = props => {\r\n\r\n  return props.selection && props.graph.open ? (\r\n    <img\r\n      alt={\"Chart\"}\r\n      style={{pointerEvents: 'none'}}\r\n      src={`https://sportsiteexweb.betfair.com/betting/LoadRunnerInfoChartAction.do?marketId=${props.market.marketId.slice(\r\n        2,\r\n        props.market.marketId.length\r\n      )}&selectionId=${props.selection.selectionId}&handicap=0`}\r\n    />\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    marketOpen: state.market.marketOpen,\r\n    market: state.market.currentMarket,\r\n    selection: state.market.runnerSelection,\r\n    graph: state.graph\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DraggableGraph);\r\n","const stopEntryCheck = async (currentLTP, stopEntryArray, onPlaceOrder, unmatchedBets, matchedBets, testing = false) => {\r\n\r\n    let indexesToRemove = [];\r\n    let ordersToRemove = [];\r\n    \r\n    // eslint-disable-next-line no-loop-func\r\n    stopEntryArray.map((item, index) => {\r\n        if ((currentLTP < item.targetLTP && item.stopEntryCondition == '<' ) || (currentLTP == item.targetLTP && item.stopEntryCondition == '=' ) || (currentLTP > item.targetLTP && item.stopEntryCondition == '>' )) {\r\n            onPlaceOrder(Object.assign({}, item, {unmatchedBets: unmatchedBets, matchedBets: matchedBets}));\r\n            \r\n            indexesToRemove = indexesToRemove.concat(index);\r\n            ordersToRemove = ordersToRemove.concat(item);\r\n          }  \r\n        \r\n    })\r\n\r\n    if (ordersToRemove.length > 0) {\r\n        if (!testing) {\r\n          await fetch('/api/remove-orders', {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(ordersToRemove)\r\n          })\r\n        }\r\n    }\r\n\r\n\r\n    return indexesToRemove;\r\n}\r\n\r\nexport { stopEntryCheck };","import { checkStopLossHit } from '../TradingStategy/StopLoss'\r\nimport { stopEntryCheck } from '../TradingStategy/StopEntry'\r\n\r\n/**\r\n * This function checks if the LTP reaches the threshold that the stopEntry has.\r\n * @param {object} stopLossList - The object containing all the stopEntry information.\r\n * @param {number} selectionId - The id that contains the stopEntry that will be focused on. \r\n * @param {number} currentLTP - The current LTP we compare from\r\n * @param {function} onPlaceOrder - The method for placing an order. \r\n * @param {number} previousNewStopEntryList - The object modified after stopEntry orders are checked. \r\n * @param {object} unmatchedBets - The unmatchedBets that has to be passed into onPlaceOrder.\r\n * @param {object} matchedBets - The matchedBets that has to be passed into onPlaceOrder.\r\n * @return {object} The new stopEntry with the ones that passed the test removed.\r\n*/\r\nexport const stopEntryListChange = async (stopEntryList, selectionId, currentLTP, onPlaceOrder, previousNewStopEntryList, unmatchedBets, matchedBets, testing = false) => {\r\n    const stopEntryArray = stopEntryList[selectionId]\r\n    const newStopEntryList = Object.assign({}, previousNewStopEntryList)\r\n\r\n    if (stopEntryArray !== undefined) {\r\n        try {\r\n            const indexesToRemove = await stopEntryCheck(currentLTP, stopEntryArray, onPlaceOrder, unmatchedBets, matchedBets, testing);\r\n            console.log(stopEntryArray.length, indexesToRemove.length)\r\n            // if the array length has some items left, then keep it \r\n            if (stopEntryArray.length > indexesToRemove.length) {\r\n                console.log(stopEntryArray)\r\n                newStopEntryList[selectionId] = stopEntryArray.filter((item, index) => indexesToRemove.indexOf(index) === -1)\r\n            } else {\r\n                delete newStopEntryList[selectionId]\r\n            }\r\n        } catch (e) {}\r\n    }\r\n\r\n    return newStopEntryList\r\n}\r\n\r\n/**\r\n * This function checks if the the LTP increased and adds to the tickOffset if it did.\r\n * @param {object} stopLossList - The object containing all the stopLoss information.\r\n * @param {number} selectionId - The id that contains the stoploss that will be focused on. \r\n * @param {number} currentLTP - The current LTP we compare from\r\n * @param {number} oldMaxLadderLTP - The highest old LTP we compare to. \r\n * @return {object} The new stoploss with the changes to the tickOffset.\r\n*/\r\nexport const stopLossTrailingChange = (stopLossList, selectionId, currentLTP, oldMaxLadderLTP) => {\r\n    let adjustedStopLoss = Object.assign({}, stopLossList[selectionId])\r\n    if (stopLossList[selectionId].trailing && currentLTP > oldMaxLadderLTP) {\r\n        adjustedStopLoss.tickOffset = adjustedStopLoss.tickOffset + 1; \r\n    }\r\n    return adjustedStopLoss\r\n}\r\n\r\n\r\n/**\r\n * This function checks if the LTP reaches the threshold that the stopLoss has.\r\n * @param {object} adjustedStopLoss - The stoploss object that has it's trailing updated.\r\n * @param {object} selectionId - The id that contains the stoploss that will be focused on. \r\n * @param {number} currentLTP - The current LTP we compare from\r\n * @param {function} onPlaceOrder - The method for placing an order. \r\n * @param {array} stopLossOrdersToRemove - The orders that already were planned to be removed. \r\n * @param {object} previousAdjustedStopLossList - The stoplosslist that has to be adjusted.\r\n * @param {object} unmatchedBets - The unmatchedBets that has to be passed into onPlaceOrder.\r\n * @param {object} matchedBets - The matchedBets that has to be passed into onPlaceOrder.\r\n * @return {object} The new {adjustedStopLossList, stopLossOrdersToRemove}.\r\n*/\r\nexport const stopLossCheck = (adjustedStopLoss, selectionId, currentLTP, onPlaceOrder, stopLossOrdersToRemove, previousAdjustedStopLossList, unmatchedBets, matchedBets) => {\r\n\r\n    let newStopLossOrdersToRemove = [...stopLossOrdersToRemove];\r\n    const adjustedStopLossList = Object.assign({}, previousAdjustedStopLossList)\r\n\r\n    if (adjustedStopLoss.rfs === undefined || (adjustedStopLoss.rfs && adjustedStopLoss.assignedIsOrderMatched)) {\r\n        const stopLossCheck = checkStopLossHit(adjustedStopLoss.size, adjustedStopLoss.price, currentLTP, adjustedStopLoss.side.toLowerCase(), adjustedStopLoss.tickOffset, adjustedStopLoss.units.toLowerCase());\r\n        \r\n        if (stopLossCheck.targetMet) {\r\n            onPlaceOrder({\r\n                marketId: adjustedStopLoss.marketId,\r\n                selectionId: adjustedStopLoss.selectionId,\r\n                side: adjustedStopLoss.side,\r\n                size: adjustedStopLoss.size,\r\n                price: stopLossCheck.priceReached,\r\n                unmatchedBets: unmatchedBets,\r\n                matchedBets: matchedBets\r\n            })\r\n\r\n            newStopLossOrdersToRemove = newStopLossOrdersToRemove.concat(adjustedStopLoss);\r\n\r\n            delete adjustedStopLossList[selectionId];\r\n          \r\n        } else {\r\n            adjustedStopLossList[selectionId] = adjustedStopLoss;\r\n        }\r\n    }\r\n\r\n    return {\r\n        adjustedStopLossList: adjustedStopLossList,\r\n        stopLossOrdersToRemove: newStopLossOrdersToRemove\r\n    }\r\n    \r\n}","import React, { useEffect } from \"react\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/settings\";\r\nimport * as actions2 from \"../actions/market\";\r\nimport { updateStopLossList } from '../actions/stopLoss'\r\nimport { updateTickOffsetList } from \"../actions/tickOffset\";\r\nimport { updateStopEntryList } from \"../actions/stopEntry\";\r\nimport Loader from 'react-loader-spinner'\r\nimport Siderbar from \"./Sidebar\";\r\nimport HomeView from \"./HomeView/\";\r\nimport LadderView from \"./LadderView/\";\r\nimport GridView from \"./GridView/\";\r\nimport SocketContext from \"../SocketContext\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport getQueryVariable from \"../utils/GetQueryVariable\";\r\nimport { AddRunner } from \"../utils/ladder/AddRunner\";\r\nimport { UpdateRunner } from \"../utils/ladder/UpdateRunner\";\r\nimport { isPremiumActive } from \"../utils/DateCalculator\";\r\nimport PremiumPopup from \"./PremiumPopup\";\r\nimport { updateLayList } from \"../actions/lay\";\r\nimport { updateBackList } from \"../actions/back\";\r\nimport { checkTimeListAfter } from \"../utils/TradingStategy/BackLay\";\r\nimport { placeOrder, updateOrders } from \"../actions/order\";\r\nimport { updateFillOrKillList } from \"../actions/fillOrKill\";\r\nimport { checkStopLossForMatch, checkTickOffsetForMatch } from \"../utils/ExchangeStreaming/OCMHelper\";\r\nimport Draggable from \"react-draggable\";\r\nimport DraggableGraph from \"./DraggableGraph\";\r\nimport { stopLossTrailingChange, stopLossCheck, stopEntryListChange } from \"../utils/ExchangeStreaming/MCMHelper\";\r\nimport { calcHedgedPL2 } from \"../utils/TradingStategy/HedingCalculator\";\r\n\r\nconst App = props => {\r\n  const [cookies] = useCookies(['sessionKey', 'username']);\r\n\r\n  const loadSession = async () => {\r\n    await fetch(\r\n      `/api/load-session?sessionKey=${encodeURIComponent(\r\n        cookies.sessionKey\r\n      )}&email=${encodeURIComponent(cookies.username)}`\r\n    );\r\n  };\r\n\r\n  const loadSettings = async () => {\r\n    /**\r\n     * Fetch settings from the database and load them into redux state\r\n     * @return {Object} settings\r\n     *   User settings.\r\n     */\r\n    await fetch(`/api/get-user-settings`)\r\n      .then(res => res.json())\r\n      .then(settings => {\r\n        props.onToggleSounds(settings.sounds);\r\n        props.onToggleTools(settings.tools);\r\n        props.onToggleUnmatchedBets(settings.unmatchedBets);\r\n        props.onToggleMatchedBets(settings.matchedBets);\r\n        props.onToggleGraph(settings.graphs);\r\n        props.onToggleMarketInformation(settings.marketInfo);\r\n        props.onUpdateWinMarketsOnly(settings.winMarketsOnly);\r\n        props.onToggleRules(settings.rules);\r\n        props.onToggleLadderUnmatched(settings.ladderUnmatched);\r\n        props.onReceiveStakeBtns(settings.stakeBtns);\r\n        props.onReceiveLayBtns(settings.layBtns);\r\n      });\r\n\r\n    /**\r\n     * @return {Boolean} premiumStatus\r\n     *   Premium membership status required to access the LadderView.\r\n     */\r\n    await fetch(`/api/premium-status`)\r\n      .then(res => res.json())\r\n      .then(expiryDate => {\r\n        let now = new Date();\r\n        const isActive = isPremiumActive(now, expiryDate);\r\n        props.setPremiumStatus(isActive);\r\n      });\r\n  };\r\n\r\n  const loadMarket = async () => {\r\n    let marketId = getQueryVariable(\"marketId\");\r\n\r\n    // Check if the page has query parameter 'marketId'\r\n    // Load the market if found\r\n    if (marketId !== false) {\r\n      await fetch(`/api/get-market-info?marketId=${marketId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.result.length > 0) {\r\n            const runners = {};\r\n            for (let i = 0; i < data.result[0].runners.length; i++) {\r\n              let selectionId = data.result[0].runners[i].selectionId;\r\n              runners[selectionId] = data.result[0].runners[i];\r\n\r\n              // The Stake/Liability buttons for the GridView\r\n              runners[selectionId].order = {\r\n                visible: false,\r\n                backLay: 0,\r\n                stakeLiability: 0,\r\n                stake: 2,\r\n                price: 0\r\n              };\r\n            }\r\n\r\n            props.onUpdateRunners(runners);\r\n            props.onReceiveMarket(data.result[0]);\r\n            props.onSelectRunner(data.result[0].runners[0]);\r\n\r\n            // Subscribe to Market Change Messages (MCM) via the Exchange Streaming API\r\n            props.socket.emit(\"market-subscription\", {\r\n              marketId: data.result[0].marketId\r\n            });\r\n          }\r\n        });\r\n\r\n      let loadedBackOrders = {};\r\n      let loadedLayOrders = {};\r\n      let loadedStopEntryOrders = {};\r\n      let loadedTickOffsetOrders = {};\r\n      let loadedFillOrKillOrders = {};\r\n      let loadedStopLossOrders = {};\r\n      let loadedUnmatchedOrders = {};\r\n      let loadedMatchedOrders = {};\r\n\r\n\r\n      await fetch(`/api/get-all-orders`)\r\n        .then(res => res.json())\r\n        .then(async orders => {\r\n          const loadOrders = async orders => {\r\n            const currentOrders = await fetch(`/api/listCurrentOrders?marketId=${marketId}`).then(res => res.json()).then(res => res.currentOrders);\r\n            const currentOrdersObject = {};\r\n            currentOrders.map(item => {\r\n              currentOrdersObject[item.betId] = item;\r\n              currentOrdersObject[item.betId].price = item.averagePriceMatched;\r\n            })\r\n\r\n            orders.map(async order => {\r\n\r\n              if (order.marketId === marketId) {\r\n                switch (order.strategy) {\r\n                  case \"Back\":\r\n                    loadedBackOrders[order.selectionId] = loadedBackOrders[order.selectionId] === undefined ? [order] : loadedBackOrders[order.selectionId].concat(order)\r\n                    break;\r\n                  case \"Lay\":\r\n                    loadedLayOrders[order.selectionId] = loadedLayOrders[order.selectionId] === undefined ? [order] : loadedLayOrders[order.selectionId].concat(order)\r\n                    break;\r\n                  case \"Stop Entry\":\r\n                    loadedStopEntryOrders[order.selectionId] = loadedStopEntryOrders[order.selectionId] === undefined ? [order] : loadedStopEntryOrders[order.selectionId].concat(order);\r\n                    break;\r\n                  case \"Tick Offset\":\r\n                    loadedTickOffsetOrders[order.rfs] = order\r\n                    break;\r\n                  case \"Fill Or Kill\":\r\n                    // this should only keep the fill or kill if the order isn't completed already\r\n                    if (currentOrdersObject[order.betId] === \"EXECUTABLE\") {\r\n                      loadedFillOrKillOrders[order.betId] = order\r\n                    }\r\n                    break;\r\n                  case \"Stop Loss\":\r\n                    loadedStopLossOrders[order.selectionId] = order\r\n                    break;\r\n                  default:\r\n                    break;\r\n                }\r\n\r\n              }\r\n            })\r\n\r\n            // handle orders not in the there\r\n            Object.keys(currentOrdersObject).map(async betId => {\r\n              const order = currentOrdersObject[betId];\r\n              const orderData = {\r\n                strategy: \"None\",\r\n                marketId: order.marketId,\r\n                side: order.side,\r\n                price: order.price,\r\n                size: order.status === \"EXECUTION_COMPLETE\" ? order.sizeMatched : order.priceSize.size,\r\n                selectionId: order.selectionId,\r\n                rfs: order.customerStrategyRef ? order.customerStrategyRef : \"None\",\r\n                betId: betId\r\n              }\r\n\r\n              if (order.status === \"EXECUTION_COMPLETE\") {\r\n                loadedMatchedOrders[order.betId] = orderData;\r\n              } else if (order.status === \"EXECUTABLE\") {\r\n                loadedUnmatchedOrders[order.betId] = orderData;\r\n              }\r\n            })\r\n          }\r\n          await loadOrders(orders);\r\n        }\r\n        ).then(() => {\r\n          props.onChangeOrders({\r\n            matched: loadedMatchedOrders,\r\n            unmatched: loadedUnmatchedOrders\r\n          })\r\n          props.onChangeBackList(loadedBackOrders)\r\n          props.onChangeLayList(loadedLayOrders)\r\n          props.onChangeStopEntryList(loadedStopEntryOrders)\r\n          props.onChangeTickOffsetList(loadedTickOffsetOrders)\r\n          props.onChangeFillOrKillList(loadedFillOrKillOrders)\r\n          props.onChangeStopLossList(loadedStopLossOrders);\r\n        })\r\n    }\r\n  }\r\n\r\n  const loadData = async () => {\r\n    await loadSession();\r\n    await loadSettings();\r\n    await loadMarket();\r\n    props.setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(props.unmatchedBets).length > 0) {\r\n      props.socket.emit(\"order-subscription\", {\r\n        customerStrategyRefs: JSON.stringify(Object.values(props.unmatchedBets).map(bet => bet.rfs))\r\n      });\r\n    }\r\n  }, [Object.keys(props.unmatchedBets).length]);\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Listen for Market Change Messages from the Exchange Streaming socket and create/update them\r\n     * @param {obj} data The market change message data: { rc: [(atb, atl, batb, batl, tv, ltp, id)] }\r\n     */\r\n    props.socket.on(\"mcm\", async data => {\r\n\r\n      // Update the market status\r\n      if (data.marketDefinition) {\r\n        props.onMarketStatusChange(data.marketDefinition.status);\r\n        props.setInPlay(data.marketDefinition.inPlay);\r\n      }\r\n\r\n      var ladders = Object.assign({}, props.ladders);\r\n      \r\n      var nonRunners = Object.assign({}, props.nonRunners);\r\n\r\n      let adjustedStopLossList = Object.assign({}, props.stopLossList)\r\n      const adjustedBackList = {}\r\n      const adjustedLayList = {}\r\n      let newStopEntryList = Object.assign({}, props.stopEntryList);\r\n\r\n      let stopLossOrdersToRemove = [];\r\n\r\n      await Promise.all(data.rc.map(async rc => {\r\n        \r\n        if (rc.id in props.ladders) {\r\n          // Runner found so we update our object with the raw data\r\n          ladders[rc.id] = UpdateRunner(props.ladders[rc.id], rc);\r\n\r\n          const marketId = getQueryVariable(\"marketId\");\r\n\r\n          // Back and Lay\r\n          if (props.marketDefinition.marketStatus === \"RUNNING\") {\r\n            const adjustedBackOrderArray = await checkTimeListAfter(props.backList[rc.id], rc.id, data.marketDefinition.openDate, props.onPlaceOrder, marketId, \"BACK\", props.matchedBets, props.unmatchedBets)\r\n            if (adjustedBackOrderArray.length > 0) {\r\n              adjustedBackList[rc.id] = adjustedBackOrderArray;\r\n            }\r\n\r\n            const adjustedLayOrderArray = await checkTimeListAfter(props.layList[rc.id], rc.id, data.marketDefinition.openDate, props.onPlaceOrder, marketId, \"LAY\", props.matchedBets, props.unmatchedBets)\r\n            if (adjustedLayOrderArray.length > 0) {\r\n              adjustedLayList[rc.id] = adjustedLayOrderArray;\r\n            }\r\n          }\r\n\r\n          // stop Entry\r\n\r\n          newStopEntryList = stopEntryListChange(props.stopEntryList, rc.id, rc.ltp, props.onPlaceOrder, newStopEntryList, props.unmatchedBets, props.matchedBets);\r\n          console.log(rc.id)\r\n          // We increment and check the stoplosses\r\n          if (props.stopLossList[rc.id] !== undefined) {\r\n            // if it's trailing and the highest LTP went up, then we add a tickoffset\r\n            const maxLTP = props.ladders[rc.id].ltp.sort((a, b) => b - a)[0];\r\n            let adjustedStopLoss = Object.assign({}, stopLossTrailingChange(props.stopLossList, rc.id, rc.ltp, maxLTP))\r\n\r\n            // if hedged, get size (price + hedged profit/loss)\r\n            if (adjustedStopLoss.hedged) {\r\n              const newMatchedBets = Object.values(props.bets.matched).filter(bet => bet.selectionId == adjustedStopLoss.selectionId);\r\n\r\n              const combinedSize =\r\n                newMatchedBets.reduce((a, b) => {\r\n                  return a + b.size\r\n                }, 0)\r\n\r\n              const profitArray = newMatchedBets.map(bet => (bet.side === \"LAY\" ? -1 : 1) * calcHedgedPL2(parseFloat(bet.size), parseFloat(bet.price), parseFloat(adjustedStopLoss.price)));\r\n              const profit = (-1 * profitArray.reduce((a, b) => a + b, 0));\r\n              adjustedStopLoss.size = combinedSize + profit\r\n            }\r\n\r\n            // if it doesn't have a reference or the order has been matched (STOP LOSS)\r\n            const stopLossMatched = stopLossCheck(adjustedStopLoss, rc.id, rc.ltp, props.onPlaceOrder, stopLossOrdersToRemove, adjustedStopLossList, props.unmatchedBets, props.matchedBets)\r\n            adjustedStopLossList = stopLossMatched.adjustedStopLossList;\r\n            stopLossOrdersToRemove = stopLossMatched.stopLossOrdersToRemove;\r\n          }\r\n\r\n        } else {\r\n          // Runner not found so we create the new object with the raw data\r\n          ladders[rc.id] = AddRunner(rc.id, rc);\r\n        }\r\n      }));\r\n\r\n      if (data.marketDefinition) {\r\n        // Event status? In Play?\r\n        props.onMarketStatusChange(data.marketDefinition.status);\r\n        props.setInPlay(data.marketDefinition.inPlay);\r\n\r\n        data.marketDefinition.runners.map(runner => {\r\n          if (runner.status === \"REMOVED\" && runner.id in ladders) {\r\n            nonRunners[runner.id] = ladders[runner.id];\r\n            delete ladders[runner.id];\r\n          }\r\n        });\r\n      }\r\n\r\n      if (stopLossOrdersToRemove.length > 0) {\r\n        await fetch('/api/remove-orders', {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          method: \"POST\",\r\n          body: JSON.stringify(stopLossOrdersToRemove)\r\n        })\r\n      }\r\n\r\n      // so it doesn't mess up the loading of the orders\r\n      if (Object.keys(props.backList).length > 0) {\r\n        props.onChangeBackList(adjustedBackList);\r\n      }\r\n      if (Object.keys(props.layList).length > 0) {\r\n        props.onChangeLayList(adjustedLayList);\r\n      }\r\n      if (Object.keys(props.stopEntryList).length > 0) {\r\n        props.onChangeStopEntryList(newStopEntryList);\r\n      }\r\n      if (Object.keys(props.stopLossList).length > 0) {\r\n        props.onChangeStopLossList(adjustedStopLossList);\r\n      }\r\n\r\n      // Turn the socket off to prevent the listener from runner more than once. It will back on once the component reset.\r\n      props.socket.off(\"mcm\");\r\n\r\n      props.onReceiverLadders(ladders);\r\n      props.onReceiveNonRunners(nonRunners);\r\n      props.onChangeExcludedLadders(Object.keys(ladders).slice(6, Object.keys(ladders).length))\r\n\r\n\r\n      const marketId = getQueryVariable(\"marketId\");\r\n      try {\r\n        const marketBook = await fetch(`/api/list-market-book?marketId=${marketId}`).then(res => res.json());\r\n        const data = marketBook;\r\n        const marketVolume = {};\r\n        Object.values(data.result[0].runners).map(selection => {\r\n          marketVolume[selection.selectionId] = selection.ex.tradedVolume\r\n        })\r\n\r\n        props.onSetMarketVolume(marketVolume)\r\n      } catch (e) { }\r\n\r\n    });\r\n\r\n    /**\r\n     * Listen for Order Change Messages from the Exchange Streaming socket and create/update them\r\n     * @param {obj} data The order change message data:\r\n     */\r\n    props.socket.on(\"ocm\", async data => {\r\n\r\n\r\n      if (data.oc) {\r\n        const newUnmatchedBets = Object.assign({}, props.unmatchedBets);\r\n        const newMatchedBets = Object.assign({}, props.matchedBets);\r\n        let checkForMatchInStopLoss = Object.assign({}, props.stopLossList);\r\n        let checkForMatchInTickOffset = Object.assign({}, props.tickOffsetList);\r\n        let tickOffsetOrdersToRemove = [];\r\n\r\n        data.oc.map(changes => {\r\n          changes.orc.map(runner => {\r\n            if (runner.uo) {\r\n              runner.uo.map(order => {\r\n                // If the bet isn't in the unmatchedBets, we should delete it.\r\n                if (newUnmatchedBets[order.id] !== undefined) {\r\n                  delete newUnmatchedBets[order.id];\r\n                } else if (order.sr == 0) {\r\n                  newMatchedBets[order.id] = newUnmatchedBets[order.id];\r\n                  delete newUnmatchedBets[order.id];\r\n                }\r\n\r\n                checkForMatchInStopLoss = checkStopLossForMatch(props.stopLossList, runner.id, order, checkForMatchInStopLoss);\r\n\r\n                // Checks tick offset and then adds to tickOffsetOrdersToRemove if it passes the test, Gets new tickOffsetList without the Order\r\n                const tickOffsetCheck = checkTickOffsetForMatch(props.tickOffsetList, order, props.onPlaceOrder, tickOffsetOrdersToRemove, checkForMatchInTickOffset, props.unmatchedBets, props.matchedBets)\r\n                checkForMatchInTickOffset = tickOffsetCheck.checkForMatchInTickOffset;\r\n                tickOffsetOrdersToRemove = tickOffsetCheck.tickOffsetOrdersToRemove\r\n\r\n            })\r\n          }\r\n        })\r\n      })\r\n\r\n\r\n        if (tickOffsetOrdersToRemove.length > 0) {\r\n          await fetch('/api/remove-orders', {\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            method: \"POST\",\r\n            body: JSON.stringify(tickOffsetOrdersToRemove)\r\n          })\r\n        }\r\n\r\n        if (Object.keys(props.stopLossList).length > 0) {\r\n          props.onChangeStopLossList(checkForMatchInStopLoss);\r\n        }\r\n\r\n        if (Object.keys(props.tickOffsetList).length > 0) {\r\n          props.onChangeTickOffsetList(checkForMatchInTickOffset);\r\n        }\r\n\r\n        if (Object.keys(props.unmatchedBets).length > 0) {\r\n          props.onChangeOrders({\r\n            unmatched: newUnmatchedBets,\r\n            matched: newMatchedBets,\r\n          });\r\n        }\r\n      }\r\n      props.socket.off(\"ocm\");\r\n    });\r\n  }, [props.ladders]);\r\n\r\n  const renderView = () => {\r\n    switch (props.view) {\r\n      case \"HomeView\":\r\n        return <HomeView />;\r\n      case \"LadderView\":\r\n        return <LadderView />;\r\n      case \"GridView\":\r\n        return <GridView />;\r\n      default:\r\n        return <HomeView />;\r\n    }\r\n  };\r\n\r\n  if (props.isLoading) {\r\n    return (\r\n      <div id=\"spinner\">\r\n        <Loader\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"horizontal-scroll-wrapper\">\r\n        <div className=\"root\">\r\n          {props.marketOpen ? (\r\n            <Helmet>\r\n              <title>\r\n                {`${new Date(\r\n                  props.market.marketStartTime\r\n                ).toLocaleTimeString()} ${props.market.marketName}  ${\r\n                  props.market.event.venue || \"\"\r\n                  }`}\r\n              </title>\r\n            </Helmet>\r\n          ) : null}\r\n          <Siderbar />\r\n          <main className=\"content\">\r\n            <Draggable bounds=\"body\">\r\n              <div\r\n                className=\"box\"\r\n                style={{ position: \"absolute\", top: \"25%\", left: \"50%\", zIndex: 9999 }}\r\n              >\r\n                <DraggableGraph />\r\n              </div>\r\n            </Draggable>\r\n            {renderView()}\r\n            <PremiumPopup />\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\nconst AppWithSocket = props => (\r\n  <SocketContext.Consumer>\r\n    {socket => <App {...props} socket={socket} />}\r\n  </SocketContext.Consumer>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    view: state.settings.view,\r\n    isLoading: state.settings.isLoading,\r\n    market: state.market.currentMarket,\r\n    marketOpen: state.market.marketOpen,\r\n    marketStatus: state.market.status,\r\n    ladders: state.market.ladder,\r\n    nonRunners: state.market.nonRunners,\r\n    premiumMember: state.settings.premiumMember,\r\n    premiumPopup: state.settings.premiumPopupOpen,\r\n    stopLossList: state.stopLoss.list,\r\n    tickOffsetList: state.tickOffset.list,\r\n    stopEntryList: state.stopEntry.list,\r\n    fillOrKillList: state.fillOrKill.list,\r\n    layList: state.lay.list,\r\n    backList: state.back.list,\r\n    unmatchedBets: state.order.bets.unmatched,\r\n    matchedBets: state.order.bets.matched,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setLoading: isLoading => dispatch(actions.setIsLoading(isLoading)),\r\n    onToggleSounds: isSelected => dispatch(actions.toggleSound(isSelected)),\r\n    onToggleTools: settings => dispatch(actions.toggleTools(settings)),\r\n    onToggleUnmatchedBets: settings =>\r\n      dispatch(actions.toggleUnmatchedBets(settings)),\r\n    onToggleMatchedBets: settings =>\r\n      dispatch(actions.toggleMatchedBets(settings)),\r\n    onToggleGraph: settings => dispatch(actions.toggleGraph(settings)),\r\n    onToggleMarketInformation: settings =>\r\n      dispatch(actions.toggleMarketInformation(settings)),\r\n    onUpdateWinMarketsOnly: isChecked => dispatch(actions.setWinMarketsOnly(isChecked)),\r\n    onToggleRules: settings => dispatch(actions.toggleRules(settings)),\r\n    onToggleLadderUnmatched: unmatchedColumn => dispatch(actions.toggleLadderUnmatched(unmatchedColumn)),\r\n    onReceiveStakeBtns: data => dispatch(actions.setStakeBtns(data)),\r\n    onReceiveLayBtns: data => dispatch(actions.setLayBtns(data)),\r\n    onReceiveMarket: market => dispatch(actions2.loadMarket(market)),\r\n    onSelectRunner: runner => dispatch(actions2.setRunner(runner)),\r\n    onUpdateRunners: runners => dispatch(actions2.loadRunners(runners)),\r\n    onReceiverLadders: ladders => dispatch(actions2.loadLadder(ladders)),\r\n    onReceiveNonRunners: nonRunners => dispatch(actions2.loadNonRunners(nonRunners)),\r\n    onChangeExcludedLadders: excludedLadders => dispatch(actions2.updateExcludedLadders(excludedLadders)),\r\n    onMarketStatusChange: isOpen => dispatch(actions2.setMarketStatus(isOpen)),\r\n    setInPlay: inPlay => dispatch(actions2.setInPlay(inPlay)),\r\n    setPremiumStatus: isPremium => dispatch(actions.setPremiumStatus(isPremium)),\r\n    onChangeStopLossList: list => dispatch(updateStopLossList(list)),\r\n    onChangeTickOffsetList: list => dispatch(updateTickOffsetList(list)),\r\n    onChangeStopEntryList: list => dispatch(updateStopEntryList(list)),\r\n    onChangeLayList: list => dispatch(updateLayList(list)),\r\n    onChangeBackList: list => dispatch(updateBackList(list)),\r\n    onPlaceOrder: order => dispatch(placeOrder(order)),\r\n    onChangeFillOrKillList: list => dispatch(updateFillOrKillList(list)),\r\n    onChangeOrders: orders => dispatch(updateOrders(orders)),\r\n    onSetMarketVolume: volume => dispatch(actions2.setMarketVolume(volume))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AppWithSocket);","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div style={{width: '100%', height: '30%'}}>\r\n            <div style={{height: '20%', backgroundColor: 'rgb(38, 194, 129)', color: 'white', paddingLeft: '1%', display: 'flex', alignItems: 'center', justifyContent: 'flex-start', fontSize: '1.5em', fontWeight: 'bold'}}>\r\n                Sports Trading App Market Settlement\r\n            </div>\r\n            <div style={{paddingLeft: '1%', display: 'flex', flexDirection: 'column', height: '80%', justifyContent: 'center', border: 'solid 2px rgb(83, 221, 164)', borderTop: 'none'}}>\r\n                <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                    <p style={{fontSize: '1.5em', marginBottom: '0.5rem', fontFamily: 'Open Sans'}}>17:35 2m INHF Galway</p>\r\n                    <em style={{color: 'gray',  fontWeight: '200'}}>Created Sat 26 Oct 2019 at 18:47 (commission not included)</em>\r\n                </div>\r\n                \r\n                <a href=\"http://localhost:8080/dashboard\" style={{marginTop: '2%', backgroundColor: 'rgb(38, 194, 129)', width: 'max-content', padding: '0.75% 1%', textDecoration: 'none', color: 'white'}}>Back To Dashboard →</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    tableWrapper: {\r\n      maxHeight: '55vh',\r\n      overflowX: 'hidden'\r\n    },\r\n});\r\n\r\nconst columns = [\r\n    { id: 'selection', label: 'Selection', minWidth: 170 },\r\n    { id: 'win', label: 'If Win', minWidth: 75 },\r\n    { id: 'lose', label: 'If Lose', minWidth: 75 },\r\n    { id: 'settled', label: 'Settled', minWidth: 75 },\r\n    { id: 'result', label: 'Result', minWidth: 50 },\r\n];\r\n\r\nexport default ({matchedBets, runners}) => {\r\n\r\n    function createData(selection, win, lose, settled, result) {\r\n        return { selection, win, lose, settled, result };\r\n    }\r\n\r\n    const selectionWithBets = {};\r\n\r\n    matchedBets.map(bet => {\r\n        if (selectionWithBets[bet.selectionId]) selectionWithBets[bet.selectionId].push(bet)\r\n        else selectionWithBets[bet.selectionId] = [bet]\r\n    })\r\n    \r\n    const rows = [];\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{width: '49%', height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                    <div style={{height: '10%', backgroundColor: 'rgb(103, 128, 159)', color: 'white', paddingLeft: '2%', display: 'flex', alignItems: 'center', justifyContent: 'flex-start', fontSize: '1.3em', fontWeight: 'bold'}}>\r\n                        Closed Market Report\r\n                    </div>\r\n                    <Paper className={classes.root} style={{height: '90%'}}>\r\n                        <div style={{height: '100%', border: 'solid 2px rgb(146, 164, 186)', borderTop: 'none'}} className={classes.tableWrapper}>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                    {columns.map(column => (\r\n                                        <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                        >\r\n                                        {column.label}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.map(row => {\r\n                                    return (\r\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                        {columns.map(column => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                            </TableCell>\r\n                                            );\r\n                                        })}\r\n                                        </TableRow>\r\n                                    );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    tableWrapper: {\r\n      maxHeight: '55vh',\r\n      overflowX: 'hidden'\r\n    },\r\n});\r\n\r\nconst columns = [\r\n    { id: 'placedDate', label: 'Placed', minWidth: 75 },\r\n    { id: 'selection', label: 'Selection', minWidth: 75 },\r\n    { id: 'averagePriceMatched', label: 'Odds', minWidth: 75 },\r\n    { id: 'sizeMatched', label: 'Stake / (Liability)', minWidth: 200 },\r\n    { id: 'win', label: 'Status', minWidth: 75 },\r\n];\r\n\r\nexport default ({matchedBets, runners = []}) => {\r\n\r\n    const runnersObject = {};\r\n    runners.map(runner => {\r\n        runnersObject[runner.selectionId] = runner.runnerName\r\n    })\r\n\r\n    const sortedMatchedBets = matchedBets.sort((a, b) => Date.parse(b.placedDate) - Date.parse(a.placedDate));\r\n    const matchedBetsAdjustments = sortedMatchedBets.map(bet => getStatus(getRunner(calculateNewPlacedDate(bet), runnersObject)))\r\n\r\n    console.log(runners)\r\n\r\n\r\n    const rows = matchedBetsAdjustments\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{width: '49%', height: '100%', display: 'flex', flexDirection: 'column'}}>\r\n                    <div style={{height: '10%', backgroundColor: 'rgb(103, 128, 159)', color: 'white', paddingLeft: '2%', display: 'flex', alignItems: 'center', justifyContent: 'flex-start', fontSize: '1.3em', fontWeight: 'bold'}}>\r\n                        Bets Placed\r\n                    </div>\r\n                    <Paper className={classes.root} style={{height: '90%'}}>\r\n                        <div style={{height: '100%', border: 'solid 2px rgb(146, 164, 186)', borderTop: 'none'}} className={classes.tableWrapper}>\r\n                            <Table stickyHeader aria-label=\"sticky table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                    {columns.map(column => (\r\n                                        <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                        >\r\n                                        {column.label}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {rows.map(row => {\r\n                                        return (\r\n                                            <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                            {columns.map(column => {\r\n                                                const value = row[column.id];\r\n                                                const isSideBack = row.side === 'BACK'\r\n                                                return (\r\n                                                    <TableCell key={column.id} align={column.align}>\r\n                                                        {column.id === \"sizeMatched\" ? <span style={{backgroundColor: isSideBack ? 'rgb(114, 187, 239)' : 'rgb(250, 169, 186)', padding: '2px', paddingLeft: '4px', width: '20%', borderRadius: '2px', marginRight: '2%', display: 'inline-block', color: 'white'}}>{(isSideBack ? \"BACK\" : \"LAY\")}</span> : null}\r\n                                                        {column.id === \"win\" ? <span style={{display: 'inline-block', width: '35%', padding: '3px', borderRadius: '3px', textAlign: 'center', color: 'white', backgroundColor: column.win ? 'rgb(37, 194, 129)' : 'rgb(237, 107, 117)'}}>{column.win ? \"Won\" : \"Lost\"}</span> : null}\r\n                                                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n    )\r\n}\r\n\r\nconst calculateNewPlacedDate = bet => {\r\n    const betPlacedDate = new Date(bet.placedDate)\r\n    const currentDate = new Date(Date.now()).getDate()\r\n    const placedDate = betPlacedDate.getDate()\r\n\r\n    const currentMonth = new Date(Date.now()).getMonth()\r\n    const placedMonth = betPlacedDate.getMonth()\r\n\r\n    const betPlacedOnDiffDay = currentMonth !== placedMonth || placedDate > currentDate || placedDate < currentDate \r\n\r\n    const newPlacedDate = betPlacedOnDiffDay ? \r\n                            betPlacedDate.toLocaleString('en-GB', { timeZone: 'UTC', hour12: false }) :\r\n                            betPlacedDate.toLocaleTimeString(betPlacedDate, { timeZone: 'UTC', hour12: false })\r\n                            \r\n    return Object.assign({}, bet, {placedDate: newPlacedDate})\r\n}\r\n\r\nconst getRunner = (bet, runners) => {\r\n    return Object.assign({}, bet, {selection: runners[bet.selectionId]})\r\n}\r\n\r\nconst getStatus = (bet, runners) => {\r\n    if (runners) {\r\n        return Object.assign({}, bet, {win: runners[bet.selectionId].status === \"WINNER\"})\r\n    } else {\r\n        return bet;\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { useCookies } from 'react-cookie';\r\nimport getQueryVariable from \"../utils/GetQueryVariable\";\r\nimport MarketSettlement from \"./ClosedMarketView/MarketSettlement\";\r\nimport ClosedMarketReport from './ClosedMarketView/ClosedMarketReport'\r\nimport BetsPlaced from \"./ClosedMarketView/BetsPlaced\";\r\n\r\nconst GetClosedMarketStats = () => {\r\n    const [cookies] = useCookies(['sessionKey', 'username']);\r\n    const [completedOrders, setCompletedOrders] = useState([]);\r\n    const [marketInfo, setMarketInfo] = useState({});\r\n    const marketId = getQueryVariable(\"marketId\");\r\n\r\n    const loadSession = async () => {\r\n        await fetch(\r\n          `/api/load-session?sessionKey=${encodeURIComponent(\r\n            cookies.sessionKey\r\n          )}&email=${encodeURIComponent(cookies.email)}`\r\n        );\r\n    };\r\n    \r\n    useEffect(() => {\r\n        const getMarketInfo = async () => {\r\n            // await loadSession();\r\n            \r\n            const currentOrders = await fetch(`/api/listCurrentOrders?marketId=${marketId}`).then(res => res.json()).then(res => res.currentOrders);\r\n            const completedOrders = currentOrders.filter(order => order.status === \"EXECUTION_COMPLETE\")\r\n            setCompletedOrders(completedOrders)\r\n\r\n            const marketInfo = await fetch(`/api/list-market-book?marketId=${marketId}`).then(res => res.json()).then(res => res.response.result[0])\r\n            setMarketInfo(marketInfo)\r\n        }\r\n        getMarketInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{padding: '2%'}}>\r\n            <MarketSettlement />\r\n            <div style={{width: '100%', height: '60%', marginTop: '1.5%', display: 'flex', justifyContent: 'space-between'}}>\r\n                <ClosedMarketReport matchedBets = {completedOrders} runners = {marketInfo.runners ? marketInfo.runners : []}/>\r\n                <BetsPlaced matchedBets = {completedOrders} runners = {marketInfo.runners ? marketInfo.runners : []}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GetClosedMarketStats)\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst Authentication = props => {\r\n  const [cookies, setCookie] = useCookies(['sessionKey', 'username', 'refreshToken', 'expiresIn']);\r\n  const [isSubscribed, setSubscribed] = useState(null);\r\n  const [tokenGranted, setTokenGranted] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (cookies.sessionKey) {\r\n      fetch(`/api/load-session?sessionKey=${encodeURIComponent(cookies.sessionKey)}&email=${cookies.username}`)\r\n        .then(res => {\r\n          fetch(\"/api/get-subscription-status\")\r\n            .then(res => res.json())\r\n            .then(res => {\r\n              setSubscribed(res.isSubscribed);\r\n\r\n              if (isSubscribed === false || !res.accessToken) {\r\n                window.location = \"http://identitysso.betfair.com/view/vendor-login?client_id=74333&response_type=code&redirect_uri=validation\";\r\n              } else {\r\n                fetch(\"/api/request-access-token?tokenType=REFRESH_TOKEN\")\r\n                  .then(res => res.json())\r\n                  .then(res => {\r\n                    setCookie('accessToken', res.accessToken);\r\n                    setCookie('refreshToken', res.refreshToken);\r\n                    setCookie('expiresIn', res.expiresIn);\r\n                    \r\n                    setTokenGranted(true);\r\n                  });\r\n              }\r\n            });\r\n        });\r\n    }\r\n  });\r\n  return (\r\n    <>\r\n      {tokenGranted === true && isSubscribed === true ? <Redirect to='/dashboard' /> : null}\r\n      <section>Redirecting...</section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect()(Authentication);","import React, { useEffect } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../actions/account\";\r\nimport getQueryVariable from \"../utils/GetQueryVariable\";\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst OAuthRedirect = props => {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['sessionKey', 'username', 'refreshToken', 'expiresIn']);\r\n    useEffect(() => {\r\n        var code = getQueryVariable(\"code\");\r\n\r\n        // var sessionKey =  localStorage.getItem(\"sessionKey\");\r\n        if (cookies.sessionKey) {\r\n            fetch(`/api/load-session?sessionKey=${encodeURIComponent(cookies.sessionKey)}&email=${encodeURIComponent(cookies.username)}`)\r\n            .then(res => {\r\n              if (code && res.status === 200) {\r\n                fetch(`/api/request-access-token?tokenType=AUTHORIZATION_CODE&code=${encodeURIComponent(code)}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                  setCookie('accessToken', data.accessToken);\r\n                  setCookie('refreshToken', data.refreshToken);\r\n                  setCookie('expiresIn', data.expiresIn);\r\n                  \r\n                  props.onLogin(true);\r\n                });\r\n            }\r\n        });\r\n      }\r\n    }, []);\r\n\r\n    if (props.loggedIn) {\r\n        return <Redirect to='/dashboard' />\r\n    } else {\r\n        return (<section>Redirecting...</section>);\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      loggedIn: state.account.loggedIn\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      onLogin: loggedIn => dispatch(actions.setLoggedIn(loggedIn))\r\n    };\r\n  };\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(OAuthRedirect);\r\n  ","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport reducers from \"./utils/Reducers\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Logout from \"./components/Logout\";\r\nimport App from \"./components/App\";\r\nimport GetClosedMarketStats from \"./components/GetClosedMarketStats\";\r\nimport Authentication from \"./components/Authentication\";\r\nimport OAuthRedirect from \"./components/OAuthRedirect\";\r\nimport openSocket from \"socket.io-client\";\r\nimport SocketContext from \"./SocketContext\";\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nconst socket = openSocket(\"http://localhost:8000\");\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <CookiesProvider>\r\n      <SocketContext.Provider value={socket}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Login} />\r\n            <Route path=\"/dashboard\" component={App} />\r\n            <Route path=\"/getClosedMarketStats\" component={GetClosedMarketStats} />\r\n            <Route path=\"/authentication\" exact component={Authentication} />\r\n            <Route path=\"/validation\" exact component={OAuthRedirect} />\r\n            <Route path=\"/logout\" exact component={Logout} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </SocketContext.Provider>\r\n    </CookiesProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}